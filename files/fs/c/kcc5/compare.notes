Notes from observing changes in LIBC due to new compiler:

 QSORT	- lots of ptr cmp/diff improvement!  Should test.
 STRING	- OK, but uses TRNE R,777 instead of JUMPE R, this could be optimized
		if the bytesize were kept with the pseudo-op, so we cd be
		assured that the mask was done properly.  (Otherwise couldn't
		be sure that the LDB wasn't of a halfword or something worse!)
 GETTIM, TIME	 - OK, maybe use ints instead of unsigned ints.
 FREAD, FWRITE	- OK, but note minor optimization:
		TLC of a constant (for unsigned compare) should become
		a MOVE of the tlc'd constant, which can be further optimized
		into the CAMx.
		If comparing unsigned to >= 0 or <= 0, change to zero test.
		If comparing unsigned to > 1 or < 1, ditto.
 PRINTF	- OK, Some misopt fixed by foldbyte fix.  Note minor optimization:
		IBP M ? SETZ R, ? DPB R,M  could be SETZ R, ? IDPB R,M
		Still has some misopt:
			MOVE S,[pconst] ? MOVE R,mem ? ADJBP R,S
 PUTS	- OK, but note minor optimization:
		if doing an ANDI R,mask and R is set to a known constant, then
		can flush the ANDI if constant fits within mask.
		Create new auxiliary subr to do what foldbyte() constant lookup
		does.
