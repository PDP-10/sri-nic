;;
;;	this file describes all the functionality required by existing
;;	NIC software from a command package, and how it is done in the
;;	T20 "comnd" library, and in the CCMD C-based command parser.
;;

structures:

function			comnd			ccmd
----------------------------------------------------------------------
the state block			cm_state		csb
keyword table			cm_table		keytab
fdb				cm_fdb			fdb

procedures:

function			comnd			ccmd
----------------------------------------------------------------------
initialize package		cm_init()		-not needed-
arbitrary parse			cm_parse()		parse()
parse for confirmation		cm_confirm()		confirm()
parse for "noise"		cm_noise()		noise()
set reparse address		cm_set_reparse()	cmsetrp()
dynamically link fdbs		cm_link_fdb()		--
set the main prompt		cm_prompt()		prompt()
setup for file parsing		cm_setup_gtjfn()	??
do "terpri"			cm_terpri()		--
turn gross halfword pointer-type
table entry into real pointer	cm_global_pointer()	??

static object building:

function			comnd			ccmd
----------------------------------------------------------------------
define a fdb			cm_def_fdb()		--
start a new table		cm_table_begin()	--
add entry to open table		cm_table_entry()	--
close/finish table		cm_table_end()		--

dynamic object building:

function			comnd		ccmd
----------------------------------------------------------------------
add table entry			cm_put_table()
end/finalize dynamic table	cm_finalize()
