	TITLE	CCERR
	.REQUEST C:LIBc.REL
	$$CVER==<2,,3>
	INTERN $$CVER
	OPDEF ADJBP [IBP]
DEFINE %%CHBP(A,M)
<	SETO A,
	ADJBP A,M
>
IFNDEF ERJMP,< OPDEF ERJMP [JUMP 16,] >
OPDEF ERJMPA [ERJMP]
OPDEF	XMOVEI	[SETMI]
	DEFINE IFIW <SETZ >
OPDEF XBLT [020000,,0]
	TWOSEG	400000	
	RELOC	0	
	RELOC	400000	
	DEFINE %%CODE <RELOC>
	DEFINE %%DATA <RELOC>
PURGE IFE,IFN,IFG,IFGE,IFL,IFLE,IFDEF,IFNDEF,IFIDN,IFDIF
NOTE:
	XMOVEI 3,-1(17)
	PUSH 17,3
	SKIPN 5,NOWARN
	 JRST $1
	ADJSP 17,-1
	POPJ 17,
$1==.
	PUSH 17,0(17)
	PUSH 17,-3(17)
	PUSH 17,[$$BP90+$$SECT,,$2]
	PUSHJ 17,%CONTE
	ADJSP 17,-4
	POPJ 17,
$2==.
	BYTE	(9) 133,116,157,164
	BYTE	(9) 145,135,40,0
	

ADVISE:
	XMOVEI 3,-1(17)
	PUSH 17,3
	SKIPN 5,NOWARN
	 JRST $3
	ADJSP 17,-1
	POPJ 17,
$3==.
	PUSH 17,0(17)
	PUSH 17,-3(17)
	PUSH 17,[$$BP90+$$SECT,,$4]
	PUSHJ 17,%CONTE
	ADJSP 17,-4
	POPJ 17,
$4==.
	BYTE	(9) 133,101,144,166
	BYTE	(9) 151,163,157,162
	BYTE	(9) 171,135,40,0
	

WARN:
	XMOVEI 3,-1(17)
	PUSH 17,3
	SKIPN 5,NOWARN
	 JRST $5
	ADJSP 17,-1
	POPJ 17,
$5==.
	PUSH 17,0(17)
	PUSH 17,-3(17)
	PUSH 17,[$$BP90+$$SECT,,$6]
	PUSHJ 17,%CONTE
	ADJSP 17,-4
	POPJ 17,
$6==.
	BYTE	(9) 133,127,141,162
	BYTE	(9) 156,151,156,147
	BYTE	(9) 135,40,0
	

INT.WA:
	XMOVEI 5,-1(17)
	PUSH 17,5
	PUSH 17,5
	PUSH 17,-3(17)
	PUSH 17,[$$BP90+$$SECT,,$7]
	PUSHJ 17,%CONTE
	ADJSP 17,-4
	POPJ 17,
$7==.
	BYTE	(9) 133,127,141,162
	BYTE	(9) 156,151,156,147
	BYTE	(9) 135,133,111,156
	BYTE	(9) 164,145,162,156
	BYTE	(9) 141,154,40,145
	BYTE	(9) 162,162,157,162
	BYTE	(9) 135,40,0
	

ERROR:
	XMOVEI 6,-1(17)
	PUSH 17,6
	AOS 4,NERROR
	PUSH 17,6
	PUSH 17,-3(17)
	PUSH 17,[$$BP90+$$SECT,,$8]
	PUSHJ 17,%CONTE
	ADJSP 17,-4
	POPJ 17,
$8==.
	BYTE	(9) 0
	

INT.ER:
	XMOVEI 6,-1(17)
	PUSH 17,6
	AOS 4,NERROR
	PUSH 17,6
	PUSH 17,-3(17)
	PUSH 17,[$$BP90+$$SECT,,$9]
	PUSHJ 17,%CONTE
	ADJSP 17,-4
	POPJ 17,
$9==.
	BYTE	(9) 133,111,156,164
	BYTE	(9) 145,162,156,141
	BYTE	(9) 154,40,145,162
	BYTE	(9) 162,157,162,135
	BYTE	(9) 40,0
	

JMSG:
	XMOVEI 5,-1(17)
	PUSH 17,5
	PUSH 17,5
	PUSH 17,-3(17)
	PUSHJ 17,%ERRMA
	MOVEM 1,-1(17)
	ADJSP 17,-1
	PUSH 17,[$$BP90+$$SECT,,$10]
	XMOVEI 4,.SIOS*1+46
	PUSH 17,4
	PUSHJ 17,FPRINT
	ADJSP 17,-4
	POPJ 17,
$10==.
	BYTE	(9) 77,113,103,103
	BYTE	(9) 40,55,40,45
	BYTE	(9) 163,12,0
	

JERR:
	XMOVEI 6,-1(17)
	PUSH 17,6
	AOS 4,NERROR
	PUSH 17,6
	PUSH 17,-3(17)
	PUSHJ 17,%ERRMA
	MOVEM 1,-1(17)
	ADJSP 17,-1
	PUSH 17,[$$BP90+$$SECT,,$11]
	XMOVEI 4,.SIOS*1+46
	PUSH 17,4
	PUSHJ 17,FPRINT
	ADJSP 17,-4
	POPJ 17,
$11==.
	BYTE	(9) 77,113,103,103
	BYTE	(9) 40,55,40,45
	BYTE	(9) 163,12,0
	

EFATAL:
	XMOVEI 5,-1(17)
	PUSH 17,5
	PUSH 17,5
	PUSH 17,-3(17)
	PUSH 17,[$$BP90+$$SECT,,$12]
	PUSHJ 17,%CONTE
	ADJSP 17,-3
	PUSH 17,[1]
	PUSHJ 17,EXIT
	ADJSP 17,-2
	POPJ 17,
$12==.
	BYTE	(9) 133,106,101,124
	BYTE	(9) 101,114,135,40
	BYTE	(9) 0
	

FATAL:
	XMOVEI 5,-1(17)
	PUSH 17,5
	PUSH 17,5
	PUSH 17,-3(17)
	PUSHJ 17,%ERRMA
	MOVEM 1,-1(17)
	ADJSP 17,-1
	PUSH 17,[$$BP90+$$SECT,,$13]
	XMOVEI 4,.SIOS*1+46
	PUSH 17,4
	PUSHJ 17,FPRINT
	ADJSP 17,-3
	PUSH 17,[1]
	PUSHJ 17,EXIT
	ADJSP 17,-2
	POPJ 17,
$13==.
	BYTE	(9) 77,113,103,103
	BYTE	(9) 40,55,40,106
	BYTE	(9) 141,164,141,154
	BYTE	(9) 40,145,162,162
	BYTE	(9) 157,162,72,40
	BYTE	(9) 45,163,12,0
	

ERRFOP:
	PUSH 17,-2(17)
	PUSH 17,-2(17)
	PUSH 17,[$$BP90+$$SECT,,$14]
	PUSHJ 17,JERR
	ADJSP 17,-3
	POPJ 17,
$14==.
	BYTE	(9) 103,157,165,154
	BYTE	(9) 144,40,156,157
	BYTE	(9) 164,40,157,160
	BYTE	(9) 145,156,40,45
	BYTE	(9) 163,40,146,151
	BYTE	(9) 154,145,40,42
	BYTE	(9) 45,163,42,0
	

ERRNOM:
	PUSH 17,-1(17)
	PUSH 17,[$$BP90+$$SECT,,$15]
	PUSHJ 17,EFATAL
	ADJSP 17,-2
	POPJ 17,
$15==.
	BYTE	(9) 117,165,164,40
	BYTE	(9) 157,146,40,155
	BYTE	(9) 145,155,157,162
	BYTE	(9) 171,40,45,163
	BYTE	(9) 0
	


	%%DATA
$16:	BLOCK 764

	%%CODE
%ERRMA:
	XMOVEI 3,-2(17)
	PUSH 17,3
	PUSH 17,-2(17)
	PUSH 17,[$$BP90+$$SECT,,$16]
	PUSHJ 17,%EVSPR
	MOVE 1,[$$BP90+$$SECT,,$16]
	ADJSP 17,-3
	POPJ 17,
%CONTE:
	ADJSP 17,606
	MOVE 4,LINE
	MOVEM 4,0(17)
	PUSH 17,-611(17)
	PUSH 17,-611(17)
	PUSHJ 17,%ERRMA
	ADJSP 17,-2
	MOVEM 1,-605(17)
	MOVE 5,ERPTR
	CAMN 5,[$$BP90+$$SECT,,ERRLIN]
	 JRST $17
	SETO 3,
	ADJBP 3,5
	LDB 4,3
	CAIN 4,12
	 SOS 6,0(17)
$17==.
	PUSH 17,-605(17)
	PUSH 17,-610(17)
	PUSH 17,FLINE
	PUSH 17,[$$BP90+$$SECT,,INPFNA]
	PUSH 17,[$$BP90+$$SECT,,$18]
	XMOVEI 4,.SIOS*1+46
	PUSH 17,4
	PUSHJ 17,FPRINT
	ADJSP 17,-6
	SKIPE 4,FLINE
	 JRST $19
	ADJSP 17,-606
	POPJ 17,
$19==.
	PUSH 17,[$$BP90+$$SECT,,$21]
	XMOVEI 3,-603(17)
	TLO 3,$$BP90
	PUSH 17,3
	PUSHJ 17,ESTRCP
	ADJSP 17,-2
	MOVEM 1,-604(17)
	SKIPN 5,CURFN
	 JRST $22
	ADDI 5,2
	TLO 5,$$BP90
	PUSH 17,5
	PUSH 17,1
	PUSHJ 17,ESTRCP
	ADJSP 17,-2
	MOVEM 1,-604(17)
	MOVE 5,FLINE
	CAMG 5,CURFNL
	 JRST $23
	SUB 5,CURFNL
	PUSH 17,5
	PUSH 17,[$$BP90+$$SECT,,$24]
	PUSH 17,1
	PUSHJ 17,SPRINT
	ADJSP 17,-3
	PUSH 17,-604(17)
	PUSHJ 17,STRLEN
	ADJSP 17,-1
	ADJBP 1,-604(17)
	MOVEM 1,-604(17)
$23==.
	PUSH 17,[$$BP90+$$SECT,,$25]
	PUSH 17,-605(17)
	PUSHJ 17,ESTRCP
	ADJSP 17,-2
	MOVEM 1,-604(17)
$22==.
	PUSH 17,0(17)
	PUSH 17,PAGE
	PUSH 17,[$$BP90+$$SECT,,$26]
	PUSH 17,-607(17)
	PUSHJ 17,SPRINT
	XMOVEI 3,-606(17)
	TLO 3,$$BP90
	MOVEM 3,-3(17)
	ADJSP 17,-3
	PUSHJ 17,STRLEN
	MOVEM 1,-2(17)
	XMOVEI 4,.SIOS*1+46
	MOVEM 4,0(17)
	XMOVEI 3,-603(17)
	TLO 3,$$BP90
	PUSH 17,3
	PUSHJ 17,FPUTS
	ADJSP 17,-2
	SKIPN 4,ERCSIZ
	 SKIPA 3,[117]
	 TRNA 
	 MOVEM 3,ERCSIZ
	MOVE 6,ERCSIZ
	SUBB 6,-1(17)
	XMOVEI 5,-602(17)
	TLO 5,$$BP90
	MOVEM 5,-604(17)
	MOVE 10,ERPTR
	MOVEM 10,-603(17)
	MOVE 11,ERPLEF
	MOVEM 11,-2(17)
$28==.
	LDB 5,-603(17)
	JUMPN 5,$29
	SOSG 4,-2(17)
	 JRST $29
	IBP -603(17)
	JRST $28
$29==.
	SKIPG 5,-2(17)
	 JRST $31
	PUSH 17,5
	PUSH 17,-604(17)
	XMOVEI 3,-604(17)
	TLO 3,$$BP90
	PUSH 17,3
	PUSHJ 17,%ECTRA
	MOVEI 3,400
	SUB 3,ERPLEF
	MOVEM 3,-2(17)
	ADJSP 17,-2
	PUSH 17,[$$BP90+$$SECT,,ERRLIN]
	XMOVEI 4,-604(17)
	TLO 4,$$BP90
	PUSH 17,4
	PUSHJ 17,STRLEN
	XMOVEI 3,-605(17)
	TLO 3,$$BP90
	ADJBP 1,3
	MOVEM 1,0(17)
	PUSHJ 17,%ECTRA
	ADJSP 17,-3
	JRST $30
$31==.
	MOVE 3,[$$BP90+$$SECT,,ERRLIN]
	MOVEM 3,-603(17)
	MOVEI 4,400
	SUB 4,ERPLEF
	MOVEM 4,-2(17)
$32==.
	LDB 5,-603(17)
	JUMPN 5,$33
	SOSG 4,-2(17)
	 JRST $33
	IBP -603(17)
	JRST $32
$33==.
	PUSH 17,-2(17)
	PUSH 17,-604(17)
	XMOVEI 3,-604(17)
	TLO 3,$$BP90
	PUSH 17,3
	PUSHJ 17,%ECTRA
	ADJSP 17,-3
$30==.
	XMOVEI 3,-602(17)
	TLO 3,$$BP90
	MOVEM 3,-604(17)
	PUSH 17,3
	PUSHJ 17,STRLEN
	ADJSP 17,-1
	MOVEM 1,-2(17)
	CAMG 1,-1(17)
	 JRST $34
	MOVE 4,1
	SUB 4,-1(17)
	ADJBP 4,-604(17)
	MOVEM 4,-604(17)
$34==.
	XMOVEI 4,.SIOS*1+46
	PUSH 17,4
	PUSH 17,-605(17)
	PUSHJ 17,FPUTS
	XMOVEI 4,.SIOS*1+46
	MOVEM 4,-1(17)
	ADJSP 17,-1
	PUSH 17,[12]
	PUSHJ 17,FPUTC
	XMOVEI 4,.SIOS*1+46
	MOVEM 4,-1(17)
	ADJSP 17,-1
	PUSH 17,[12]
	PUSHJ 17,FPUTC
	ADJSP 17,-610
	POPJ 17,
$26==.
	BYTE	(9) 160,56,45,144
	BYTE	(9) 40,154,56,45
	BYTE	(9) 144,51,72,40
	BYTE	(9) 0
	

$25==.
	BYTE	(9) 54,40,0
	

$24==.
	BYTE	(9) 53,45,144,0
	

$21==.
	BYTE	(9) 40,40,40,40
	BYTE	(9) 40,40,40,50
	BYTE	(9) 0
	

$18==.
	BYTE	(9) 42,45,163,42
	BYTE	(9) 54,40,154,151
	BYTE	(9) 156,145,40,45
	BYTE	(9) 144,72,40,45
	BYTE	(9) 163,45,163,12
	BYTE	(9) 0
	

%ECTRA:
	ADJSP 17,4
$35==.
	SOSGE 3,-7(17)
	 JRST $36
	LDB 7,-6(17)
	IBP -6(17)
	MOVEM 7,-3(17)
	MOVE 5,CTFTAB*1+1(7)
	TRNN 5,174
	 JRST $38
	DPB 7,-5(17)
	IBP -5(17)
	JRST $35
$38==.
	MOVE 4,-3(17)
	MOVM 5,4
	IDIVI 5,7
	CAME 4,$46(6)
	 JRST $45
	JRST @$47(6)
$46==.
	 777
	 10
	 11
	 12
	 13
	 14
	 15
$47==.
	IFIW $39
	IFIW $40
	IFIW $44
	IFIW $44
	IFIW $42
	IFIW $41
	IFIW $43
$39==.
	MOVE 3,[$$BP90+$$SECT,,$48]
	MOVEM 3,-2(17)
	JRST $37
$40==.
	MOVE 3,[$$BP90+$$SECT,,$49]
	MOVEM 3,-2(17)
	JRST $37
$41==.
	MOVE 3,[$$BP90+$$SECT,,$50]
	MOVEM 3,-2(17)
	JRST $37
$42==.
	MOVE 3,[$$BP90+$$SECT,,$51]
	MOVEM 3,-2(17)
	JRST $37
$43==.
	MOVE 3,[$$BP90+$$SECT,,$52]
	MOVEM 3,-2(17)
	JRST $37
$44==.
	MOVE 3,[$$BP90+$$SECT,,$53]
	MOVEM 3,-2(17)
	JRST $37
$45==.
	PUSH 17,-3(17)
	PUSH 17,[$$BP90+$$SECT,,$54]
	XMOVEI 3,-3(17)
	TLO 3,$$BP90
	MOVEM 3,-4(17)
	PUSH 17,3
	PUSHJ 17,SPRINT
	ADJSP 17,-3
$37==.
	PUSH 17,-2(17)
	PUSH 17,-6(17)
	PUSHJ 17,ESTRCP
	ADJSP 17,-2
	MOVEM 1,-5(17)
	JRST $35
$36==.
	SETZ 3,
	DPB 3,-5(17)
	ADJSP 17,-4
	POPJ 17,
$54==.
	BYTE	(9) 74,134,45,157
	BYTE	(9) 76,0
	

$53==.
	BYTE	(9) 40,0
	

$52==.
	BYTE	(9) 74,134,162,76
	BYTE	(9) 0
	

$51==.
	BYTE	(9) 74,134,166,76
	BYTE	(9) 0
	

$50==.
	BYTE	(9) 74,134,146,76
	BYTE	(9) 0
	

$49==.
	BYTE	(9) 74,134,142,76
	BYTE	(9) 0
	

$48==.
	BYTE	(9) 74,105,117,106
	BYTE	(9) 76,0
	

%EVSPR:
	ADJSP 17,7
	SETZB 3,-1(17)
	MOVE 5,-12(17)
	MOVE 4,0(5)
	MOVEM 4,0(17)
	LDB 6,-11(17)
	DPB 6,-10(17)
$55==.
	LDB 4,-10(17)
	JUMPE 4,$56
	CAIE 4,45
	 AOSA 3,-1(17)
	 TRNA 
	 JRST $57
	ILDB 5,-11(17)
	MOVM 6,5
	IDIVI 6,12
	CAME 5,$65(7)
	 JRST $64
	JRST @$66(7)
$65==.
	 -1
	 121
	 -1
	 123
	 -1
	 -1
	 -1
	 45
	 116
	 105
$66==.
	IFIW $64
	IFIW $62
	IFIW $64
	IFIW $63
	IFIW $64
	IFIW $64
	IFIW $64
	IFIW $57
	IFIW $61
	IFIW $60
$60==.
	SOS 3,0(17)
	MOVE 4,0(3)
	MOVEM 4,-11(17)
	SETO 5,
	ADJBP 5,-11(17)
	MOVEM 5,-11(17)
	SETZB 6,-6(17)
	JRST $59
$61==.
	SOS 3,0(17)
	MOVE 6,0(3)
	MOVEM 6,-3(17)
	PUSH 17,0(6)
	PUSHJ 17,%TOKNA
	MOVEM 1,0(17)
	MOVE 5,-4(17)
	PUSH 17,0(5)
	PUSH 17,5
	PUSHJ 17,NODEID
	MOVEM 1,0(17)
	PUSH 17,[$$BP90+$$SECT,,$67]
	PUSH 17,-14(17)
	PUSHJ 17,SPRINT
	ADJSP 17,-5
	MOVEM 1,-6(17)
	JRST $59
$62==.
	SOS 3,0(17)
	MOVE 6,0(3)
	MOVEM 6,-6(17)
	PUSH 17,6
	PUSHJ 17,%TOKNA
	MOVEM 1,0(17)
	PUSH 17,-7(17)
	PUSH 17,[$$BP90+$$SECT,,$68]
	PUSH 17,-13(17)
	PUSHJ 17,SPRINT
	ADJSP 17,-4
	MOVEM 1,-6(17)
	JRST $59
$63==.
	SOS 3,0(17)
	MOVE 10,0(3)
	MOVEM 10,-2(17)
	ADDI 10,2
	TLO 10,$$BP90
	MOVEM 10,-4(17)
	MOVEI 4,42
	MOVEM 4,-6(17)
	MOVEI 5,37
	MOVEM 5,-5(17)
	LDB 6,10
	MOVM 11,6
	IDIVI 11,11
	CAME 6,$72(12)
	 JRST $69
	JRST @$73(12)
$72==.
	 -1
	 100
	 -1
	 -1
	 136
	 -1
	 140
	 53
	 -1
$73==.
	IFIW $69
	IFIW $71
	IFIW $69
	IFIW $69
	IFIW $71
	IFIW $69
	IFIW $70
	IFIW $71
	IFIW $69
$70==.
	MOVEI 3,140
	MOVEM 3,-6(17)
$71==.
	SOS 3,-5(17)
	IBP -4(17)
$69==.
	PUSH 17,-6(17)
	PUSH 17,-5(17)
	PUSH 17,-7(17)
	PUSH 17,-11(17)
	PUSH 17,[$$BP90+$$SECT,,$74]
	PUSH 17,-15(17)
	PUSHJ 17,SPRINT
	ADJSP 17,-6
	MOVEM 1,-6(17)
	JRST $59
$64==.
	XMOVEI 3,0(17)
	PUSH 17,3
	XMOVEI 4,-12(17)
	PUSH 17,4
	PUSH 17,-12(17)
	PUSHJ 17,%EDEFA
	ADJSP 17,-3
	MOVEM 1,-6(17)
$59==.
	MOVE 5,-6(17)
	ADDB 5,-1(17)
	MOVE 4,-6(17)
	SUBI 4,1
	ADJBP 4,-10(17)
	MOVEM 4,-10(17)
$57==.
	ILDB 3,-11(17)
	IDPB 3,-10(17)
	JRST $55
$56==.
	MOVE 4,0(17)
	MOVE 5,-12(17)
	MOVEM 4,0(5)
	MOVE 1,-1(17)
	ADJSP 17,-7
	POPJ 17,
$74==.
	BYTE	(9) 45,143,45,56
	BYTE	(9) 52,163,45,143
	BYTE	(9) 0
	

$68==.
	BYTE	(9) 50,164,157,153
	BYTE	(9) 145,156,40,45
	BYTE	(9) 144,75,45,163
	BYTE	(9) 51,0
	

$67==.
	BYTE	(9) 50,156,157,144
	BYTE	(9) 145,40,45,144
	BYTE	(9) 72,40,45,144
	BYTE	(9) 75,45,163,51
	BYTE	(9) 0
	

%TOKNA:
	SETZ 3,
	CAML 3,-1(17)
	 JRST $75
	MOVE 7,-1(17)
	CAIGE 7,206
	 SKIPA 1,NOPNAM(7)
	 TRNA 
	 JRST $76
$75==.
	MOVE 1,[$$BP90+$$SECT,,$77]
$76==.
	POPJ 17,
$77==.
	BYTE	(9) 77,77,0
	

%EDEFA:
	ADJSP 17,21
	MOVE 4,-23(17)
	MOVE 3,0(4)
	MOVEM 3,-2(17)
	XMOVEI 11,-17(17)
	TLO 11,$$BP90
	MOVEM 11,-1(17)
	SETZB 6,0(17)
	MOVEI 7,45
	DPB 7,11
	LDB 5,-2(17)
	MOVEM 5,-20(17)
$78==.
	MOVE 4,-20(17)
	IDPB 4,-1(17)
	ANDI 4,777
	CAIL 4,40
	 CAIL 4,171
	 JRST $82
	JRST @$86*1-40(4)
$86==.
	IFIW $80
	IFIW $82
	IFIW $82
	IFIW $80
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $80
	IFIW $82
	IFIW $80
	IFIW $80
	IFIW $82
	IFIW $80
	IFIW $80
	IFIW $80
	IFIW $80
	IFIW $80
	IFIW $80
	IFIW $80
	IFIW $80
	IFIW $80
	IFIW $80
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $85
	IFIW $82
	IFIW $85
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $83
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $81
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $81
	IFIW $81
	IFIW $85
	IFIW $85
	IFIW $85
	IFIW $83
	IFIW $81
	IFIW $82
	IFIW $82
	IFIW $83
	IFIW $82
	IFIW $82
	IFIW $81
	IFIW $82
	IFIW $82
	IFIW $82
	IFIW $84
	IFIW $82
	IFIW $81
	IFIW $82
	IFIW $82
	IFIW $81
$82==.
	MOVE 4,-23(17)
	LDB 5,0(4)
	IDPB 5,-22(17)
	MOVEI 1,2
	ADJSP 17,-21
	POPJ 17,
$83==.
	MOVE 4,-20(17)
	MOVEM 4,0(17)
	JRST $80
$84==.
	MOVE 4,-20(17)
	MOVEM 4,0(17)
	JRST $81
$85==.
	SKIPN 4,0(17)
	 SKIPA 3,[144]
	 TRNA 
	 MOVEM 3,0(17)
$81==.
	SETZ 3,
	IDPB 3,-1(17)
	MOVE 5,-2(17)
	MOVE 6,-23(17)
	MOVEM 5,0(6)
	MOVE 7,0(17)
	MOVM 10,7
	IDIVI 10,11
	CAME 7,$93(11)
	 JRST $87
	JRST @$94(11)
$93==.
	 154
	 144
	 -1
	 -1
	 114
	 150
	 -1
	 163
	 -1
$94==.
	IFIW $88
	IFIW $91
	IFIW $87
	IFIW $87
	IFIW $92
	IFIW $89
	IFIW $87
	IFIW $90
	IFIW $87
$87==.
	MOVE 5,-24(17)
	SOS 3,0(5)
	PUSH 17,0(3)
	XMOVEI 4,-20(17)
	TLO 4,$$BP90
	PUSH 17,4
	PUSH 17,-24(17)
	PUSHJ 17,SPRINT
	ADJSP 17,-24
	POPJ 17,
$88==.
	MOVE 5,-24(17)
	SOS 3,0(5)
	PUSH 17,0(3)
	XMOVEI 4,-20(17)
	TLO 4,$$BP90
	PUSH 17,4
	PUSH 17,-24(17)
	PUSHJ 17,SPRINT
	ADJSP 17,-24
	POPJ 17,
$89==.
	MOVE 5,-24(17)
	SOS 3,0(5)
	HRRE 4,0(3)
	PUSH 17,4
	XMOVEI 6,-20(17)
	TLO 6,$$BP90
	PUSH 17,6
	PUSH 17,-24(17)
	PUSHJ 17,SPRINT
	ADJSP 17,-24
	POPJ 17,
$90==.
	MOVE 5,-24(17)
	SOS 3,0(5)
	PUSH 17,0(3)
	XMOVEI 4,-20(17)
	TLO 4,$$BP90
	PUSH 17,4
	PUSH 17,-24(17)
	PUSHJ 17,SPRINT
	ADJSP 17,-24
	POPJ 17,
$91==.
	MOVE 6,-24(17)
	MOVNI 4,2
	ADDB 4,0(6)
	PUSH 17,0(4)
	PUSH 17,1(4)
	XMOVEI 3,-21(17)
	TLO 3,$$BP90
	PUSH 17,3
	PUSH 17,-25(17)
	PUSHJ 17,SPRINT
	ADJSP 17,-25
	POPJ 17,
$92==.
	MOVE 6,-24(17)
	MOVNI 4,2
	ADDB 4,0(6)
	PUSH 17,0(4)
	PUSH 17,1(4)
	XMOVEI 3,-21(17)
	TLO 3,$$BP90
	PUSH 17,3
	PUSH 17,-25(17)
	PUSHJ 17,SPRINT
	ADJSP 17,-25
	POPJ 17,
$80==.
	ILDB 3,-2(17)
	MOVEM 3,-20(17)
	JRST $78
EXPECT:
	MOVE 4,-1(17)
	CAME 4,TOKEN
	 JRST $95
	PUSHJ 17,NEXTOK
	MOVEI 1,1
	POPJ 17,
$95==.
	ADJSP 17,11
	MOVE 4,-12(17)
	MOVM 5,4
	IDIVI 5,21
	CAME 4,$108(6)
	 JRST $107
	JRST @$109(6)
$108==.
	 -1
	 -1
	 23
	 24
	 25
	 26
	 27
	 -1
	 31
	 32
	 33
	 -1
	 -1
	 -1
	 37
	 165
	 -1
$109==.
	IFIW $107
	IFIW $107
	IFIW $97
	IFIW $98
	IFIW $101
	IFIW $99
	IFIW $100
	IFIW $107
	IFIW $105
	IFIW $103
	IFIW $102
	IFIW $107
	IFIW $107
	IFIW $107
	IFIW $104
	IFIW $106
	IFIW $107
$97==.
	MOVE 3,[$$BP90+$$SECT,,$110]
	MOVEM 3,-10(17)
	JRST $96
$98==.
	MOVE 3,[$$BP90+$$SECT,,$111]
	MOVEM 3,-10(17)
	JRST $96
$99==.
	MOVE 3,[$$BP90+$$SECT,,$112]
	MOVEM 3,-10(17)
	JRST $96
$100==.
	MOVE 3,[$$BP90+$$SECT,,$113]
	MOVEM 3,-10(17)
	JRST $96
$101==.
	MOVE 3,[$$BP90+$$SECT,,$114]
	MOVEM 3,-10(17)
	JRST $96
$102==.
	MOVE 3,[$$BP90+$$SECT,,$115]
	MOVEM 3,-10(17)
	JRST $96
$103==.
	MOVE 3,[$$BP90+$$SECT,,$116]
	MOVEM 3,-10(17)
	JRST $96
$104==.
	MOVE 3,[$$BP90+$$SECT,,$117]
	MOVEM 3,-10(17)
	JRST $96
$105==.
	MOVE 3,[$$BP90+$$SECT,,$118]
	MOVEM 3,-10(17)
	JRST $96
$106==.
	MOVE 3,[$$BP90+$$SECT,,$119]
	MOVEM 3,-10(17)
	JRST $96
$107==.
	PUSH 17,-12(17)
	PUSH 17,[$$BP90+$$SECT,,$120]
	XMOVEI 3,-11(17)
	TLO 3,$$BP90
	MOVEM 3,-12(17)
	PUSH 17,3
	PUSHJ 17,SPRINT
	ADJSP 17,-3
$96==.
	PUSH 17,-10(17)
	PUSH 17,[$$BP90+$$SECT,,$121]
	PUSHJ 17,ERROR
	ADJSP 17,-2
	PUSH 17,-12(17)
	PUSHJ 17,%RECOV
	SETZ 1,
	ADJSP 17,-12
	POPJ 17,
$121==.
	BYTE	(9) 105,170,160,145
	BYTE	(9) 143,164,145,144
	BYTE	(9) 40,164,157,153
	BYTE	(9) 145,156,40,50
	BYTE	(9) 45,163,51,40
	BYTE	(9) 156,157,164,40
	BYTE	(9) 146,157,165,156
	BYTE	(9) 144,0
	

$120==.
	BYTE	(9) 133,164,157,153
	BYTE	(9) 145,156,40,45
	BYTE	(9) 144,135,0
	

$119==.
	BYTE	(9) 42,167,150,151
	BYTE	(9) 154,145,42,40
	BYTE	(9) 153,145,171,167
	BYTE	(9) 157,162,144,0
	

$118==.
	BYTE	(9) 143,154,157,163
	BYTE	(9) 145,40,142,162
	BYTE	(9) 141,143,145,0
	

$117==.
	BYTE	(9) 151,144,145,156
	BYTE	(9) 164,151,146,151
	BYTE	(9) 145,162,0
	

$116==.
	BYTE	(9) 143,157,154,157
	BYTE	(9) 156,0
	

$115==.
	BYTE	(9) 143,157,155,155
	BYTE	(9) 141,0
	

$114==.
	BYTE	(9) 163,145,155,151
	BYTE	(9) 143,157,154,157
	BYTE	(9) 156,0
	

$113==.
	BYTE	(9) 162,151,147,150
	BYTE	(9) 164,40,142,162
	BYTE	(9) 141,143,153,145
	BYTE	(9) 164,0
	

$112==.
	BYTE	(9) 154,145,146,164
	BYTE	(9) 40,142,162,141
	BYTE	(9) 143,153,145,164
	BYTE	(9) 0
	

$111==.
	BYTE	(9) 162,151,147,150
	BYTE	(9) 164,40,160,141
	BYTE	(9) 162,145,156,164
	BYTE	(9) 150,145,163,151
	BYTE	(9) 163,0
	

$110==.
	BYTE	(9) 154,145,146,164
	BYTE	(9) 40,160,141,162
	BYTE	(9) 145,156,164,150
	BYTE	(9) 145,163,151,163
	BYTE	(9) 0
	

%RECOV:
	MOVE 4,-1(17)
	CAIE 4,25
	 JRST $122
$123==.
	SKIPE 4,EOF
	 JRST $124
	MOVE 6,TOKEN
	CAIE 6,25
	 CAIN 6,31
	 JRST $124
	PUSHJ 17,NEXTOK
	JRST $123
$124==.
	MOVE 4,TOKEN
	CAIN 4,25
	 PUSHJ 17,NEXTOK
	POPJ 17,
$122==.
	PUSH 17,CSYMBO
	PUSH 17,TOKEN
	PUSHJ 17,TOKPUS
	MOVE 4,-3(17)
	MOVEM 4,TOKEN
	ADJSP 17,-2
	POPJ 17,
ERRFLU:
$126==.
	MOVE 4,TOKEN
	CAIE 4,31
	 CAIN 4,25
	 JRST $128
	CAIE 4,1
	 JRST $129
$128==.
	JRST NEXTOK
$129==.
	PUSHJ 17,NEXTOK
	JRST $126

$$CPKI==0
	INTERN $$CPKI
$$CPKA==0
	INTERN $$CPKA

	LIT
	EXTERN	$$BP90
	EXTERN	$$SECT
	EXTERN	$$$CPU
	EXTERN	$$$CRT
	EXTERN	.SIOS
;	EXTERN	REMOVE
;	EXTERN	RENAME
;	EXTERN	TMPFIL
;	EXTERN	TMPNAM
;	EXTERN	FCLOSE
;	EXTERN	FFLUSH
;	EXTERN	FOPEN
;	EXTERN	FREOPE
;	EXTERN	SETBUF
;	EXTERN	SETVBU
	EXTERN	FPRINT
;	EXTERN	FSCANF
;	EXTERN	PRINTF
;	EXTERN	SCANF
	EXTERN	SPRINT
;	EXTERN	SSCANF
;	EXTERN	VFPRIN
;	EXTERN	VPRINT
;	EXTERN	VSPRIN
;	EXTERN	FGETC
;	EXTERN	FGETS
	EXTERN	FPUTC
	EXTERN	FPUTS
;	EXTERN	GETC
;	EXTERN	GETCHA
;	EXTERN	GETS
;	EXTERN	PUTC
;	EXTERN	PUTCHA
;	EXTERN	PUTS
;	EXTERN	UNGETC
;	EXTERN	FREAD
;	EXTERN	FWRITE
;	EXTERN	FGETPO
;	EXTERN	FSEEK
;	EXTERN	FSETPO
;	EXTERN	FTELL
;	EXTERN	REWIND
;	EXTERN	CLEARE
;	EXTERN	FEOF
;	EXTERN	FERROR
;	EXTERN	PERROR
;	EXTERN	FDOPEN
;	EXTERN	SOPEN
;	EXTERN	.SETBU
;	EXTERN	SETLIN
;	EXTERN	MKTEMP
;	EXTERN	GETW
;	EXTERN	PUTW
;	EXTERN	FILENO
;	EXTERN	CTERMI
;	EXTERN	CUSERI
;	EXTERN	.FILE.
;	EXTERN	.MAKEF
;	EXTERN	.FILBU
;	EXTERN	.READA
;	EXTERN	.WRITE
;	EXTERN	.PRIME
;	EXTERN	.SIOFL
;	EXTERN	.CLEAN
;	EXTERN	.FREEF
;	EXTERN	.SETFI
;	EXTERN	TISCHP
;	EXTERN	TISBYP
;	EXTERN	TISCHA
;	EXTERN	TISBYA
;	EXTERN	TISPUR
;	EXTERN	TFLTAB
;	EXTERN	SYMBOL
	EXTERN	CSYMBO
;	EXTERN	MINSYM
;	EXTERN	BYTSYM
;	EXTERN	HTABLE
;	EXTERN	TTABLE
;	EXTERN	TYPES
;	EXTERN	NODEIN
;	EXTERN	NODEDU
	EXTERN	NODEID
;	EXTERN	NDEF
;	EXTERN	NDEFOP
;	EXTERN	NDEFT
;	EXTERN	NDEFTF
;	EXTERN	NDEFTL
;	EXTERN	NDEFTR
;	EXTERN	NDEFL
;	EXTERN	NDEFR
;	EXTERN	NDEFLR
;	EXTERN	NDEFIC
;	EXTERN	NDEFID
	INTERN	JMSG
	INTERN	JERR
	INTERN	NOTE
	INTERN	ADVISE
	INTERN	WARN
	INTERN	INT.WA
	INTERN	ERROR
	INTERN	INT.ER
	INTERN	EFATAL
	INTERN	FATAL
	INTERN	ERRFOP
	INTERN	EXPECT
	INTERN	ERRFLU
;	EXTERN	OPTPAR
;	EXTERN	OPTGEN
;	EXTERN	OPTOBJ
;	EXTERN	DEBPAR
;	EXTERN	DEBGEN
;	EXTERN	DEBPHO
;	EXTERN	DEBSYM
;	EXTERN	VRBFUN
;	EXTERN	VRBSTA
;	EXTERN	VRBLD
;	EXTERN	LDEXTF
;	EXTERN	LDPSEC
;	EXTERN	LDPSDA
;	EXTERN	LDPSCO
;	EXTERN	LDPSST
;	EXTERN	ASSEMB
;	EXTERN	DELETE
;	EXTERN	LINK
;	EXTERN	PREPF
	EXTERN	NOWARN
;	EXTERN	CONDCC
;	EXTERN	KEEPCM
;	EXTERN	ASMHFI
;	EXTERN	ASMTFI
;	EXTERN	NPREDE
;	EXTERN	NPREUN
;	EXTERN	NINCPA
;	EXTERN	NHFPAT
;	EXTERN	NHFSYP
;	EXTERN	PREDEF
;	EXTERN	PREUND
;	EXTERN	INCPAT
;	EXTERN	HFPATH
;	EXTERN	HFSYPA
;	EXTERN	LIBPAT
;	EXTERN	CLEVKC
;	EXTERN	CLEVEL
;	EXTERN	CVERCO
;	EXTERN	CVERLI
;	EXTERN	CVERDI
;	EXTERN	CVERKC
;	EXTERN	TGSYS
;	EXTERN	TGCPU
;	EXTERN	TGASM
;	EXTERN	TGCSIZ
;	EXTERN	TGCPW
;	EXTERN	TGCMAS
;	EXTERN	TGMACH
;	EXTERN	TOK
	EXTERN	NOPNAM
;	EXTERN	TOKSTR
;	EXTERN	CHARTY
;	EXTERN	STRCON
;	EXTERN	VOIDPT
;	EXTERN	SIZTYP
;	EXTERN	PTRDIF
;	EXTERN	TYPEPT
;	EXTERN	TYPSIZ
;	EXTERN	TYPBSI
;	EXTERN	TSNAME
	EXTERN	INPFNA
;	EXTERN	INPFDI
;	EXTERN	INPFMO
;	EXTERN	INPFSU
;	EXTERN	OUTFNA
;	EXTERN	PREFNA
;	EXTERN	DEBFNA
;	EXTERN	PHOFNA
;	EXTERN	SYMFNA
;	EXTERN	IN
;	EXTERN	OUT
;	EXTERN	FDEB
;	EXTERN	FPHO
;	EXTERN	FSYM
;	EXTERN	MAXTYP
	EXTERN	PAGE
	EXTERN	LINE
	EXTERN	FLINE
;	EXTERN	TLINE
	EXTERN	EOF
	EXTERN	TOKEN
	EXTERN	NERROR
;	EXTERN	NODES
;	EXTERN	SAVELI
	EXTERN	CURFN
	EXTERN	CURFNL
;	EXTERN	CURFNN
;	EXTERN	MAXAUT
;	EXTERN	STACKR
;	EXTERN	STKGOT
	EXTERN	ERRLIN
	EXTERN	ERPTR
	EXTERN	ERPLEF
	EXTERN	ERCSIZ
;	EXTERN	CURPP
;	EXTERN	CURVAL
;	EXTERN	CURPTR
;	EXTERN	CURSYM
;	EXTERN	CONSTA
	EXTERN	CTFTAB
;	EXTERN	CHR2IN
;	EXTERN	CHR2LO
;	EXTERN	CHR2UP
;	EXTERN	ATOF
;	EXTERN	ATOI
;	EXTERN	ATOL
;	EXTERN	STRTOD
;	EXTERN	STRTOL
;	EXTERN	STRTOU
;	EXTERN	RAND
;	EXTERN	SRAND
;	EXTERN	CALLOC
;	EXTERN	FREE
;	EXTERN	MALLOC
;	EXTERN	REALLO
;	EXTERN	ABORT
;	EXTERN	ATEXIT
	EXTERN	EXIT
;	EXTERN	GETENV
;	EXTERN	SYSTEM
;	EXTERN	BSEARC
;	EXTERN	QSORT
;	EXTERN	ABS
;	EXTERN	DIV
;	EXTERN	LABS
;	EXTERN	LDIV
;	EXTERN	MBLEN
;	EXTERN	MBTOWC
;	EXTERN	WCTOMB
;	EXTERN	MBSTOW
;	EXTERN	WCSTOM
;	EXTERN	.N.EXI
;	EXTERN	.EXIT.
;	EXTERN	MEMCPY
;	EXTERN	MEMMOV
;	EXTERN	STRCPY
;	EXTERN	STRNCP
;	EXTERN	STRCAT
;	EXTERN	STRNCA
;	EXTERN	MEMCMP
;	EXTERN	STRCMP
;	EXTERN	STRCOL
;	EXTERN	STRNCM
;	EXTERN	STRXFR
;	EXTERN	MEMCHR
;	EXTERN	STRCHR
;	EXTERN	STRCSP
;	EXTERN	STRPBR
;	EXTERN	STRRCH
;	EXTERN	STRSPN
;	EXTERN	STRSTR
;	EXTERN	STRTOK
;	EXTERN	MEMSET
;	EXTERN	STRERR
	EXTERN	STRLEN
;	EXTERN	INDEX
;	EXTERN	RINDEX
;	EXTERN	STRPOS
;	EXTERN	STRRPO
;	EXTERN	STRRPB
;	EXTERN	MEMCCP
	EXTERN	ESTRCP
	EXTERN	NEXTOK
	EXTERN	TOKPUS
	INTERN	ERRNOM
	END
