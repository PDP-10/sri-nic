Each line represents one parse-tree node, in the format:
 # <L/R>: <Nname> (N#), nflag: <#>, ntype: <desc>, <extra stuff>
where
   #	- Node index.  This is sometimes shown in internal error messages.
  <L/R> - Left or Right.  Left nodes are considered inferior (child) nodes
	and are indented.  Right nodes are considered successors and keep
	the existing indentation.  L/R == Lisp CAR/CDR.
  <Nname> - Node op name, as used in KCC, followed by actual decimal index.
  <#> - octal value of nflag member, if non-zero.
  <desc> - description of ntype member, if non-zero: #n -> ttype
	where n is its index in the types table and ttype the type's type.
  <extra> - node specific information, if any.
---- Function ----
Top: N_FUNCTION (125)
  27       L: N_NODE (132)
  28           L: Q_IDENT (31), ntype: #19 -> function int, name "main"
  26   R: N_STATEMENT (126)
  25       L: N_STATEMENT (126)
   5           L: N_DATA (128)
   4               L: N_IZ (129)
   3                   L: Q_IDENT (31), ntype: #22 -> array u_char, name "arr"
  24       R: N_STATEMENT (126)
  23           L: Q_IF (113)
  17               L: N_ICONST (33), nflag: 040, ntype: #9 -> int, val = 1
  22           R: N_NODE (132)
  19               L: N_FNCALL (40), nflag: 0200, ntype: #9 -> int
  18                   L: Q_IDENT (31), nflag: 04, ntype: #19 -> function int, name "printf"
  21               R: N_EXPRLIST (84), ntype: #16 -> pointer u_char
  20               R: N_SCONST (35), ntype: #16 -> pointer u_char, val = "? Uh-oh
" (9)
   1   R: N_STATEMENT (126)
   0       L: Q_RETURN (110)
