; (size:) for V7 indicates decimal # bytes of PDP-11 code, in the format
;	total=text+data+bss.  If data+bss=0, only the total is given.
;	If bss=0, the bss is not given.

-3	abort();	V7:  abort (size: 12) (Need: GNU)
			KCC-FAIL: abort
-3	abs();		V7:  abs          (size: 28) (Need: GNU,KCC)
-2	access();	V7:  access       (size: 42=36+6) (Need: GNU)
			KCC: access  (Comment: C, but !P)
-2	acct();		V7:  acct         (size: 30=26+4) (Need: GNU,KCC)
-2	alarm();	V7:  alarm        (size: 20) (Need: GNU,KCC)
H-3X	macro assert();	V7:  assert.h
-3	double atof();	V7:  atof         (size: 470) (Need: GNU)
			KCC: atoi  (Comment: Should split off from ATOI)
-3	atoi();		V7:  atoi         (size: 96) (Need: GNU)
			KCC: atoi
-3	long atol();	V7:  atol    (size: 156) (Need: GNU,KCC)
HI-3S	constant BUFSIZ;	V7: stdio.h (Done: KCC)
-3	char *calloc();	V7:  calloc       (size: 76) (Need: GNU)
			KCC: calloc
C	cfree();	V7:  calloc (Comment: STDIO?)(size: 76) (Need: GNU)
			KCC: calloc	(Comment: just calls free())
-2	chdir();	V7:  chdir        (size: 30=26+4) (Need: GNU,KCC)
-2	chmod();	V7:  chmod        (size: 38=32+6) (Need: GNU,KCC)
-2	chown();	V7:  chown        (size: 46=38+8) (Need: GNU,KCC)
-2	chroot();	V7:  chroot       (size: 30=26+4) (Need: GNU,KCC)
-2	close();	V7:  close        (size: 22) (Need: GNU)
			KCC: runtm	(Comment: !P, calls _close)
-2	creat();	V7:  creat        (size: 36=30+6) (Need: GNU)
			KCC: runtm	(Comment: TOPS-20 7-bit create)
-3	char *ctime();		V7:  ctime      (size: 1188=1026+118+44) (Need: GNU)
				KCC: time	(Comment: !P)
-3	struct tm *localti();	V7:  ctime      (size: 1188=1026+118+44) (Need: GNU,KCC)
-3	struct tm *gmtime();	V7:  ctime      (size: 1188=1026+118+44) (Need: GNU,KCC)
-3	char *asctime();	V7:  ctime      (size: 1188=1026+118+44) (Need: GNU,KCC)
-2	dup2();		V7:  dup          (size: 38) (Need: GNU)
			KCC: runtm	(Comment: !P, TOPS20)
-2	dup();		V7:  dup          (size: 38) (Need: GNU)
			KCC: runtm	(Comment: !P, TOPS20)
-3	char *ecvt();	V7:  ecvt        (size: 550=462+8+80) (Need: GNU,KCC)
-3	char *fcvt();	V7:  ecvt        (size: 550=462+8+80) (Need: GNU,KCC)
-2	execl();	V7:  execl        (size: 42=34+8) (Need: GNU)
			KCC: runtm.t	(Comment: !P, TOPS20)
-2	execle();	V7:  execle       (size: 44=36+8) (Need: GNU)
			KCC: runtm.t	(Comment: !P, TOPS20)
-2	execlp();	V7:  execvp      (size: 390=358+32) (Need: GNU,KCC)
-2	execvp();	V7:  execvp      (size: 390=358+32) (Need: GNU,KCC)
-2	execv();	V7:  execv        (size: 38=30+8) (Need: GNU)
			KCC: runtm.t	(Comment: !P, TOPS20)
-2	execve();	V7:  execve       (size: 38=30+8) (Need: GNU)
			KCC: runtm.t	(Comment: !P, TOPS20)
-2	exit();		V7:  cuexit       (size: 14) (Need: GNU)
			KCC: runtm	(Comment: !P)
-2	_exit();	V7:  exit        (size: 10)
			KCC-FAI: tops20	(Comment: !P)
-3S	fclose();	V7:  flsbuf      (size: 544) (Need: GNU)
			KCC: stdio
HI-3S	macro feof();	V7:  stdio.h (Done: KCC)
HI-3S	macro ferror();	V7:  stdio.h (Done: KCC)
HI-3S	macro clearerr();	V7:  stdio.h
HI-3S	macro fileno();	V7:  stdio.h (Done: KCC)
-3S	FILE *fdopen();	V7:  fdopen      (size: 112) (Need: GNU,KCC)
-3S	fflush();	V7:  flsbuf      (size: 544) (Need: GNU)
			KCC: stdio
-3S	int fgetc();	V7:  fgetc        (size: 42) (Need: GNU,KCC)
-3S	char *fgets();	V7:  fgets        (size: 78) (Need: GNU)
			KCC: stdio
-3S	FILE *fopen();	V7:  fopen        (size: 28) (Need: GNU)
			KCC: stdio  (Comment: Add'l modes "tRWio")
-2	fork();		V7:  fork         (size: 26=24+0+2) (Need: GNU)
			KCC-FAI: tops20
?	?int? _par_uid;	V7:  fork (Comment: ?) (size: 26=24+0+2) (Need: GNU,KCC)
-3S	fprintf();	V7:  fprintf      (size: 48) (Need: GNU)
			KCC: printf	(Comment: !P probably)
-3S	fputc();	V7:  fputc        (size: 48) (Need: GNU,KCC)
-3S	fputs();	V7:  fputs        (size: 62) (Need: GNU)
			KCC: stdio	(Comment: bad use of ++ in putc)
-3S	fread();	V7:  rdwr        (size: 186) (Need: GNU)
			KCC: stdio
-3S	fwrite();	V7:  rdwr        (size: 186) (Need: GNU)
			KCC: stdio
-3S	FILE *freopen();	V7:  freopen      (size: 34) (Need: GNU)
				KCC: stdio  (Comment: Add'l modes "tRWio")
-3	double frexp();	V7:  frexp11      (size: 22) (Need: GNU,KCC)
-3S	fseek();	V7:  fseek       (size: 358) (Need: GNU)
			KCC: fseek	(Comment: STDIO-dependent)
-2	fstat();	V7:  fstat        (size: 34=30+4) (Need: GNU)
			KCC: stat	(Comment: !P)
-3S	long ftell();	V7:  ftell       (size: 168) (Need: GNU)
			KCC: fseek
-3	char *gcvt();	V7:  gcvt        (size: 316) (Need: GNU,KCC)
-3S	int getchar();	V7:  getchar      (size: 36) (Need: GNU,KCC)
HI-3S	macro int getchar();	KCC: stdio.h
HI-3S	macro int getc();	V7:  stdio.h (Need: GNU,KCC)
I-3S	int getc();		KCC: stdio	(Comment: NOT A MACRO!)
-3	char *getenv();	V7:  getenv       (size: 86) (Need: GNU,KCC)
			KCC: getenv	(Comment: !P, uses logical names)
-2	getgid();	V7:  getgid       (size: 22) (Need: GNU,KCC)
-2	getegid();	V7:  getgid       (size: 22) (Need: GNU,KCC)
-3	struct group *getgrnam();	V7:  getgrnam (size: 44) (Need: GNU,KCC)
-3	char *getlogin();	V7:  getlogin (size: 138=108+10+20)(Need: GNU,KCC)
-3	char *getpass();	V7:  getpass (size: 304=280+14+10)(Need: GNU,KCC)
-2	getpid();	V7:  getpid       (size: 10) (Need: GNU)
			KCC: getpid	(Comment: !P, uses GFRKS/GJINF)
-3	getpw();	V7:  getpw       (size: 196=180+14+2) (Need: GNU,KCC)
-3	struct passwd *getpwnam();	V7:  getpwnam (size: 42) (Need: GNU,KCC)
-3	struct passwd *getpwuid();	V7:  getpwuid (size: 36) (Need: GNU,KCC)
-3S	char *gets();	V7:  gets         (size: 76) (Need: GNU,KCC)
-2	getuid();	V7:  getuid       (size: 22) (Need: GNU,KCC)
-2	geteuid();	V7:  getuid       (size: 22) (Need: GNU,KCC)
-3S	int getw();	V7:  getw         (size: 82) (Need: GNU,KCC)
-3	char *index();	V7:  index    (size: 30) (Need: GNU)
			KCC: string
-2	ioctl();	V7:  ioctl        (size: 46=38+8) (Need: GNU,KCC)
-3	isatty();	V7:  isatty       (size: 40) (Need: GNU,KCC)
-2	kill();		V7:  kill         (size: 34=30+4) (Need: GNU)
			KCC-FAIL: signal
-3	double ldexp();	V7:  ldexp11      (size: 52=44+8) (Need: GNU,KCC)
-2	link();		V7:  link         (size: 38=32+6) (Need: GNU,KCC)
-2	lock();		V7:  lock         (size: 28=24+4) (Need: GNU,KCC)
-2	long lseek();	V7:  lseek        (size: 52=44+8) (Need: GNU)
			KCC: lseek	(Comment: !P, uses RFPTR)
-3	ltol3();	V7:  l3           (size: 72) (Need: GNU,KCC)
-3	l3tol();	V7:  l3           (size: 72) (Need: GNU,KCC)
-3	char *malloc();	V7:  malloc      (size: 526=514+0+12) (Need: GNU)
			KCC: malloc	(Comment: Buggy, must be fixed)
-3	free();		V7:  malloc      (size: 526=514+0+12) (Need: GNU)
			KCC: malloc
-3	char *realloc(); V7:  malloc      (size: 526=514+0+12) (Need: GNU)
			KCC: malloc
-2	mknod();	V7:  mknod        (size: 46=38+8) (Need: GNU,KCC)
-3	char *mktemp();	V7:  mktemp      (size: 106=104+2) (Need: GNU)
			KCC: mktemp	(Comment: !P, but could be P)
-3	double modf();	V7:  modf11       (size: 20) (Need: GNU,KCC)
-3	monitor();	V7:  mon         (size: 244=232+8+4) (Need: GNU,KCC)
-2	mount();	V7:  mount        (size: 46=38+8) (Need: GNU,KCC)
-2	mpxcall();	V7:  mpxcall      (size: 36=30+6) (Need: GNU,KCC)
-2	nice();		V7:  nice         (size: 22) (Need: GNU,KCC)
-3	nlist();	V7:  nlist       (size: 474) (Need: GNU,KCC)
-2	open();		V7:  open         (size: 36=30+6) (Need: GNU)
			KCC: runtm	(Comment: TOPS-20 7-bit open)
-2	pause();	V7:  pause        (size: 10) (Need: GNU)
			KCC: sleep	(Comment: !P)
-3	perror();	V7:  perror      (size: 134=114+20) (Need: GNU)
			KCC-FAIL: perror	(Comment: !P, uses JSYS err #s)
-2	phys();		V7:  phys         (size: 44=36+8) (Need: GNU,KCC)
-2	pipe();		V7:  pipe         (size: 30) (Need: GNU)
			KCC: runtm	(Comment: !P, TOPS20)
-2	pkoff();	V7:  ? (Comment: UPM only)
-2	pkon();		V7:  ? (Comment: UPM only)
-3	char *pkopen();	V7:  ? (Comment: UPM only)
-3	pkclose();	V7:  ? (Comment: UPM only)
-3	pkread();	V7:  ? (Comment: UPM only)
-3	pkwrite();	V7:  ? (Comment: UPM only)
-3	pkfail();	V7:  ? (Comment: UPM only)
-3S	FILE *popen();	V7:  popen       (size: 414=360+14+40) (Need: GNU,KCC)
-3S	pclose();	V7:  popen       (size: 414=360+14+40) (Need: GNU,KCC)
-3S	printf();	V7:  printf       (size: 44) (Need: GNU)
			KCC: printf	(Comment: !P probably)
-2	profil();	V7:  profil       (size: 46=36+10) (Need: GNU,KCC)
-2	ptrace();	V7:  ptrace       (size: 52=44+8) (Need: GNU,KCC)
-3S	putchar();	V7:  putchar      (size: 40) (Need: GNU,KCC)
HI-3S	macro putchar();	KCC: stdio.h
HI-3S	macro int putc();	V7:  stdio.h (Need: GNU,KCC)
I-3S	int putc();		KCC: stdio	(Comment: NOT A MACRO!)
-3S	puts();		V7:  puts         (size: 80) (Need: GNU,KCC)
-3S	putw();		V7:  putw         (size: 76) (Need: GNU,KCC)
-3	qsort();	V7:  qsort       (size: 472=468+0+4)
			GNU: qsort
			KCC: qsort	(Comment: same as GNU)
-2	read();		V7:  read         (size: 40=34+6) (Need: GNU)
			KCC: runtm	(Comment: !P, TOPS20)
-3S	rewind();	V7:  rew          (size: 66) (Need: GNU)
			KCC: fseek	(Comment: depends on stdio.h)
-3	char *rindex();	V7:  rindex      (size: 30) (Need: GNU)
			KCC: string
-2	char *sbrk();	V7:  sbrk         (size: 80=74+6) (Need: GNU)
			KCC-FAI: tops20
-2	char *brk();	V7:  sbrk         (size: 80=74+6) (Need: GNU)
			KCC-FAI: tops20
-3S	scanf();	V7:  scanf       (size: 124) (Need: GNU,KCC)
-3S	fscanf();	V7:  scanf       (size: 124) (Need: GNU,KCC)
-3S	sscanf();	V7:  scanf       (size: 124) (Need: GNU,KCC)
-3S	setbuf();	V7:  setbuf       (size: 64) (Need: GNU)
			KCC: setbuf	(Comment: STDIO dependent)
-2	setgid();	V7:  setgid       (size: 22) (Need: GNU,KCC)
-3	struct group *getgrgid();	V7:  getgrgid  (size: 36)
-3	setgrent();	V7:  getgrent   (size: 1016=276+18+722) (Need: GNU,KCC)
-3	endgrent();	V7:  getgrent   (size: 1016=276+18+722) (Need: GNU,KCC)
-3	struct group *getgrent();	V7:  getgrent   (size: 1016=276+18+722) (Need: GNU,KCC)
-3	setjmp();	V7:  setjmp       (size: 58) (Need: GNU)
			KCC-FAIL: setjmp
-3	longjmp();	V7:  setjmp       (size: 58) (Need: GNU)
			KCC-FAIL: setjmp
-3	setkey();	V7:  crypt   (size: 2870=900+840+1130) (Need: GNU,KCC)
-3	encrypt();	V7:  crypt   (size: 2870=900+840+1130) (Need: GNU,KCC)
-3	char *crypt();	V7:  crypt   (size: 2870=900+840+1130) (Need: GNU,KCC)
-3	setpwent();	V7:  getpwent    (size: 832=280+20+532) (Need: GNU,KCC)
-3	endpwent();	V7:  getpwent    (size: 832=280+20+532) (Need: GNU,KCC)
-3	struct passwd *getpwent();	V7:  getpwent (size: 832=280+20+532)(Need: GNU,KCC)
-2	setuid();	V7:  setuid       (size: 22) (Need: GNU,KCC)
-2	(*signal())();	V7:  signal      (size: 244=198+6+40) (Need: GNU)
			KCC-FAIL: signal
-3	sleep();	V7:  sleep       (size: 140=138+0+2) (Need: GNU)
			KCC: sleep	(Comment: !P)
-3S	sprintf();	V7:  sprintf      (size: 86) (Need: GNU)
			KCC: printf	(Comment: !P probably)
-3	srand();	V7:  rand         (size: 78=74+4) (Need: GNU,KCC)
-3	rand();		V7:  rand         (size: 78=74+4) (Need: GNU,KCC)
-2	stat();		V7:  stat         (size: 38=32+6) (Need: GNU)
			KCC: stat	(Comment: !P)
-2	stime();	V7:  stime        (size: 26) (Need: GNU,KCC)
-3	char *strcat();	V7:  strcat       (size: 30) (Need: GNU)
			KCC: string
-3	strcmp();	V7:  strcmp       (size: 34) (Need: GNU)
			KCC: string
-3	char *strcpy();	V7:  strcpy       (size: 24) (Need: GNU)
			KCC: string
-3	strlen();	V7:  strlen       (size: 24) (Need: GNU)
			KCC: string
-3	char *strncat(); V7:  strncat      (size: 46) (Need: GNU)
			KCC: string
-3	strncmp();	V7:  strncmp      (size: 46) (Need: GNU)
			KCC: string
-3	char *strncpy(); V7:  strncpy      (size: 54) (Need: GNU)
			KCC: string
-2	stty();		V7:  stty         (size: 52) (Need: GNU,KCC)
-2	gtty();		V7:  stty         (size: 52) (Need: GNU,KCC)
-3	swab();		V7:  swab         (size: 60) (Need: GNU,KCC)
-2	sync();		V7:  sync         (size: 10) (Need: GNU,KCC)
-3	system();	V7:  system      (size: 170=156+14) (Need: GNU,KCC)
-3	char *sys_errlist[];	V7:  errlst     (size: 1598=0+1598) (Need: GNU,KCC)
-3	int sys_nerr;		V7:  errlst     (size: 1598=0+1598) (Need: GNU,KCC)
-2	long tell();	V7:  tell         (size: 28) (Need: GNU)
			KCC: lseek
-2	long time();	V7:  time         (size: 46=42+4) (Need: GNU)
			KCC: time	(Comment: !P)
-2	ftime();	V7:  time         (size: 46=42+4) (Need: GNU,KCC)
-2	times();	V7:  times        (size: 22=18+4) (Need: GNU,KCC)
-3	char *timezone();	V7:  timezone    (size: 260=146+104+10) (Need: GNU,KCC)
-3	char *ttyname();	V7:  ttyname     (size: 236=198+6+32) (Need: GNU,KCC)
-3	ttyslot();	V7:  ttyslot     (size: 288=246+10+32) (Need: GNU,KCC)
-2	umask();	V7:  umask        (size: 28=24+4) (Need: GNU,KCC)
-2	umount();	V7:  umount       (size: 30=26+4) (Need: GNU,KCC)
-3S	ungetc();	V7:  ungetc       (size: 76) (Need: GNU)
			KCC: stdio
-2	unlink();	V7:  unlink       (size: 30=26+4) (Need: GNU)
			KCC: unlink	(Comment: !P)
-2	utime();	V7:  utime        (size: 38=32+6) (Need: GNU,KCC)
-2	wait();		V7:  wait         (size: 26) (Need: GNU)
			KCC-FAI: tops20
-2	write();	V7:  write        (size: 40=34+6) (Need: GNU)
			KCC: runtm	(Comment: !P, TOPS20)

SI	int BCREAT();	KCC: runtm  (Comment: TOPS-20 8-bit create)
SI	int ICREAT();	KCC: runtm  (Comment: TOPS-20 36-bit create)
SI	int BOPEN();	KCC: runtm  (Comment: TOPS-20 8-bit byte open)
SI	int IOPEN();	KCC: runtm  (Comment: TOPS-20 36-bit byte open)
I	FILE *UOPEN();	KCC: stdio  (Comment: unbuffered fopen)
S-2	(*SIGSYS())();	KCC: signal  (Comment: Same as "signal")
SL	int JSYS();	KCC-FAIL: jsys

; These are internal KCC runtime support utilities.
; KCC itself generates calls to them.
R	int $DFIX;	KCC-FAIL: dfix  (Comment: double to int)
R	double $DFLOT;	KCC-FAIL: dfix  (Comment: int to double)
R	- $ADJBP;	KCC-FAIL: byte  (Comment: simulate ADJBP)
R	- $SUBBP;	KCC-FAIL: byte  (Comment: subtract BPs)
R	- $BPCNT;	KCC-FAIL: byte  (Comment: BP to number (eg for sub))

; These are probably class L
LR	_RLJFN();	KCC: access	(Comment: Interface to RLJFN JSYS)
LR	int _T2UTI();	KCC: time	(Comment: TNX to Unix time)
LR	int _U2TTI();	KCC: time	(Comment: Unix to TNX time)
R	_SEXIT();	KCC: runtm	(Comment: STDIO cleanup exit)
I	_PUTC();	KCC: stdio  (Comment: putc without crlf conversion)
R	char _SOBUF[];	KCC: setbuf  (Comment: what uses this?)
R	_START();	KCC-FAI: tops20	(Comment: Very start of C program)
R	GTJFN_();	KCC-FAI: tops20 (Comment: get JFN for filename)
R	_DIRST();	KCC-FAI: tops20 (Comment: get dir name)
R	int _OPEN();	KCC-FAI: tops20 (Comment: actual open of file)
R	int _CLOSE();	KCC-FAI: tops20 (Comment: actual close of JFN arg)
R	int _WRITE();	KCC-FAI: tops20 (Comment: actual output)
R	int _READ();	KCC-FAI: tops20 (Comment: actual input)
R	int _CPUTM();	KCC-FAI: tops20  (Comment: get process runtime)
R	int _EXEC();	KCC-FAI: tops20  (Comment: do actual exec)
R	int _PIPE();	KCC-FAI: tops20  (Comment: do actual pipe)
R	 _SPJFN();	KCC-FAI: tops20  (Comment: support for dup())
R	 _FLOUT();	KCC-FAI: tops20  (Comment: interface to FLOUT jsys)
R	char * $BYTE[];	KCC-FAI: tops20  (Comment: table of BP additives)
R	_RUNTM();	KCC: runtm  (Comment: First C routine called at start)
R	int _CH[fd];	KCC: runtm  (Comment: holds JFNs for FDs)
R	_FNAME();	KCC: runtm  (Comment: Extract filename from filespec)
R	int GETFD();	KCC: runtm  (Comment: Find unused file descriptor)
R	int _OFILE();	KCC: runtm.t  (Comment: Handler for fd open)
R	int _CFILE();	KCC: runtm.t  (Comment: Handler for fd create)
R	int _GTJFN();	KCC: runtm.t  (Comment: utility for TOPS20 GTJFN)
R	int IREAD();	KCC: runtm.t  (Comment: Image read)
R	int IWRITE();	KCC: runtm.t  (Comment: Image write)
RL	_PRINT();	KCC: printf	(Comment: support for s/f/printf)

; These are probably all of class "L" (support for V7 C library routines)
L	char _ctype_[128];	V7:  ctype_      (size: 130=0+130) (Need: GNU)
				KCC: ctype	(Comment: funny offset, 129)
HIL	constant _NFILE;	KCC: stdio.h	(Comment: max # file streams)
HIL	constant _IOREAD;	KCC: stdio.h	(Comment: buffer flag)
HIL	constant _IOWRT;	KCC: stdio.h	(Comment: buffer flag)
HIL	constant _IONBF;	KCC: stdio.h	(Comment: buffer flag)
HIL	constant _IOMYBUF;	KCC: stdio.h	(Comment: buffer flag)
HIL	constant _IOEOF;	KCC: stdio.h	(Comment: buffer flag)
HIL	constant _IOERR;	KCC: stdio.h	(Comment: buffer flag)
HIL	constant _IOSTRG;	KCC: stdio.h	(Comment: buffer flag)
HIL	constant _IOLBF;	KCC: stdio.h	(Comment: buffer flag)
HIL	constant _IORW;		KCC: stdio.h	(Comment: buffer flag)

?	_doprnt();	V7:  doprnt      (size: 664=588+76)
?	_doscan();	V7:  doscan     (size: 1800=1634+166)
?	_innum();	V7:  doscan     (size: 1800=1634+166)
?	_instr();	V7:  doscan     (size: 1800=1634+166)
?	_getccl();	V7:  doscan     (size: 1800=1634+166)
?	?int? _sctab;	V7:  doscan     (size: 1800=1634+166)
?	_endope();	V7:  endopen     (size: 276)
?	_filbuf();	V7:  filbuf      (size: 244=224+0+20)
?	_findio();	V7:  findiop     (size: 38)
?	_flsbuf();	V7:  flsbuf      (size: 544)
?	_cleanu();	V7:  flsbuf      (size: 544)
?	_insque();	V7:  insque      (size: 54)
?	_remque();	V7:  insque      (size: 54)
-3S	FILE _iob[];	V7:  data        (size: 202=0+202) (Need: GNU)
			KCC: stdio
?	?int? _lastbu;	V7:  data        (size: 202=0+202)
?	_strout();	V7:  strout      (size: 192)

; Special symbols - no actual code
*	defsym end;	V7: 
			KCC-FAI: tops20
*	defsym etext;	V7: 
			KCC-FAI: tops20
*	defsym edata;	V7: 
			KCC-FAI: tops20

?	?int LogFile;	V7:  syslog  (Comment: 2.9BSD?) (size: 840=704+104+32)
?	?int LogMask;	V7:  syslog  (Comment: 2.9BSD?) (size: 840=704+104+32)
?	?int LogStat;	V7:  syslog  (Comment: 2.9BSD?) (size: 840=704+104+32)
?	?int LogTag;	V7:  syslog  (Comment: 2.9BSD?) (size: 840=704+104+32)
?	?int SysProt;	V7:  syslog  (Comment: 2.9BSD?) (size: 840=704+104+32)
?	?int? sys_sig;	V7:  siglist (Comment: 2.9BSD?)    (size: 460=0+460)
?	accept();	V7:  accept (Comment: 2.9BSD?)       (size: 38=32+6)
?	backref();	V7:  regex (Comment: 2.9BSD?)  (size: 1814=1108+156+550)
?	bcmp();		V7:  bcmp (Comment: 2.9BSD?)         (size: 44)
?	bcopy();	V7:  bcopy (Comment: 2.9BSD?)        (size: 48)
?	bzero();	V7:  bzero (Comment: 2.9BSD?)        (size: 34)
?	cclass();	V7:  regex (Comment: 2.9BSD?)  (size: 1814=1108+156+550)
?	clearer();	V7:  clrerr (Comment: STDIO, 2.9?)   (size: 18)
?	closelo();	V7:  syslog  (Comment: 2.9BSD?) (size: 840=704+104+32)
?	connect();	V7:  connect (Comment: mpx? 2.9BSD?) (size: 38=32+6)
?	dysize();		V7:  ctime (Comment: 2.9BSD?) (size: 1188=1026+118+44)
?	endfsen();	V7:  fstab (Comment: 2.9BSD?) (size: 652=596+16+40)
?	endhost();	V7:  gethostent (Comment: 2.9BSD?)(size:1020=380+32+608)
?	endnete();	V7:  getnetent (Comment: 2.9BSD?) (size:1004=374+36+594)
?	endprot();	V7:  getprotent  (Comment: 2.9BSD?)(size:992=364+38+590)
?	endserv();	V7:  getservent (Comment: 2.9BSD?)(size:1022=392+38+592)
?	flock();	V7:  flock (Comment: 2.9BSD?)     (size: 26)
?	getfsen();	V7:  fstab (Comment: 2.9BSD?) (size: 652=596+16+40)
?	getfsfi();	V7:  fstab (Comment: 2.9BSD?) (size: 652=596+16+40)
?	getfssp();	V7:  fstab (Comment: 2.9BSD?) (size: 652=596+16+40)
?	gethbya();	V7:  gethostadd (comment: 2.9BSD?)  (size: 68)
?	gethbyn();	V7:  gethostnam  (comment: 2.9BSD?) (size: 74)
?	gethent();	V7:  gethostent (Comment: 2.9BSD?)(size:1020=380+32+608)
?	gethost();	V7:  gethostname (comment: 2.9BSD?) (size: 38=32+6)
?	gethsti();	V7:  gethostid   (comment: 2.9BSD?) (size: 20=18+2)
?	getnbya();	V7:  getnetaddr  (comment: 2.9BSD?) (size: 54)
?	getnbyn();	V7:  getnetname (comment: 2.9BSD?)   (size: 74)
?	getnent();	V7:  getnetent (Comment: 2.9BSD?) (size:1004=374+36+594)
?	getpbnu();	V7:  getprotnum (comment: 2.9BSD?)   (size: 38)
?	getpbyn();	V7:  getproto  (comment: 2.9BSD?)     (size: 74)
?	getpent();	V7:  getprotent  (Comment: 2.9BSD?)(size:992=364+38+590)
?	getppid();	V7:  getppid (comment: 2.9BSD?)      (size: 12)
?	getsbyn();	V7:  getservnam (comment: 2.9BSD?)   (size: 98)
?	getsbyp();	V7:  getservpor (comment: 2.9BSD?)   (size: 60)
?	getsent();	V7:  getservent (Comment: 2.9BSD?)(size:1022=392+38+592)
?	getwd();	V7:  getwd (comment: 2.9BSD?)    (size: 642=500+140+2)
?	gldav();	V7:  gldav (comment: 2.9BSD?)    (size: 26=24+2)
?	htonl();	V7:  hton (Comment: 2.9BSD?)         (size: 22)
?	htons();	V7:  hton (Comment: 2.9BSD?)         (size: 22)
?	isapipe();	V7:  isapipe (comment: 2.9BSD?)      (size: 48)
?	killpg();	V7:  killpg (comment: 2.9BSD?)       (size: 38=32+6)
?	ldfps();	V7:  ldfps (comment: 2.9BSD?)        (size: 12)
?	loadav();	V7:  loadav (comment: 2.9BSD?)       (size: 78)
?	lstat();	V7:  lstat (comment: 2.9BSD?)        (size: 38=32+6)
?	mkpwcle();	V7:  ruserpass (Comment: 2.9BSD?)(size: 6200=3274+1216+1710)
?	mkpwunc();	V7:  ruserpass (Comment: 2.9BSD?)(size: 6200=3274+1216+1710)
?	ntohl();	V7:  hton (Comment: 2.9BSD?)         (size: 22)
?	ntohs();	V7:  hton (Comment: 2.9BSD?)         (size: 22)
?	openlog();	V7:  syslog  (Comment: 2.9BSD?) (size: 840=704+104+32)
?	psignal();	V7:  psignal (Comment: 2.9BSD?)   (size: 134=114+20)
?	qfstat();	V7:  qfstat (Comment: 2.9BSD?)       (size: 34=30+4)
?	qstat();	V7:  qstat (Comment: 2.9BSD?)        (size: 38=32+6)
?	quota();	V7:  quota (Comment: 2.9BSD?)        (size: 62=50+12)
?	raddr();	V7:  raddr (Comment: 2.9BSD?)       (size: 388=318+70)
?	rcmd();		V7:  rcmd (Comment: 2.9BSD?)    (size: 1242=1058+184)
?	readlin();	V7:  readlink (Comment: 2.9BSD?)     (size: 40=34+6)
?	reboot();	V7:  reboot (Comment: 2.9BSD?)       (size: 38=32+6)
?	receive();	V7:  receive (Comment: 2.9BSD?)      (size: 54=44+10)
?	renice();	V7:  renice (Comment: 2.9BSD?)       (size: 38=32+6)
?	rexec();	V7:  rexec (Comment: 2.9BSD?)       (size: 702=646+56)
?	re_comp();	V7:  regex (Comment: 2.9BSD?)  (size: 1814=1108+156+550)
?	re_exec();	V7:  regex (Comment: 2.9BSD?)  (size: 1814=1108+156+550)
?	rhost();	V7:  rhost (Comment: 2.9BSD?)      (size: 1036=984+52)
?	rnumber();	V7:  rhost (Comment: 2.9BSD?)      (size: 1036=984+52)
?	rresvpo();	V7:  rcmd (Comment: 2.9BSD?)    (size: 1242=1058+184)
?	rtp();		V7:  rtp (Comment: 2.9BSD?)           (size: 32)
?	rtp_();		V7:  rtp (Comment: 2.9BSD?)          (size: 32)
?	ruserok();	V7:  rcmd (Comment: 2.9BSD?)    (size: 1242=1058+184)
?	ruserpa();	V7:  ruserpass (Comment: 2.9BSD?)(size: 6200=3274+1216+1710)
?	select();	V7:  select (Comment: 2.9BSD?)       (size: 62=50+12)
?	send();		V7:  send (Comment: 2.9BSD?)         (size: 54=44+10)
?	setegid();	V7:  setregid  (Comment: 2.9BSD?)   (size: 58=56+2)
?	seteuid();	V7:  setreuid  (Comment: 2.9BSD?) (size: 58=56+2)
?	setfsen();	V7:  fstab (Comment: 2.9BSD?) (size: 652=596+16+40)
?	sethost();	V7:  gethostent (Comment: 2.9BSD?)(size:1020=380+32+608)
?	sethost();	V7:  sethostname (Comment: 2.9BSD?)  (size: 38=32+6)
?	sethsti();	V7:  sethostid  (Comment: 2.9BSD?)  (size: 38=32+6)
?	setnete();	V7:  getnetent (Comment: 2.9BSD?) (size:1004=374+36+594)
?	setprot();	V7:  getprotent  (Comment: 2.9BSD?)(size:992=364+38+590)
?	setregi();	V7:  setregid  (Comment: 2.9BSD?)   (size: 58=56+2)
?	setreui();	V7:  setreuid  (Comment: 2.9BSD?) (size: 58=56+2)
?	setrgid();	V7:  setregid  (Comment: 2.9BSD?)   (size: 58=56+2)
?	setruid();	V7:  setreuid  (Comment: 2.9BSD?) (size: 58=56+2)
?	setserv();	V7:  getservent (Comment: 2.9BSD?)(size:1022=392+38+592)
?	socket();	V7:  socket   (Comment: 2.9BSD?)    (size: 54=44+10)
?	socketa();	V7:  socketa   (Comment: 2.9BSD?)   (size: 38=32+6)
?	submit();	V7:  submit    (Comment: 2.9BSD?)   (size: 24=22+2)
?	symlink();	V7:  symlink   (Comment: 2.9BSD?)   (size: 34=30+4)
?	syslog();	V7:  syslog  (Comment: 2.9BSD?) (size: 840=704+104+32)
?	tabify();	V7:  tabify   (Comment: 2.9BSD?)   (size: 228)
?	ucall();	V7:  ucall     (Comment: 2.9BSD?)   (size: 46=36+10)
?	vfork();	V7:  vfork    (Comment: 2.9BSD?)    (size: 28)
			KCC-FAI: tops20	(Comment: same as fork())
?	vhangup();	V7:  vhangup  (Comment: 2.9BSD?)    (size: 22=20+2)
?	_cleanu();	V7:  fakcu    (Comment: 2.9BSD?)     (size: 2)
?	_inet_ad();	V7:  inet_addr  (comment: 2.9BSD?) (size: 546=538+8)
?	_inet_ln();	V7:  inet_lnaof  (comment: 2.9BSD?) (size: 98)
?	_inet_ma();	V7:  inet_maddr (comment: 2.9BSD?) (size: 108)
?	_inet_no();	V7:  inet_netof (comment: 2.9BSD?) (size: 136)
?	_inet_nt();	V7:  inet_ntoa  (comment: 2.9BSD?) (size: 102=72+12+18)
?	_inet_nw();	V7:  inet_network (comment: 2.9BSD?) (size: 432)

; This group consists of V7 C runtimes and the symbols are not
; prefixed with "_".

R	aldiv();	V7:  aldiv (note: AS)        (size: 26)
R	almul();	V7:  almul (note: AS)        (size: 26)
R	alrem();	V7:  alrem (note: AS)        (size: 38)
R	cerror();	V7:  cerror (note: AS)       (size: 14)
R	csv();		V7:  csv   (note: AS)        (size: 26)
R	cret();		V7:  csv   (note: AS)        (size: 26)
R	fltused();	V7:  fltpr (note: AS)       (size: 252=246+6)
R	pgen();		V7:  fltpr (note: AS)       (size: 252=246+6)
R	pfloat();	V7:  fltpr (note: AS)       (size: 252=246+6)
R	pscien();	V7:  fltpr (note: AS)       (size: 252=246+6)
R	fptrap();	V7:  fakfp (note: AS)        (size: 16)
R	ldiv();		V7:  ldiv (note: AS)         (size: 22)
R	lmul();		V7:  lmul (note: AS)         (size: 22)
R	lrem();		V7:  lrem (note: AS)         (size: 34)
R	mcount();	V7:  mcount (note: AS)       (size: 30)
R	pgen();		V7:  ffltpr (note: AS)       (size: 10)
R	pscien();	V7:  ffltpr (note: AS)       (size: 10)
R	pfloat();	V7:  ffltpr (note: AS)       (size: 10)

-3X	struct datum	V7:  ? (Comment: -ldbm stuff, UPM only)
-3X	dbminit();	V7:  ? (Comment: -ldbm stuff, UPM only)
-3X	datum fetch();	V7:  ? (Comment: -ldbm stuff, UPM only)
-3X	store();	V7:  ? (Comment: -ldbm stuff, UPM only)
-3X	delete();	V7:  ? (Comment: -ldbm stuff, UPM only)
-3X	datum firstkey();	V7:  ? (Comment: -ldbm stuff, UPM only)
-3X	datum nextkey();	V7:  ? (Comment: -ldbm stuff, UPM only)

-3M	double exp();	V7:  ? (Comment: math lib)
-3M	double log();	V7:  ? (Comment: math lib)
-3M	double log10();	V7:  ? (Comment: math lib)
-3M	double pow();	V7:  ? (Comment: math lib)
-3M	double sqrt();	V7:  ? (Comment: math lib)
-3M	double floor();	V7:  ? (Comment: math lib)
-3M	double ceil();	V7:  ? (Comment: math lib)
-3M	double fabs();	V7:  ? (Comment: math lib)
-3M	double hypot();	V7:  ? (Comment: math lib)
-3M	double cabs();	V7:  ? (Comment: math lib)
-3M	double j0();	V7:  ? (Comment: math lib)
-3M	double j1();	V7:  ? (Comment: math lib)
-3M	double jn();	V7:  ? (Comment: math lib)
-3M	double y0();	V7:  ? (Comment: math lib)
-3M	double y1();	V7:  ? (Comment: math lib)
-3M	double yn();	V7:  ? (Comment: math lib)
-3M	double sin();	V7:  ? (Comment: math lib)
-3M	double cos();	V7:  ? (Comment: math lib)
-3M	double asin();	V7:  ? (Comment: math lib)
-3M	double acos();	V7:  ? (Comment: math lib)
-3M	double atan();	V7:  ? (Comment: math lib)
-3M	double atan2();	V7:  ? (Comment: math lib)
-3M	double sinh();	V7:  ? (Comment: math lib)
-3M	double cosh();	V7:  ? (Comment: math lib)
-3M	double tanh();	V7:  ? (Comment: math lib)


-3X	struct mint;	V7:  ? (Comment: -lmp library)
-3X	madd();		V7:  ? (Comment: -lmp library)
-3X	msub();		V7:  ? (Comment: -lmp library)
-3X	mult();		V7:  ? (Comment: -lmp library)
-3X	mdiv();		V7:  ? (Comment: -lmp library)
-3X	min();		V7:  ? (Comment: -lmp library)
-3X	mout();		V7:  ? (Comment: -lmp library)
-3X	pow();		V7:  ? (Comment: -lmp library)
-3X	gcd();		V7:  ? (Comment: -lmp library)
-3X	rpow();		V7:  ? (Comment: -lmp library)
-3X	msqrt();	V7:  ? (Comment: -lmp library)
-3X	sdiv();		V7:  ? (Comment: -lmp library)
-3X	mint *itom();	V7:  ? (Comment: -lmp library)

-3X	openpl();	V7:  ? (Comment: libs -lplot,-l300,-l300s,-l450,-l4014)
-3X	erase();	V7:  ? (Comment: libs -lplot,-l300,-l300s,-l450,-l4014)
-3X	label();	V7:  ? (Comment: libs -lplot,-l300,-l300s,-l450,-l4014)
-3X	line();		V7:  ? (Comment: libs -lplot,-l300,-l300s,-l450,-l4014)
-3X	circle();	V7:  ? (Comment: libs -lplot,-l300,-l300s,-l450,-l4014)
-3X	arc();		V7:  ? (Comment: libs -lplot,-l300,-l300s,-l450,-l4014)
-3X	move();		V7:  ? (Comment: libs -lplot,-l300,-l300s,-l450,-l4014)
-3X	cont();		V7:  ? (Comment: libs -lplot,-l300,-l300s,-l450,-l4014)
-3X	point();	V7:  ? (Comment: libs -lplot,-l300,-l300s,-l450,-l4014)
-3X	linemod();	V7:  ? (Comment: libs -lplot,-l300,-l300s,-l450,-l4014)
-3X	space();	V7:  ? (Comment: libs -lplot,-l300,-l300s,-l450,-l4014)
-3X	closepl();	V7:  ? (Comment: libs -lplot,-l300,-l300s,-l450,-l4014)

S-2	int errno;	V7:  ?
HS-2	constant EPERM;		V7:  errno.h
HS-2	constant ENOENT;	V7:  errno.h
HS-2	constant ESRCH;		V7:  errno.h
HS-2	constant EINTR;		V7:  errno.h
HS-2	constant EIO;		V7:  errno.h
HS-2	constant ENXIO;		V7:  errno.h
HS-2	constant E2BIG;		V7:  errno.h
HS-2	constant ENOEXEC;	V7:  errno.h
HS-2	constant EBADF;		V7:  errno.h
HS-2	constant ECHILD;	V7:  errno.h
HS-2	constant EAGAIN;	V7:  errno.h
HS-2	constant ENOMEM;	V7:  errno.h
HS-2	constant EACCES;	V7:  errno.h
HS-2	constant EFAULT;	V7:  errno.h
HS-2	constant ENOTBLK;	V7:  errno.h
HS-2	constant EBUSY;		V7:  errno.h
HS-2	constant EEXIST;	V7:  errno.h
HS-2	constant EXDEV;		V7:  errno.h
HS-2	constant ENODEV;	V7:  errno.h
HS-2	constant ENOTDIR;	V7:  errno.h
HS-2	constant EISDIR;	V7:  errno.h
HS-2	constant EINVAL;	V7:  errno.h
HS-2	constant ENFILE;	V7:  errno.h
HS-2	constant EMFILE;	V7:  errno.h
HS-2	constant ENOTTY;	V7:  errno.h
HS-2	constant ETXTBSY;	V7:  errno.h
HS-2	constant EFBIG;		V7:  errno.h
HS-2	constant ENOSPC;	V7:  errno.h
HS-2	constant ESPIPE;	V7:  errno.h
HS-2	constant EROFS;		V7:  errno.h
HS-2	constant EMLINK;	V7:  errno.h
HS-2	constant EPIPE;		V7:  errno.h
HS-2	constant EDOM;		V7:  errno.h
HS-2	constant ERANGE;	V7:  errno.h
HS-2	constant EDOM;		V7:  math.h
HS-2	constant ERANGE;	V7:  math.h

S-2	char **environ;	V7:  crt.o (Comment: C runtime startup module)
S-2	struct sgttyb;		V7:  sgtty.h
S-2	constant TIOCSETP;	V7:  sgtty.h
S-2	constant TIOCGETP;	V7:  sgtty.h
S-2	constant FIOCLEX;	V7:  sgtty.h
S-2	constant FIONCLEX;	V7:  sgtty.h

HS-2	constant SIGHUP;	V7:  signal.h	(Done: KCC)
HS-2	constant SIGINT;	V7:  signal.h	(Done: KCC)
HS-2	constant SIGQUIT;	V7:  signal.h	(Done: KCC)
HS-2	constant SIGILL;	V7:  signal.h	(Done: KCC)
HS-2	constant SIGTRAP;	V7:  signal.h	(Done: KCC)
HS-2	constant SIGIOT;	V7:  signal.h	(Done: KCC)
HS-2	constant SIGEMT;	V7:  signal.h	(Done: KCC)
HS-2	constant SIGFPE;	V7:  signal.h	(Done: KCC)
HS-2	constant SIKILL;	V7:  signal.h	(Done: KCC)
HS-2	constant SIGBUS;	V7:  signal.h	(Done: KCC)
HS-2	constant SIGSEGV;	V7:  signal.h	(Done: KCC)
HS-2	constant SIGSYS;	V7:  signal.h	(Done: KCC)
HS-2	constant SIGPIPE;	V7:  signal.h	(Done: KCC)
HS-2	constant SIGALRM;	V7:  signal.h	(Done: KCC)
HS-2	constant SIGTERM;	V7:  signal.h	(Done: KCC)

HS-2	constant SIGSTOP;	KCC:
HS-2	constant SIGTSTP;	KCC:
HS-2	constant SIGCONT;	KCC:
HS-2	constant SIGCHLD;	KCC:
HS-2	constant SIGTTIN;	KCC:
HS-2	constant SIGTTOU;	KCC:
HS-2	constant SIGTINT;	KCC:
HS-2	constant SIGXCPU;	KCC:
HS-2	constant SIGXFSZ;	KCC:

HS-2	constant BADSIG;	KCC:
HS-2	constant SIG_DFL;	KCC:
HS-2	constant SIG_IGN;	KCC:
HS-2	constant SIG_HOLD;	KCC:
HS-2	constant SIGNUMMASK;	KCC:
HS-2	constant SIGDODEFER;	KCC:
HS-2	constant SIGDOPAUSE;	KCC:
HS-2	constant SIGDORTI;	KCC:
HS-2	constant SIGISDEFER;	KCC:
HS-2	constant SIGUNDEFER;	KCC:
HS-2	constant DEFERSIG;	KCC:

HS-2	typedef daddr_t;	V7:  sys/types.h
HS-2	typedef dcaddr_t;	V7:  sys/types.h
HS-2	typedef ino_t;		V7:  sys/types.h
HS-2	typedef time_t;		V7:  sys/types.h
HS-2	typedef label_t;	V7:  sys/types.h
HS-2	typedef dev_t;		V7:  sys/types.h
HS-2	typedef off_t;		V7:  sys/types.h
HS-2	macro major();		V7:  sys/types.h
HS-2	macro minor();		V7:  sys/types.h
HS-2	macro makedev();	V7:  sys/types.h

HS-2	struct stat;	V7:  sys/stat.h
HS-2	struct timeb;	V7:  sys/timeb.h

HC-3	struct tm;	V7:  time.h
HC-3	macro int isalpha();	V7:  ctype.h	(Done: KCC)
HC-3	macro int isupper();	V7:  ctype.h	(Done: KCC)
HC-3	macro int islower();	V7:  ctype.h	(Done: KCC)
HC-3	macro int isdigit();	V7:  ctype.h	(Done: KCC)
HC-3	macro int isalnum();	V7:  ctype.h	(Done: KCC)
HC-3	macro int isspace();	V7:  ctype.h	(Done: KCC)
HC-3	macro int ispunct();	V7:  ctype.h	(Done: KCC)
HC-3	macro int isprint();	V7:  ctype.h	(Done: KCC)
HC-3	macro int iscntrl();	V7:  ctype.h	(Done: KCC)
HC-3	macro int isascii();	V7:  ctype.h	(Done: KCC)
HC-3	macro int isxdigit();	KCC: ctype.h	(Done: KCC) (Need: V7)
HC-3	macro int toupper();	KCC: ctype.h	(Done: KCC) (Need: V7)
HC-3	macro int tolower();	KCC: ctype.h	(Done: KCC) (Need: V7)
HC-3	macro int toascii();	KCC: ctype.h	(Done: KCC) (Need: V7)


HU-3	struct group;	V7:  grp.h
HU-3	struct passwd;	V7:  pwd.h
HC-3	struct jmp_buf;	V7:  setjmp.h

HI-3S	macro FILE;	V7:  stdio.h (Done: KCC)
HI-3S	FILE *stdin;	V7:  stdio.h (Done: KCC)
HI-3S	FILE *stdout;	V7:  stdio.h (Done: KCC)
HI-3S	FILE *stderr;	V7:  stdio.h (Done: KCC)
HI-3S	constant NULL;	V7:  stdio.h (Done: KCC)
HI-3S	constant EOF;	V7:  stdio.h (Done: KCC)
