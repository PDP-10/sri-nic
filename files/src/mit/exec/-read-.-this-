;[MIT-XX]SSY:<EXEC.TEST>-READ-.-THIS-.4, 16-Jun-83 19:52:29, Edit by TEK
;713 instruction file

	How to make an Version 5 MIT EXEC:
	----------------------------------

??= site abbreviation, one of: EE, NM, OZ, SP, XX

1) have a COMAND.CMD like this:

 set default submit /output:nolog /time:0:30:00 /unique:no /batch-log:supersede
 take

2) do this:
	@connect (to) <this directory>
	@SUBMIT ??make.ctl

3) to prevent cluttering the .UNV files should have generations-to-keep set to
   one 

	Files in This Directory
	-----------------------

DEC directory	 other DEC files that we are not using 
		 and all the original DEC sources
PCL directory	 PCL sources
RANDOM directory other sources

??MAKE.CTL	batch file to "make" an EXEC
??ASSM.CMD 	assembly file for site ??
??EXEC.EXE	where the new EXEC should end up

MIT-EXEC.DOC	complete user documentation - not written yet

source	object	   object  
 file    file      modules description    
------	------	   ------- -----------
??CONF			   CONFIGURATION SWITCHES for site ?? (no more EXECF0)
 EXECDE	EXEDE.UNV  EXECDE  DEFINITIONS: macros, bits, ACs, UUOs, UUO macros,
			    command table macros 
 EXECGL EXECGL		   GLOBAL SYMBOLS
EXECPR	??EXPR	   EXECPR  GLOBAL IMPURE STORAGE (variables): global storage, 
			    few local storage areas, IPCF blocks, page buffers
		   XSAVE   EXEC SAVE routine (not saved), some macros for it
EXECVR	??EXVR     EXECVR  VERSION NUMBER
EXEC0	??EX0	   EXEC0   DEPOSIT, EXAMINE, INFO MONITOR, INFO SUBSYSTEM,
			    ORIGINAL, SYSTAT, TERMINAL
			   entry vector, autologout, version printout, starting
			    address, initialization, top-level command dispatch
EXECCA	??EXCA	   EXECCA  COMMAND TABLES: top-level, ^E, information, fork,
			    set, continue
 			   FLDDB.s for top-level, PSI tables, code for RESET
EXEC1	??EX1	   EXEC1   "lots of commands": ACCESS, ADVISE, ARCHIVE, ATTACH,
			    BLANK, BREAK, CLOSE, CONNECT, DAYTIME, DEFINE,
			    ECHO, ^EDEFINE, DELETE, DISABLE, DISCARD, ^EEDDT,
			    ENABLE, END-ACCESS, EXPUNGE, KJOB, LOGIN, LOGOUT,
			    POP, PUSH, ^EQUIT, RECIEVE, REFUSE, REMARK, RENAME,
			    REPLACE, ^ERESET, RETRIEVE, ^ESEND, TAKE, TALK,
			    TREPLACE, UNATTACH, UNDELETE
			   code for cancel archive
EXECSE	??EXSE	   EXECSE  SET commands: ^ECEASE, SET, ^ESET
EXECMT	??EXMT	   EXECMT  DEVICE commands: ASSIGN, BACKSPACE, DEASSIGN,
			    DISMOUNT, MOUNT, REWIND, SKIP, UNLOAD
EXECP   ??EXP	   EXECP   PROGRAM commands: CONTINUE, CSAVE, DDT, ERUN, FORK
			    FREEZE, GET, KEEP, MERGE, NAME, R, REENTER, RESET,
			    RUN, SAVE, START, UNKEEP
EXECIN	??EXIN	   EXECIN  INFORMATION commands (except for information
			    batch-requests and information output-requests),
			    HELP 
EXEC2   ??EX2	   EXEC2   APPEND, COPY, DETACH, ^ESPEAK, TYPE
EXEC3	??EX3	   EXEC3   DIRECTORY commands:  DIRECTORY, FDIRECTORY,
			    RDIRECTORY, QD, TDIRECTORY, VDIRECTORY, WDIRECTORY 
EXEC4	??EX4      EXEC4   BUILD, ^ECREATE, ^EPRINT
EXECED	??EXED	   EXECED  EDITING commands: CREATE, EDIT
EXECCS	??EXCS	   EXECCS  COMMAND SCANNER (program development commands): 
			    COMPILE, DEBUG, EXECUTE, LOAD, CREF, TRANSLATE
EXECQU	??EXQU	   EXECQU  QUASAR commands: CANCEL, MODIFY, PLOT, PRINT, PUNCH,
			    SUBMIT
EXECMP	??EXMP	   EXECMP  MIC PARAMETERS
	EXECMP.UNV
EXECMI	??EXMI	   EXECMI  MIC commands: BACKTO, DO, ERROR, GOTO, IF, KMIC,
			    NOERROR, NOOPERATOR, OPERATOR 
			   MIC command processor
EXECCE  ??EXCE	   EXECCE  COMMAND EDIT commands: AGAIN, CEDIT, FLUSH, HISTORY
EXECPM  ??EXPM	   EXECPM  PCL MACRO routines
			   PCL commands: DECLARE, PRESERVE, UNDECLARE
			   PCL INFORMATION commands: PCL-OBJECTS, VARIABLE
			   PCL SET commands: VARIABLE
EXECPS  ??EXPS     EXECPS  PCL SERVICE routine table
			   System Variables and Procedures (entry points)
	EXECPI	 * EXECPI  PCL INTERFACE (system support routines)
	EXECPC   * EXECPC  PCL COMPILER support routines 
	EXECPX   * EXECPX  PCL EXECUTER (interpreter for stored commands)
	EXECPU   * EXECPU  PCL UTILITIES
EXECSU	??EXSU	   EXECSU  SUBROUTINES
	SYS:MACREL MACREL  MACSYM support routines

* - needs B362LB.REL (Bliss-36 Library Routines) to assemble

unless otherwise noted: source files have MAC extensions
			object files have REL extensions
