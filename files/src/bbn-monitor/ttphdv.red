REDIT 1(104) COMPARE by user CLYNN, 10-Feb-86 19:01:51
File 1: CWL:<DEC-6-1-BASE>TTPHDV.MAC.1
File 2: CWL:<5-4-NET>TTPHDV.MAC.1
***** CHANGE #1; PAGE 14, LINE 102; PAGE 14, LINE 102
  IFE .MCFLG,<

;ROUTINES THAT SHOULDN'T BE CALLED IF NO MCB CODE

CHKLLT::
TNUCLS:
REQNS:	BUG(NOMCCD)
  >
 ---------------------------------
  IFE .MCFLG,<

;ROUTINES THAT SHOULDN'T BE CALLED IF NO MCB CODE

CHKLLT::
TNUCLS:
REQNS:	;BUG(NOMCCD)
	BUG.(HLT,NOMCCD,TTYSRV,SOFT,<TTYSRV: ROUTINE CALLED FOR LINE TYPE NOT SUPPORTED>,,<

Cause:	Control passed to a routine not present in this monitor configuration.

Action:	See if TTNUS flag on for relevant line.  Examine stack for path.

>)
  >

***** CHANGE #2; PAGE 25, LINE 28; PAGE 25, LINE 28
;SPEED TO 0.

STPLNF:	JN TTSHU,(B),R		;DO NOTHING IF LINE ALREADY OFF
	SAVEAC <T2>
	IFQE. TTWSO,(B)		;LINE HAS BEEN SHUT OFF BEFORE?
	  SETONE TTWSO,(B)	;NO, REPORT IT VIA BUGINF
	  BUG(TTYSTP,<<T2,LINE>>)
	ENDIF.
 ---------------------------------
;SPEED TO 0.

STPLNF:	JN TTSHU,(B),R		;DO NOTHING IF LINE ALREADY OFF
	SAVEAC <T2>
	IFQE. TTWSO,(B)		;LINE HAS BEEN SHUT OFF BEFORE?
	  SETONE TTWSO,(B)	;NO, REPORT IT VIA BUGINF
;	  BUG(TTYSTP,<<T2,LINE>>)
	  BUG.(INF,TTYSTP,TTYSRV,HARD,<TTYSRV - LINE HAS BEEN SHUT OFF BECAUSE OF EXCESSIVE INPUT RATE>,<<T2,LINE>>,<

Cause:	A terminal line on RSX20F is generating input at an excessive
	rate.  It is being shut off for 3 seconds by having its input
	speed set to 0.

Diagnosis: This can result from a noisy line which has a high input
	baud rate.  If an EIA line, it may be too long and so
	picks up electrical noise.  This problem can be prevented
	by eliminating the noise or reducing the input speed.

>)
	ENDIF.

***** CHANGE #3; PAGE 39, LINE 37; PAGE 39, LINE 37
	MTOPR			;DO IT
	 ERJMP .+1		;PROCEED IF IT FAILS
	MOVX T1,.CLNSY		;CREATE SYSTEM LOGICAL NAME
	HRROI T2,DFNDS1		;THE LOGICAL NAME
	HRROI T3,DFNDLS		;THE DEFINITION
	CRLNM			;DO IT
DFNDLE:	 BUG (DLDEF)
	AOBJN W1,DFNDLL		;DO THEM ALL
 ---------------------------------
	MTOPR			;DO IT
	 ERJMP .+1		;PROCEED IF IT FAILS
	MOVX T1,.CLNSY		;CREATE SYSTEM LOGICAL NAME
	HRROI T2,DFNDS1		;THE LOGICAL NAME
	HRROI T3,DFNDLS		;THE DEFINITION
	CRLNM			;DO IT
DFNDLE:	 ;BUG (DLDEF)
	 BUG.(INF,DLDEF,TTYSRV,HARD,<LOGICAL NAME DEFINE FAILED FOR FE CTY>,,<

Cause:	This BUG is not documented yet.

Action:

>)
	AOBJN W1,DFNDLL		;DO THEM ALL

***** CHANGE #4; PAGE 44, LINE 43; PAGE 44, LINE 43
DZINLP:	MOVE T1,P2		;ADDRESS OF DZ11
	CALL UBGOOD		;DOES IT EXIST ?
	 JRST DZNOUB		;NO
	MOVEI T1,DZCLR		;INIT THE DZ11
	WRIO T1,DZCSR(P2)	;RESET THE DZ
	MOVSI T2,1		;SET UP LOOP COUNT
DZCLRK:	SOJE T2,[BUG(DZCLRB)]
	TIOE T1,DZCSR(P2)	;WAIT FOR FINISH
 ---------------------------------
DZINLP:	MOVE T1,P2		;ADDRESS OF DZ11
	CALL UBGOOD		;DOES IT EXIST ?
	 JRST DZNOUB		;NO
	MOVEI T1,DZCLR		;INIT THE DZ11
	WRIO T1,DZCSR(P2)	;RESET THE DZ
	MOVSI T2,1		;SET UP LOOP COUNT
DZCLRK:	SOJE T2,[;BUG(DZCLRB)
		BUG.(HLT,DZCLRB,TTYSRV,hard,<UNABLE TO RESET DZ11>,,<

Cause:	This BUGHLT can only occur on the 2020.

	The DZCLR bit is written to the DZ to cause the DZ to clear.  Then
	the code loops, continually checking the DZCLR bit, waiting for
	it to come on, which signals that the DZ has cleared.

	The loop counts up to 2**18, under the assumption that this is
	ample time for the DZ to clear.  If the DZCLR bit does not come on
	after the 2**18 runs out, the DZCLRB BUGHLT occurs.
>)]
	TIOE T1,DZCSR(P2)	;WAIT FOR FINISH

***** CHANGE #5; PAGE 45, LINE 45; PAGE 45, LINE 45
	CHNOFF DLSCHN		;TURN OFF DLS CHANNEL
	MOVE T1,DZLNCT		;GET LINE COUNTS
	JUMPE T1,DZCH7E		;IF NO DZ'S THEN NO CHECK
	MOVE T2,[DZ11BA]	;GET BASE ADDRESS
	MOVEI T3,DZRIEN!DZTIEN!DZMSCN
DZCH7L:	TION T3,DZCSR(T2)	;CHECK FOR ENABLES
	JRST [	BUG(DZLINT,<<T2,D>>)
		MOVEI T4,377	;SET ALL LINES TO INTERRUPT ASSUMING LOST ONE
 ---------------------------------
	CHNOFF DLSCHN		;TURN OFF DLS CHANNEL
	MOVE T1,DZLNCT		;GET LINE COUNTS
	JUMPE T1,DZCH7E		;IF NO DZ'S THEN NO CHECK
	MOVE T2,[DZ11BA]	;GET BASE ADDRESS
	MOVEI T3,DZRIEN!DZTIEN!DZMSCN
DZCH7L:	TION T3,DZCSR(T2)	;CHECK FOR ENABLES
	JRST [	;BUG(DZLINT,<<T2,D>>)
		BUG.(CHK,DZLINT,TTYSRV,HARD,<DZ11 LOST INTERRUPT ENABLE>,
<<T2,D>>,<

Cause:	This BUG is not documented yet.

Action:

Data:

>)
		MOVEI T4,377	;SET ALL LINES TO INTERRUPT ASSUMING LOST ONE

***** CHANGE #6; PAGE 46, LINE 26; PAGE 46, LINE 26

DZINPP:	MOVE P1,DZLNOF		;SET UP LINE NUMBER (MUST START AT 1
DZINPL:	RDIO T1,DZRBUF(Q2)	;GET A CHARACTER
	TRNN T1,DZRDVL		;VALID?
	JRST DZNXLN		;NO -- GO TO NEXT LINE
	TRNE T1,DZROVR		;OVER RUN
	BUG(DZOVER,<<T1,D>>)
	LOAD T2,DZTXLN,T1	;GET THE LINE NUMBER
 ---------------------------------

DZINPP:	MOVE P1,DZLNOF		;SET UP LINE NUMBER (MUST START AT 1
DZINPL:	RDIO T1,DZRBUF(Q2)	;GET A CHARACTER
	TRNN T1,DZRDVL		;VALID?
	JRST DZNXLN		;NO -- GO TO NEXT LINE
	TRNE T1,DZROVR		;OVER RUN
;	BUG(DZOVER,<<T1,D>>)
	BUG.(CHK,DZOVER,TTYSRV,HARD,<DZ11 SILO OVERRUN>,<<T1,D>>,<

Cause:	This BUG is not documented yet.

Action:

Data:

>)
	LOAD T2,DZTXLN,T1	;GET THE LINE NUMBER

