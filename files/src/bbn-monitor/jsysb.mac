	SEARCH PROLOG
	TTITLE JSYSB
	SWAPCD

;5.3 beg 
;OPERATOR FUNCTION CALL JSYS "OPRFN". THIS JSYS EXISTS TO BE
;USED BY THE EXEC OR EPHEMERONS TO DO OPERATOR TASKS, SO THE OP
;DOES NOT NEED TO GET INTO MDDT MOST OF THE TIME.
;
;THE FUNCTIONS ARE CALLED BY SIXBIT NAME, WHICH REQUIRES A TABLE
;SEARCH BUT IS OK BECAUSE THESE FUNCTIONS SHOULD ONLY BE CALLED
;ONCE A DAY OR SO.
;
;FIELD SITES NOTE -- BBN WILL NEVER ADD ANY SIXBIT NAMES STARTING WITH
;THE LETTER "X". FIELD SITES CAN USE THAT CLASS OF NAMES WITHOUT
;NEEDING TO WORRY ABOUT CONFLICT WITH FUTURE BBN FUNCTIONS.

;CALL - MOVE 1,[SIXBIT .FUNCTION-NAME.]
;	MOVE 2,ARGUMENT DEPENDENT ON FUNCTION. (MORE IN 3 &4...)
;	OPRFN
;	  FAIL RETURN, ERROR CODE IN 1
;	GOOD RETURN


.OPRFN::MCENT		;ESTABLISH MONITOR CONTEXT
	MOVSI P1,-NOPRFS		;COUNT THRU NAME TABLE
	CAMN A,OPRFTB(P1)	;SEARCH. THIS ONE?
	JRST OPRFN1		;YES.
	AOBJN P1,.-2		;NO, SEARCH ONWARDS.
	MOVEI A,OPRFX1		;NOT IN TABLE.
	JRST MRETNE		;FAIL, NONSKIP, CODE TO LSTERR AND 1

OPRFN1:	HLRZ P2,OPRFT2(P1)	;SEE WHAT CAPABILITIES ARE NEEDED
	MOVEI A,OPRFX3		;ERROR CODE IN CASE INSUFF CAPS
	TDNN P2,CAPENB		;ARE THEY ON IN THIS FORK?
	JUMPN P2,MRETNE		;IF ANY REQUIRED, THEY AREN'T HERE.
	HRRZ P2,OPRFT2(P1)	;OK. GO DO THE FUNCTION
	PUSHJ P,0(P2)		; ..
	  JRST MRETNE		;FAILED. ERROR CODE IN 1
	SMRETN			;SUCCESS RETURN.

;HERE ARE THE FUNCTIONS DEFINED SO FAR. ARGS TO THE "X" MACRO
; ARE SIXBIT NAME, CAPABILITIES NEEDED, TAG TO CALL.


DEFINE OPRFNS <
REPEAT 0,<IFN PIESLC,<
	X(KFACT,SC%WHL!SC%OPR,OPRKFC)>
> ;END TEMPORARY REPEAT 0

	X(MNTSET,SC%WHL!SC%OPR!SC%MNT,OPRMNS)
	X(HSTINI,SC%WHL!SC%OPR,OPRHIN)
	X(OPRMLC,0,RSKP);	OPRMLC##)
REPEAT 0,<IFN JTRPSW,<
	X(JTRPON,SC%WHL!SC%OPR,OPRJTN)>
	X(ENTFLG,SC%WHL!SC%OPR!SC%MNT,OPRENT)
> ;END TEMPORARY REPEAT 0
REPEAT 0,<	X(MKPGSA,SC%WHL!SC%OPR!SC%MNT,OPRMPA)
	X(MKPGSU,SC%WHL!SC%OPR!SC%MNT,OPRMPU)
	X(DDTRCL,SC%WHL!SC%OPR,OPRRCD)
	X(DDTFSH,SC%WHL!SC%OPR,OPRFSD)
> ;END REPEAT 0

	X(DBUGSW,SC%WHL!SC%OPR,OPRBSW)
	X(DCHKSW,SC%WHL!SC%OPR,OPRCSW)
	X(USRSPC,SC%WHL!SC%OPR,OPRUSP)
	X(SYSSPC,SC%WHL!SC%OPR,OPRSSP)
	X(ACTINI,SC%WHL!SC%OPR,OPRACT)
	X(CASHON,SC%WHL!SC%OPR,OPRCON)
	X(CASHOF,SC%WHL!SC%OPR,OPRCOF)
;ADD MORE HERE
; Following are so the table can be patched without reassembly.
	X(OPRZZ7,SC%WHL!SC%OPR,R)
	X(OPRZZ8,SC%WHL!SC%OPR,R)
	X(OPRZZ9,SC%WHL!SC%OPR,R)
>

DEFINE X(NAME,CAPS,ROUTIN)<	<SIXBIT \NAME\>>
OPRFTB:	OPRFNS
NOPRFS==.-OPRFTB

DEFINE X(NAME,CAPS,ROUTIN)<	XWD CAPS,ROUTIN>
OPRFT2:	OPRFNS

REPEAT 0,<
IFN PIESLC,<

OPRKFC:	FMPRI B,(1.0)		;MAKE SURE IT'S A NORMALIZED FP NUMBER
	CAIL B,0		;AND IN RANGE 0 THRU 1
	CAMLE B,[1.0]
	JRST OPRFXX		;NO GOOD.
	MOVEM B,KFACT		;OK, SET IT.
	JRST RSKP		;GOOD RETURN.
>
> ;END REPEAT 0


REPEAT 0,<
OPRENT:	SKIPE C,B		;SET ENTFLG TO 0 OR -1
	AOJN C,OPRFXX		;JUMP IF NOT 0 OR -1
	MOVEM B,ENTFLG		;OK, SET IT.
	JRST RSKP
> ;END REPEAT 0

REPEAT 0,<IFN JTRPSW,<
OPRJTN:	SKIPE C,B		;SET JTRPON TO 0 OR -1
	AOJN C,OPRFXX		;JUMP IF NOT LEGAL VALUE
	MOVEM B,JTRPON		;OK, SET IT.
	JRST RSKP
>
> ;END REPEAT 0

REPEAT 0,<
OPRRCD:	PUSHJ P,DDTRCL		;RECLAIM DDT
	JRST RSKP

OPRFSD:	PUSHJ P,DDTFSH		;FLUSH DDT
	JRST RSKP
> ;END REPEAT 0


OPRBSW:	CAIL B,0		;SET DEBUGSWITCH TO 0 THRU 2
	CAILE B,2		; ..
	JRST OPRFXX		;BAD VALUE
	MOVEM B,DBUGSW		;OK. SET IT
	JRST RSKP

OPRCSW:	CAIE B,0		;0 OR 1 TO DCHKSW
	CAIN B,1
	JRST OPRCS1		;OK
OPRFXX:	MOVEI A,OPRFX2		;BAD ARG ERROR CODE
	POPJ P,0		;NON-SKIP RETURN
OPRCS1:	MOVEM B,DCHKSW		;STORE GOOD DCHKSW
	JRST RSKP

REPEAT 0,<
OPRMPA:	MOVE A,B		;MOVE ARGUMENTS OVER TO 1 AND 2
	MOVE B,C
	CAMLE A,B		;PAGES IN RIGHT ORDER?
	JRST OPRFXX
	CAML A,SWPCOR		;AND IN REASONABLE AREA?
	CAIL B,MAXCOR		; ..
	JRST OPRFXX		;NO
	PUSHJ P,MKPGSA		;PUT PAGES ON LINE
	JRST RSKP

OPRMPU:	MOVE A,B		;TAKE PAGES OFF LINE
	MOVE B,C
	CAMLE A,B
	JRST OPRFXX
	CAML A,SWPCOR
	CAIL B,MAXCOR
	JRST OPRFXX
	PUSHJ P,MKPGSU
	JRST RSKP
> ;END REPEAT 0


OPRUSP:	JUMPL B,OPRFXX		;LEGAL FOR .GE. 0
	MOVEM B,USRSPC		;SET USER DISK LIMIT
	JRST RSKP

OPRSSP:	JUMPL B,OPRFXX		;LEGAL FOR .GE. 0
	MOVEM B,SYSSPC		;SET SYSTEM DISK LIMIT
	JRST RSKP

;RELINSTATE ROUTINE WHEN EXISTS
OPRACT:	REPEAT 0,<CALL ACTIN1>		; PUT NEW UACHK.FILE OUT
	 RET			; FAILED
	JRST RSKP		; OK


IFDEF IMPCHN,<
OPRHIN:	CALL HSTINI		;LOAD NEW HOST NAME FILE
	  POPJ P,0		;FAILED
	JRST RSKP		;OK.

OPRICY:
REPEAT 0,<	MOVEI B,1		;SET IMPDRQ TO CYCLE THE NET
	MOVEM B,IMPDRQ		; ..
	JRST RSKP		;RETURN.
>
	RET			; Function no good

;;; Multinet network on/off function
OPRMNS:	MOVE T1,T2		; Get net number
	MOVE T2,T3		; And value
	CALLRET MNTSET		; Set it if possible
>

OPRCON:	CALL CASHON
	JRST RSKP

OPRCOF:	CALL CASHOF
	JRST RSKP
;5.3 end -

;#240 JSYS to get (release) monitor page to (from) user address space
;#240 
;#240 Accepts in T1/ <SPT index>  or  <SPT index,,page>  or  <0>
;#240            T2/ address in user space
;#240
;#240 Returns:
;#240	+1 on error
;#240	   T1/ error code
;#240	+2 on success
;#240
;#240	Requirres Wheel or Operator capability

.GTMPG::MCENT			;#240 
	MOVE	T3,CAPMSK	;#240 Get capabilities
	TXNN	T3,SC%WHL!SC%OPR ;#240 Need not be enabled
	 RETERR	(CAPX1)		;#240 
	TRNE	T2,777		;#240 User address on page boundry ?
	 RETERR	(GTMX01)	;#240 No, must be
	JUMPE	T1,GTMOK	;#240 No more checks on map out
	MOVE	T3,T1		;#240 Copy first argument
	TLNE	T1,-1		;#240 Is it <SPT index,,page> ?
	 JRST	[		;#240 Yes,
		 HLRZS	T3	;#240 move SPT index to RH of T3
		 TRNE	T1,777000 ;#240 Check for legal page #
		  JRST	GTMUU	;#240 return index error
		 JRST	.+1 ]	;#240 OK, rejoin the flow
	CAIGE	T3,NOFN		;#240 Is it an OFN ?
	 JRST	[ SKIPE T4,SPT(T3) ;#240 Yes, check for existance
		  CAMN	T4,[ -1 ] ;#240 0 or -1 means it doesn't
		   JRST	GTMUU	;#240 Return index error
		  JRST	GTMOK ]	;#240 OK, go map it
	OPSTR	<SKIPN>,SPTSHC,(T3) ;#240 Check for non-zero share count
				;#240 This protects against pages in transition
	 JRST	GTMUU		;#240 No good, index error
	CAIGE	T3,SSPT		;#240 Final check; In range ?
	JRST	GTMOK		;#240 Yes, go map it

GTMUU:	RETERR	(GTMX02)	;#240 General index error

GTMOK:	HRLI	T2,(PM%RD+TWUSR);#240 Read only / User space
	CALL	SETMPG		;#240 Map the page in/out
	SMRETN			;#240 Skip return for success

	TNXEND

	END
