
[PHOTO:  Recording initiated  Mon 16-Feb-87 10:47pm]

!xsearch


 SUBSTRING search routine (compiled  9-Aug-83) ? for help
Files to search: *.mac.0

Files to search: (continued) : 

Target 1) intxpb

Target 2) intxbw

Target 3) intbsz

Target 4) bf1822

Target 5) maxwpm

Target 6) intbls

Target 7) nntbfs

Target 8) lclpkt

Target 9) maxldr

Target 10) pkteli

Target 11) 

Equivalences:  1// 


current expression: 1 V 2 V 3 V 4 V 5 V 6 V 7 V 8 V 9 V 10
Expression: 

Create .PL files? NO//


Output goes to: * TTY: //

Type DEL or RUBOUT to abort any particular file search.
Searching <6-1-MONITOR>ANAUNV.MAC.2

(ANAUNV.MAC.2 1.20) {maxldr}
; Change MAXLDR and .NBxxx to accomodate both 1822 and 10MB Ethernet

(ANAUNV.MAC.2 3.13) {maxldr}
.NBLD0==<MAXLDR-3>	;IMP-TO-HOST LEADER, WORD 0

(ANAUNV.MAC.2 3.14) {maxldr}
.NBLD1==<MAXLDR-2>	;I-H LEADER, WORD 1

(ANAUNV.MAC.2 3.15) {maxldr}
.NBLD2==<MAXLDR-1>	;I-H LEADER, WORD 2

(ANAUNV.MAC.2 3.16) {maxldr}
.NBHHL==<MAXLDR+0>	;HOST-TO-HOST LEADER

(ANAUNV.MAC.2 3.17) {maxldr}
.NBDW0==<MAXLDR+1>	;DATA WORD ZERO

(ANAUNV.MAC.2 10.37) {lclpkt}
LCLPKT==<.P==.P+1>		;Marks start of local substructure

(ANAUNV.MAC.2 10.39) {lclpkt,pkteli}
;Area  between LCLPKT and PKTELI must be big enough to hold the biggest

(ANAUNV.MAC.2 10.44) {lclpkt}
IMP96L==LCLPKT			;96-bit ARPANET Leader (should be flushed)

(ANAUNV.MAC.2 10.45) {maxldr}
MAXLDR==4			;Current maximum local leader (Arpanet)

(ANAUNV.MAC.2 10.48) {maxldr}
MAXLDR==5			;Current maximum local leader (10MB Ethernet)

(ANAUNV.MAC.2 10.50) {pkteli,maxldr}
PKTELI==<.P==.P+MAXLDR>		;End Local Information

(ANAUNV.MAC.2 10.54) {intxpb}
;INTXPB (in STG) contains maximum PIPL for any interface.

(ANAUNV.MAC.2 10.58) {pkteli,lclpkt}
;PACKSZ==PKTELI-LCLPKT+<M2+3>/4	;Num. words in IMPPHY Pkt

(ANAUNV.MAC.2 10.59) {lclpkt}
;MAXPSZ==LCLPKT+PACKSZ		;Maximum packet size

(ANAUNV.MAC.2 10.60) {maxwpm}
;Note:	MAXWPM <-> NBBSZ <-> PACKSZ <=> PFSIZ <=> MAXPSZ (for GETBLK)

(ANAUNV.MAC.2 11.12) {pkteli}
DEFSTR(PIVER,PKTELI+.IPKVR,3,4)		;PACKET.IP.VERSION

(ANAUNV.MAC.2 11.13) {pkteli}
DEFSTR(PIDO,PKTELI+.IPKVR,7,4)		;PACKET.IP.DATA-OFFSET

(ANAUNV.MAC.2 11.14) {pkteli}
DEFSTR(PITOS,PKTELI+.IPKVR,15,8)	;PACKET.IP.TYPE-OF-SERVICE

(ANAUNV.MAC.2 11.16) {pkteli}
  DEFSTR(PIPRC,PKTELI+.IPKVR,10,3)	;PACKET.IP.PRECEDENCE

(ANAUNV.MAC.2 11.17) {pkteli}
  DEFSTR(PILDY,PKTELI+.IPKVR,11,1)	;PACKET.IP.LOW-DELAY

(ANAUNV.MAC.2 11.18) {pkteli}
  DEFSTR(PIHTR,PKTELI+.IPKVR,12,1)	;PACKET.IP.HIGH-THROUGHPUT

(ANAUNV.MAC.2 11.19) {pkteli}
  DEFSTR(PIHRL,PKTELI+.IPKVR,13,1)	;PACKET.IP.HIGH-RELIABILITY

(ANAUNV.MAC.2 11.21) {pkteli}
DEFSTR(PIPL,PKTELI+.IPKVR,31,16)	;PACKET.IP.PACKET-LENGTH

(ANAUNV.MAC.2 11.22) {pkteli}
DEFSTR(PISID,PKTELI+.IPKSG,15,16)	;PACKET.IP.SEGMENT-ID

(ANAUNV.MAC.2 11.23) {pkteli}
DEFSTR(PIFLG,PKTELI+.IPKSG,18,3)	;PACKET.IP.FLAGS

(ANAUNV.MAC.2 11.26) {pkteli}
  DEFSTR(PIDF,PKTELI+.IPKSG,17,1)	;PACKET.IP.DONT-FRAGMENT

(ANAUNV.MAC.2 11.27) {pkteli}
  DEFSTR(PIMF,PKTELI+.IPKSG,18,1)	;PACKET.IP.MORE-FRAGMENTS

(ANAUNV.MAC.2 11.28) {pkteli}
DEFSTR(PIFO,PKTELI+.IPKSG,31,13)	;PACKET.IP.FRAGMENT-OFFSET

(ANAUNV.MAC.2 11.29) {pkteli}
DEFSTR(PITTL,PKTELI+.IPKPR,7,8)		;PACKET.IP.TIME-TO-LIVE

(ANAUNV.MAC.2 11.30) {pkteli}
DEFSTR(PIPRO,PKTELI+.IPKPR,15,8)	;PACKET.IP.PROTOCOL

(ANAUNV.MAC.2 11.35) {pkteli}
DEFSTR(PICKS,PKTELI+.IPKPR,31,16)	;PACKET.IP.HEADER-CHECKSUM

(ANAUNV.MAC.2 11.36) {pkteli}
DEFSTR(PISH,PKTELI+.IPKSH,31,32)	;PACKET.IP.SOURCE-HOST

(ANAUNV.MAC.2 11.37) {pkteli}
DEFSTR(PIDH,PKTELI+.IPKDH,31,32)	;PACKET.IP.DESTINATION-HOST

(ANAUNV.MAC.2 14.12) {pkteli,lclpkt}
PPBFSZ==PKTELI+.RTJST(-1,PIDO)+17+2-LCLPKT

(ANAUNV.MAC.2 14.23) {lclpkt,lclpkt}
PPBWDS==PPBFSZ+5+1+LCLPKT	;Remove LCLPKT, add to PPBFSZ & reorder

(ANAUNV.MAC.2 24.41) {pkteli}
TCPNPW==PKTELI+.RTJST(-1,PIDO)+.RTJST(-1,PTDO)+<<<1_^D<WID(PIPL)-WID(PIFO)>>+3>/
4>
^L
Searching <6-1-MONITOR>APRSRV.MAC.1
Searching <6-1-MONITOR>ARP.MAC.1

(ARP.MAC.1 3.5) {pkteli,lclpkt}
OFFETH==<PKTELI-4-LCLPKT>	;Offset of start of 10MB encapsulation

(ARP.MAC.1 3.7) {maxldr}
;Sanity check in case someone changes MAXLDR again

(ARP.MAC.1 3.9) {maxldr,maxldr}
IFL MAXLDR-5 <PRINTX % MAXLDR too small for 10MB Ethernet operation>

(ARP.MAC.1 4.31) {lclpkt}
..PKT==PKTSII-LCLPKT		;We are using datagram relative pointers
^L
Searching <6-1-MONITOR>BUGS.MAC.1
Searching <6-1-MONITOR>CFSSRV.MAC.1

(CFSSRV.MAC.1 124.10) {lclpkt}
	MOVEI Q2,LCLPKT		;Number we need
^L
Searching <6-1-MONITOR>CIDLL.MAC.1
Searching <6-1-MONITOR>COMND.MAC.3
Searching <6-1-MONITOR>CRYPT.MAC.1
Searching <6-1-MONITOR>CTERMD.MAC.1
Searching <6-1-MONITOR>D36COM.MAC.1
Searching <6-1-MONITOR>D36PAR.MAC.1
Searching <6-1-MONITOR>DATIME.MAC.1
Searching <6-1-MONITOR>DDT.MAC.1
Searching <6-1-MONITOR>DEVICE.MAC.1
Searching <6-1-MONITOR>DIAG.MAC.1
Searching <6-1-MONITOR>DIRECT.MAC.1
Searching <6-1-MONITOR>DISC.MAC.1
Searching <6-1-MONITOR>DOMSYM.MAC.1
Searching <6-1-MONITOR>DSKALC.MAC.1
Searching <6-1-MONITOR>DTESRV.MAC.1
Searching <6-1-MONITOR>ENET.MAC.1

(ENET.MAC.1 5.10) {lclpkt}
;Ethernet encapsulation - offsets from LCLPKT storage offset.

(ENET.MAC.1 5.11) {maxldr}
; Offset zero is a fake free storage header -- see MAXLDR definition.

(ENET.MAC.1 5.13) {pkteli,lclpkt}
OFF3MB==<PKTELI-1-LCLPKT>	;Offset of start of 3MB encapsulation

(ENET.MAC.1 5.14) {pkteli,lclpkt}
OFFETH==<PKTELI-4-LCLPKT>	;Offset of start of 10MB encapsulation

(ENET.MAC.1 5.16) {maxldr}
;Sanity check in case someone changes MAXLDR again

(ENET.MAC.1 5.18) {maxldr,maxldr}
IFL MAXLDR-5 <PRINTX MAXLDR too small for 10MB Ethernet operation>

(ENET.MAC.1 5.19) {maxldr,maxldr}
IFL MAXLDR-2 <PRINTX MAXLDR too small for 3MB Ethernet operation>

(ENET.MAC.1 18.57) {lclpkt}
	  MOVEI T3,OFFETH	;Offset from LCLPKT (start of encaps.)

(ENET.MAC.1 18.61) {lclpkt}
	  MOVEI T3,OFF3MB	;Offset from LCLPKT (start of encaps.)

(ENET.MAC.1 23.22) {lclpkt}
IPRCI0:	LOAD T2,PIPL,-LCLPKT(P4) ;Get datagram length

(ENET.MAC.1 23.24) {intxpb}
	 CAMLE T2,INTXPB	; ...

(ENET.MAC.1 27.15) {intxpb}
	 CAMLE T1,INTXPB	;Fits within an IP buffer?

(ENET.MAC.1 28.4) {pkteli}
;The pointer returned by GETBFF points at the PKTELI offset, the beginning of

(ENET.MAC.1 28.5) {lclpkt}
; the data.  LCLPKT is the preceding offset that marks the beginning of the

(ENET.MAC.1 29.16) {lclpkt}
	OPSTR <SKIPN>,PFSIZ,-LCLPKT(T1)	;Full size packet?

(ENET.MAC.1 31.11) {lclpkt}
	LOAD T1,PIPL,-LCLPKT(T2) ;T1/ Get packet length in octets
^L
Searching <6-1-MONITOR>ENQ.MAC.1
Searching <6-1-MONITOR>ERBLD.MAC.1
Searching <6-1-MONITOR>F2KDDT.MAC.1
Searching <6-1-MONITOR>F2MDDT.MAC.1
Searching <6-1-MONITOR>FESRV.MAC.1
Searching <6-1-MONITOR>FILINI.MAC.1
Searching <6-1-MONITOR>FILMSC.MAC.1
Searching <6-1-MONITOR>FORK.MAC.1
Searching <6-1-MONITOR>FREE.MAC.1
Searching <6-1-MONITOR>FUTILI.MAC.1
Searching <6-1-MONITOR>GETSAV.MAC.1
Searching <6-1-MONITOR>GLOBS.MAC.2

(GLOBS.MAC.2 1.169) {intbsz}
;Add INTBSZ

(GLOBS.MAC.2 2.301) {lclpkt}
QEXT <LCKTTY,LCL2GL,LCLPKT,LCNSP,LCSMEM,LCSMEM,LDAGER,ldr96b,LDTLCK,LEVCHN>

(GLOBS.MAC.2 2.318) {maxwpm}
QEXT <MAXWPM,MCRRH,MDDDIR,MDDEXT,MDDNAM,MDDTX,MDDVER,MDSKIO>

(GLOBS.MAC.2 2.349) {nntbfs}
QEXT <NLFKS,NLHOST,NLINES,NLOWPG,NLQFK,NMAPLK,NMAXPG,NNAMES,NNSBE,NNTBFS>

(GLOBS.MAC.2 7.177) {bf1822}
QEXT <BF18SZ,BF1822,BF18BI,BF18BO,NETINI>

(GLOBS.MAC.2 7.189) {intxpb}
QEXT <INTSVT,INTTIM,INTTRC,INTWTB,INTXPB,INTXPW,INTZOT,LCKCAL,LCLHID,MAXNET>

(GLOBS.MAC.2 7.203) {maxwpm}
QEXT <IPUSE,JCNTCB,MAXJCN,MAXTCB,MAXWPM,MLKMA,MRETN,NTWBWD,NXTLBL,OHUSE,OPDLAY>

(GLOBS.MAC.2 7.241) {intbsz}
QEXT <TSTEX0,TSTEX1,IPNIN,MNTRSV,IMPSTS,INTBSZ,INTLKW,INTULW,IMPCHK,NHOSTN>
^L
Searching <6-1-MONITOR>GTDOM.MAC.1
Searching <6-1-MONITOR>GTJFN.MAC.1
Searching <6-1-MONITOR>IMPANX.MAC.1

(IMPANX.MAC.1 1.3) {maxldr}
; To co-exist with MEIS, do not assume that MAXLDR = 4.
^L
Searching <6-1-MONITOR>IMPDV.MAC.1

(IMPDV.MAC.1 1.6) {maxldr}
; To co-exist with MEIS, fix assumptions that MAXLDR =4

(IMPDV.MAC.1 1.28) {maxwpm}
;MAXWPM in STG now.

(IMPDV.MAC.1 1.36) {maxwpm,lclpkt}
;Reduce MAXWPM by LCLPKT.

(IMPDV.MAC.1 12.4) {maxldr}
;		T2 - Pointing MAXLDR (defined in INPAR) words above

(IMPDV.MAC.1 12.11) {maxldr}
	MOVE T4,MAXLDR+.IPKVR(T2) ; Get IP header word containing TOS

(IMPDV.MAC.1 12.13) {maxldr}
IFL MAXLDR-.NBHHL,<

(IMPDV.MAC.1 12.14) {maxldr}
PRINTX ?ERROR MAXLDR is less than the IMP header

(IMPDV.MAC.1 12.16) {maxldr}
IFN MAXLDR-.NBHHL,<		; If we aren't the maximimum leader

(IMPDV.MAC.1 12.18) {maxldr}
	SUBI T3,MAXLDR-.NBHHL	; adjust for our header size

(IMPDV.MAC.1 12.19) {maxldr}
	ADDI T2,MAXLDR-.NBHHL	; Point to actual start of our header

(IMPDV.MAC.1 12.24) {maxldr}
IFL MAXLDR-HLDRSZ,<

(IMPDV.MAC.1 12.25) {maxldr}
PRINTX ?ERROR MAXLDR is less than the IMP header

(IMPDV.MAC.1 13.29) {maxwpm}
	CAMLE T3,MAXWPM		; Check size field

(IMPDV.MAC.1 13.38) {maxldr}
	SUBI T1,MAXLDR-.NBHHL	; Correct for different leader lengths

(IMPDV.MAC.1 14.9) {maxwpm}
	CAMLE T3,MAXWPM		; by checking size field for a PC

(IMPDV.MAC.1 15.13) {maxwpm}
	CAMLE T2,MAXWPM		;BE SURE REQUEST NOT LARGER THAN WHAT WE HAVE

(IMPDV.MAC.1 15.36) {maxwpm}
	MOVE T2,MAXWPM		;GET THE SIZE OF A BUFFER

(IMPDV.MAC.1 16.6) {maxwpm}
	CAMLE T3,MAXWPM		;MAKE SURE NOT ALREADY ON FREELIST

(IMPDV.MAC.1 16.31) {maxwpm}
	MOVE T1,MAXWPM		;NO. THIS IS A FULL SIZE BUFFER

(IMPDV.MAC.1 18.4) {maxwpm}
;These routines assume that MAXWPM will never be greater than a page.

(IMPDV.MAC.1 18.22) {maxwpm}
	CAMLE T1,MAXWPM		; Make sure not on freelist

(IMPDV.MAC.1 18.26) {bf1822}
	CAML T1,[INTSEC,,BF1822] ; Does this buffer look ok?

(IMPDV.MAC.1 18.27) {bf1822,intbsz}
	 CAML T1,[INTSEC,,BF1822+<BF18SZ*INTBSZ>] ; ?

(IMPDV.MAC.1 18.49) {maxwpm}
	CAMLE T1,MAXWPM		; MAKE SURE NOT ON FREELIST

(IMPDV.MAC.1 32.36) {maxwpm}
	CAML T2,MAXWPM		; And not too much?

(IMPDV.MAC.1 32.65) {maxwpm}
	CAMGE T3,MAXWPM		; Is buffer full?

(IMPDV.MAC.1 34.43) {maxwpm}
	CAML T1,MAXWPM		; Will this fit in buffer?
^L
Searching <6-1-MONITOR>IO.MAC.1
Searching <6-1-MONITOR>IPCF.MAC.1
Searching <6-1-MONITOR>IPCIDV.MAC.1

(IPCIDV.MAC.1 12.13) {lclpkt}
CISNDP:	XMOVEI T2,-LCLPKT(RID)	;POINT TO RIGHT LOCATION TO PICK UP PIDH

(IPCIDV.MAC.1 12.18) {maxldr}
	XMOVEI T2,MAXLDR(RID)	;POINT AT DATA PORTION OF BUFFER

(IPCIDV.MAC.1 12.19) {lclpkt}
	XMOVEI T3,-LCLPKT(RID)	;POINT TO RIGHT LOCATION TO PICK UP LENGTH

(IPCIDV.MAC.1 13.21) {lclpkt}
	XMOVEI T2,-LCLPKT(RID)	;POINT AT PACKET HEADER BEGINNING

(IPCIDV.MAC.1 13.23) {pkteli}
	ADDI T1,3+PKTELI*4	;PACKET SIZE IN BYTES, ROUNDED UP

(IPCIDV.MAC.1 13.25) {maxldr}
	XMOVEI T2,MAXLDR(RID)	;POINT TO BEGINNING OF BUFFER

(IPCIDV.MAC.1 13.27) {maxldr}
	ADDI T3,MAXLDR		; DATA AREA

(IPCIDV.MAC.1 15.15) {maxwpm}
	MOVE T1,MAXWPM		;GET ENOUGH ROOM

(IPCIDV.MAC.1 15.20) {lclpkt}
	XMOVEI T2,LCLPKT(T1)	;GET POINTER TO LOCAL HEADERS

(IPCIDV.MAC.1 15.21) {maxwpm}
	MOVE T3,MAXWPM		;MAX WORDS

(IPCIDV.MAC.1 16.38) {maxldr}
	ADDI T2,MAXLDR		;POINT PAST HEADER AREA

(IPCIDV.MAC.1 16.39) {intxpb}
	MOVE T3,INTXPB		;GET SIZE OF INTERNET PACKET

(IPCIDV.MAC.1 17.18) {maxldr}
	SUBI T2,MAXLDR		;POINT AT HEADER AREA
^L
Searching <6-1-MONITOR>IPFREE.MAC.4

(IPFREE.MAC.4 1.24) {maxwpm}
;MAXWPM is no longer 400.

(IPFREE.MAC.4 2.24) {intbls}
INTBLS==:2

(IPFREE.MAC.4 3.23) {intbls}
;INTBLS==2			; Words per INTBLK entry (see ANAUNV)

(IPFREE.MAC.4 3.47) {intbls}
 INTBLS words	entry contains (SIZ & list), where list is an extended address.

(IPFREE.MAC.4 5.11) {intbls}
	BLT T1,INTBLK+<NFIXED*INTBLS>-1	; Clear rest

(IPFREE.MAC.4 10.52) {intbls}
;collect has happened and that all free blocks are now in INTBLK+(n*INTBLS).

(IPFREE.MAC.4 17.52) {intbls}
	  ADDI SIZ,INTBLS-1

(IPFREE.MAC.4 20.22) {intbls}
	  IMULI I,INTBLS	; Words per entry	

(IPFREE.MAC.4 21.10) {bf1822}
	MOVEI T2,BF1822		; Get the initial buffer addess

(IPFREE.MAC.4 22.19) {bf1822}
	CAML T1,[INTSEC,,BF1822] ; Does this buffer look ok?

(IPFREE.MAC.4 22.20) {bf1822}
	 CAML T1,[INTSEC,,BF1822+BF18SZ] ; ?

(IPFREE.MAC.4 22.22) {bf1822}
	MOVN T2,[INTSEC,,BF1822] ; Get the begining of the buffer space

(IPFREE.MAC.4 24.8) {maxwpm}
	MOVE T1,MAXWPM		; input buffer size

(IPFREE.MAC.4 24.22) {bf1822}
	MOVEI T2,BF1822		; Get the initial buffer addess

(IPFREE.MAC.4 24.23) {maxwpm}
	MOVE T3,MAXWPM		; Get the number of words per buffer

(IPFREE.MAC.4 24.29) {maxwpm}
	ADD T2,MAXWPM		; Get the address of the next buffer

(IPFREE.MAC.4 24.30) {maxwpm}
	ADD T3,MAXWPM		; Get the new link word

(IPFREE.MAC.4 24.32) {maxwpm}
	SUB T2,MAXWPM		; Fix up Buffer address

(IPFREE.MAC.4 25.19) {bf1822}
	CAML T1,[INTSEC,,BF1822] ; Does this buffer look ok?

(IPFREE.MAC.4 25.20) {bf1822,intbsz}
	CAML T1,[INTSEC,,BF1822+<BF18SZ*INTBSZ>] ; ?

(IPFREE.MAC.4 25.27) {bf1822}
	MOVN T2,[INTSEC,,BF1822] ; Get the begining of the buffer space

(IPFREE.MAC.4 25.29) {maxwpm}
	IDIV T2,MAXWPM		; Get the number of this buffer
^L
Searching <6-1-MONITOR>IPIPIP.MAC.1

(IPIPIP.MAC.1 19.31) {lclpkt}
	XMOVEI T1,-LCLPKT(T2)	; Compute standard Internet pointer

(IPIPIP.MAC.1 20.36) {bf1822}
	CAML PKT,[INTSEC,,BF1822] ; Is this an NI buffer?

(IPIPIP.MAC.1 20.37) {bf1822,intbsz}
	 CAML PKT,[INTSEC,,BF1822+<BF18SZ*INTBSZ>] ; ?

(IPIPIP.MAC.1 20.43) {lclpkt}
	XMOVEI T2,LCLPKT(PKT)	; Get pointer to IMPDV portion

(IPIPIP.MAC.1 20.44) {maxwpm}
	MOVE T3,MAXWPM		; Size of the IMPDV portion

(IPIPIP.MAC.1 23.18) {pkteli}
MINICW==PKTELI+<<MINIHS+3>/4>+2	; Minimum ICMP packet size, words with local

(IPIPIP.MAC.1 23.19) {pkteli}
MINIHB==<MINICW-PKTELI>*4	; Usual header size, w/o imbedded pkt

(IPIPIP.MAC.1 36.26) {pkteli}
	MOVEM T1,PKTELI+.IPKVR(PKT)	; Set version, length

(IPIPIP.MAC.1 36.31) {pkteli}
	MOVEI CPKT,<<MINIHS+3>/4>+PKTELI ; Min. Internet header size

(IPIPIP.MAC.1 38.24) {pkteli}
	ADDI CPKT,PKTELI	; Skip over local information

(IPIPIP.MAC.1 40.10) {pkteli}
	LOAD T1,PIDH,-PKTELI+.CMINH(CPKT) ; Get the host which caused it all

(IPIPIP.MAC.1 41.19) {pkteli}
	LOAD T1,PIDH,-PKTELI+.CMINH(CPKT) ; Get the host number

(IPIPIP.MAC.1 42.19) {pkteli}
	LOAD T1,PIDH,-PKTELI+.CMINH(CPKT); get the triggering destination host

(IPIPIP.MAC.1 43.22) {pkteli}
	LOAD T1,PIPRO,-PKTELI+.CMINH(CPKT)	; Get triggering protocal

(IPIPIP.MAC.1 44.46) {pkteli}
	 CAILE	T1,PKTELI(T2)		; Req'd vs actual

(IPIPIP.MAC.1 44.58) {pkteli}
	XMOVEI	T2,PKTELI(PKT)		; Start of internet leader

(IPIPIP.MAC.1 44.59) {pkteli}
	XMOVEI	T3,PKTELI+<<MINIHS+3>/4>+.CMINH(CPKT)	; Where to stash it

(IPIPIP.MAC.1 45.9) {pkteli}
	MOVEM	T1,PKTELI+.IPKVR(CPKT)	; Save

(IPIPIP.MAC.1 45.10) {pkteli}
	SETZM	PKTELI+.IPKSG(CPKT)	; clear segmentation info

(IPIPIP.MAC.1 45.12) {pkteli}
	MOVEM	T1,PKTELI+.IPKPR(CPKT)	; Save it

(IPIPIP.MAC.1 45.20) {pkteli}
	ADDI	CPKT,PKTELI+<MINIHS+3>/4 ; Point to the ICMP section

(IPIPIP.MAC.1 50.14) {lclpkt}
	XMOVEI T2,LCLPKT(PKT)	; Pointer to interrupt level part

(IPIPIP.MAC.1 50.29) {lclpkt}
	XMOVEI T1,LCLPKT(PKT)	; Pointer to IMPDV portion

(IPIPIP.MAC.1 51.9) {lclpkt}
	XMOVEI T2,LCLPKT(PKT)	; Pointer to Local network part of packet

(IPIPIP.MAC.1 51.18) {pkteli}
	ADDI T1,3+PKTELI*4	; Packet size in bytes, rounded up

(IPIPIP.MAC.1 51.20) {pkteli,maxldr}
	MOVEI T3,-PKTELI+MAXLDR(T1) ; Size w/o "local info"

(IPIPIP.MAC.1 51.21) {maxwpm}
	CAMLE T3,MAXWPM		; Fit in Input buffer?

(IPIPIP.MAC.1 51.47) {lclpkt}
	XMOVEI T3,-LCLPKT(T4)	; Setup for XBLTA

(IPIPIP.MAC.1 52.24) {lclpkt}
	ADDI T2,LCLPKT		; Compute pointer to ARPA leader start

(IPIPIP.MAC.1 52.25) {lclpkt}
SNDLC4:	TMNN PFSIZ,<-LCLPKT>(T2) ; is this a full size buffer

(IPIPIP.MAC.1 52.27) {maxwpm}
	   MOVE T1,MAXWPM	; get max buffer size

(IPIPIP.MAC.1 52.34) {pkteli,maxldr,lclpkt}
; T2/ (ext) address of packet at PKTELI-MAXLDR (LCLPKT)

(IPIPIP.MAC.1 53.15) {pkteli,lclpkt}
	ADDI T1,3+4*<PKTELI-LCLPKT> ; Length of IMPPHY portion

(IPIPIP.MAC.1 53.17) {lclpkt}
	STOR T1,NBBSZ,+LCLPKT(PKT) ; Put in pkt for use elsewhere

(IPIPIP.MAC.1 54.35) {lclpkt}
	SUBI PKT,LCLPKT

(IPIPIP.MAC.1 54.42) {maxwpm}
	CAMLE T2,MAXWPM

(IPIPIP.MAC.1 54.49) {lclpkt}
	JE PFSIZ,<-LCLPKT>(PKT),RCVGAO ; Not full size means came on bypass

(IPIPIP.MAC.1 54.50) {maxwpm}
	MOVE T3,MAXWPM		; Reset local length to "full size"

(IPIPIP.MAC.1 54.57) {lclpkt}
	SUBI PKT,LCLPKT		; Return standard Internet PKT pointer

(IPIPIP.MAC.1 58.32) {pkteli}
	ADDI T1,PKTELI(T2)	; Packet length (w)

(IPIPIP.MAC.1 59.20) {pkteli}
	ADDI T1,PKTELI

(IPIPIP.MAC.1 59.30) {pkteli}
	MOVEI T1,<<MINIHS/4>+PKTELI> ; Local plus minimum internet header

(IPIPIP.MAC.1 62.21) {pkteli}
	ADDI T1,<<PKTELI*4>+3>(T4) ; Local+round up+header

(IPIPIP.MAC.1 62.35) {pkteli}
	ADDI T1,PKTELI		; Plus local

(IPIPIP.MAC.1 69.32) {pkteli}
	ADDI T1,PKTELI(T2)	; Add them and local overhead

(IPIPIP.MAC.1 69.53) {pkteli}
	ADDI T1,PKTELI-PKTSII(T4) ; Add local - flags + header + data

(IPIPIP.MAC.1 70.29) {pkteli}
	ADDI T2,PKTELI(T3)	; Increase copy offset and

(IPIPIP.MAC.1 72.36) {pkteli}
	ADJBP T2,[POINT 8,PKTELI(PKT),7] ; From IP header

(IPIPIP.MAC.1 84.34) {pkteli}
	MOVEI T2,-PKTELI+1(T2)	; (without fragmentation)

(IPIPIP.MAC.1 90.28) {pkteli}
	SUBI T2,PKTELI-1

(IPIPIP.MAC.1 90.32) {pkteli}
	MOVEI T1,PKTELI-1(SIZ)	; Size of buffer needed here

(IPIPIP.MAC.1 90.39) {pkteli}
	XMOVEI T3,PKTELI(PKT)	; First address in monitor area

(IPIPIP.MAC.1 90.62) {pkteli}
	MOVE T4,PKTELI(T4)	; Get the port word

(IPIPIP.MAC.1 91.17) {pkteli}
	MOVE T4,PKTELI(T4)	; Get port word

(IPIPIP.MAC.1 91.19) {pkteli}
	MOVE T2,PKTELI+.IPKSH(PKT) ; Get source

(IPIPIP.MAC.1 91.20) {pkteli}
	MOVE T3,PKTELI+.IPKDH(PKT) ; and dest

(IPIPIP.MAC.1 93.8) {pkteli}
	XMOVEI T2,PKTELI(PKT)	; First word in Internet part

(IPIPIP.MAC.1 98.8) {pkteli}
	MOVE T2,PKTELI+.IPKSH(PKT) ; Source address

(IPIPIP.MAC.1 98.33) {pkteli}
	MOVE T3,PKTELI(T4)	; Get FP.LP and 4 extra bits

(IPIPIP.MAC.1 99.47) {pkteli}
	MOVE T2,PKTELI+.IPKSH(CPK2)	; Source host

(IPIPIP.MAC.1 99.48) {pkteli}
	MOVE T3,PKTELI+.IPKDH(CPK2)	; Destination host

(IPIPIP.MAC.1 99.51) {pkteli}
	MOVE T4,PKTELI(T4)	; and get port word

(IPIPIP.MAC.1 102.17) {maxwpm}
	CAMLE PKTLIM,MAXWPM	; OK?

(IPIPIP.MAC.1 102.26) {lclpkt}
	SUBI T1,LCLPKT		; Lock down all of packet (for ARP, PKOPR)

(IPIPIP.MAC.1 102.35) {lclpkt}
	ADDI T1,LCLPKT-1	; Determine last address 

(IPIPIP.MAC.1 102.56) {maxwpm}
	CAMLE PKTLIM,MAXWPM	; OK?

(IPIPIP.MAC.1 102.64) {lclpkt}
	SUBI T1,LCLPKT		; Unlock all of packet (for ARP, PKOPR)

(IPIPIP.MAC.1 102.73) {lclpkt}
	ADDI T1,LCLPKT-1	; Determine last address
^L
Searching <6-1-MONITOR>JSYSA.MAC.1
Searching <6-1-MONITOR>JSYSF.MAC.2
Searching <6-1-MONITOR>LATSRV.MAC.1
Searching <6-1-MONITOR>LDINIT.MAC.1
Searching <6-1-MONITOR>LINEPR.MAC.1
Searching <6-1-MONITOR>LOGNAM.MAC.2
Searching <6-1-MONITOR>LOOKUP.MAC.1
Searching <6-1-MONITOR>LPFEDV.MAC.1
Searching <6-1-MONITOR>MACSYM.MAC.1
Searching <6-1-MONITOR>MAGTAP.MAC.1
Searching <6-1-MONITOR>MEXEC.MAC.2
Searching <6-1-MONITOR>MFLIN.MAC.1
Searching <6-1-MONITOR>MFLOUT.MAC.1
Searching <6-1-MONITOR>MNETDV.MAC.1
Searching <6-1-MONITOR>MONSYM.MAC.2
Searching <6-1-MONITOR>MSCPAR.MAC.1
Searching <6-1-MONITOR>MSTR.MAC.1
Searching <6-1-MONITOR>NAMNIC.MAC.1
Searching <6-1-MONITOR>NIPAR.MAC.1
Searching <6-1-MONITOR>PAGEM.MAC.1
Searching <6-1-MONITOR>PAGUTL.MAC.1
Searching <6-1-MONITOR>PARAMS.MAC.1

(PARAMS.MAC.1 1.74) {nntbfs}
;TCO 5.1749 - Increase NNTBFS

(PARAMS.MAC.1 2.139) {nntbfs}
NDG	NNTBFS,60000		;NETWORK BUFFER AREA
^L
Searching <6-1-MONITOR>PARNEW.MAC.2
Searching <6-1-MONITOR>PARNIC.MAC.3

(PARNIC.MAC.3 2.20) {nntbfs}
NNTBFS==:150000			; space for network buffers
^L
Searching <6-1-MONITOR>PHYH2.MAC.1
Searching <6-1-MONITOR>PHYKLP.MAC.1
Searching <6-1-MONITOR>PHYM2.MAC.1
Searching <6-1-MONITOR>PHYM78.MAC.1
Searching <6-1-MONITOR>PHYMEI.MAC.1
Searching <6-1-MONITOR>PHYMSC.MAC.1
Searching <6-1-MONITOR>PHYMVR.MAC.1
Searching <6-1-MONITOR>PHYP4.MAC.1
Searching <6-1-MONITOR>PHYPAR.MAC.1
Searching <6-1-MONITOR>PHYSIO.MAC.1
Searching <6-1-MONITOR>PIPE.MAC.1
Searching <6-1-MONITOR>PKOPR.MAC.1

(PKOPR.MAC.1 4.13) {lclpkt}
..PKT==PKTSII-LCLPKT		;We are using datagram relative pointers

(PKOPR.MAC.1 30.15) {intxpb}
	 CAMLE T1,INTXPB	;Packet must fit within an Internet buffer

(PKOPR.MAC.1 33.4) {maxldr}
;Takes	T1/ pointer to buffer (offset zero is start of MAXLDR region)
^L
Searching <6-1-MONITOR>PNVSRV.MAC.1
Searching <6-1-MONITOR>POSTLD.MAC.1
Searching <6-1-MONITOR>PROLOG.MAC.1
Searching <6-1-MONITOR>PUP.MAC.1

(PUP.MAC.1 5.41) {maxldr}
PBHEAD==:PBPHYS+MAXLDR		;Start of Pup Header
^L
Searching <6-1-MONITOR>PUPNM.MAC.1
Searching <6-1-MONITOR>PUPSYM.MAC.1
Searching <6-1-MONITOR>REL1.MAC.1
Searching <6-1-MONITOR>RSXSRV.MAC.1
Searching <6-1-MONITOR>SCAMPI.MAC.1
Searching <6-1-MONITOR>SCAPAR.MAC.1
Searching <6-1-MONITOR>SCHED.MAC.1
Searching <6-1-MONITOR>SCPAR.MAC.1
Searching <6-1-MONITOR>SCSJSY.MAC.1
Searching <6-1-MONITOR>SERCOD.MAC.1
Searching <6-1-MONITOR>SETSPD.MAC.1
Searching <6-1-MONITOR>SITE.MAC.2
Searching <6-1-MONITOR>STG.MAC.6

(STG.MAC.6 1.6) {intbsz}
; lower INTBSZ since we don't have ethernet

(STG.MAC.6 1.81) {intbls}
; move INTBLS definition from PARSHI to here.

(STG.MAC.6 1.83) {intbls}
; Sigh.  ODDBLK is length INTBLS too.  Cause of ILMNRF bughlts?

(STG.MAC.6 52.16) {intbsz}
IFE IPNIN,<INTBSZ==:400>	;If no Ethernet small buffers

(STG.MAC.6 52.17) {intbsz}
IFN IPNIN,<INTBSZ==:574>	;If Ethernet Larger buffers

(STG.MAC.6 52.21) {intbsz}
INTBSZ==:574			;Maximum size 10MB Ethernet packet

(STG.MAC.6 52.25) {intbsz}
INTBSZ==:400			;no ethernet, use smaller buffe

(STG.MAC.6 52.79) {bf1822,intbsz}
DEFWRD(BF1822,BF18SZ*INTBSZ)  	;1822 BUFFER AREA

(STG.MAC.6 52.157) {intbsz}
;Be very very carefull if you ever change any of INTBSZ, ..MXSZ, or INTXPW.

(STG.MAC.6 52.159) {lclpkt,maxldr}
;LCLPKT, MAXLDR, and the Ethernet CRC, with no extra bytes available.

(STG.MAC.6 52.161) {maxwpm,intbsz,maxldr}
RSI MAXWPM,<INTBSZ>		;Size of 1822 Buffers (including MAXLDR)

(STG.MAC.6 52.162) {intbsz,maxldr}
..MXSZ==<INTBSZ*4>-<4*MAXLDR>-4	;Max number of bytes

(STG.MAC.6 52.163) {intxpb}
RSI INTXPB,<..MXSZ>		;Maximum PIPL for all interfaces (bytes)

(STG.MAC.6 52.164) {pkteli}
RSI INTXPW,<PKTELI+<<..MXSZ+3>/4>+1> ;# Words in max pkt bfr (+1) (PFSIZ=1)

(STG.MAC.6 52.190) {intbls}
NDG INTBLS,2			; use BBN IPFREE

(STG.MAC.6 52.191) {intbls}
NR INTBLK,<NFIXED*INTBLS>	;headers of free block lists

(STG.MAC.6 52.201) {intbls}
NR ODDBLK,INTBLS		;ODD LENGTH BLOCKS LIST

(STG.MAC.6 67.5) {lclpkt}
 LCLPKT==:<NJOBS+JBPCKT-1>/JBPCKT ;Packets we need
^L
Searching <6-1-MONITOR>SWPALC.MAC.1
Searching <6-1-MONITOR>SYSERR.MAC.1
Searching <6-1-MONITOR>SYSFLG.MAC.1
Searching <6-1-MONITOR>TAPE.MAC.1
Searching <6-1-MONITOR>TCPBBN.MAC.1

(TCPBBN.MAC.1 31.2) {intxpb}
	MOVE T1,INTXPB		; Maximum data size for a packet
^L
Searching <6-1-MONITOR>TCPCRC.MAC.1

(TCPCRC.MAC.1 4.16) {pkteli}
	MOVE PTR,[POINT 32,PKTELI(PKT)]	; Start at beginning of IN part

(TCPCRC.MAC.1 4.26) {pkteli}
	MOVE PTR,[POINT 32,PKTELI(PKT)]	; Point to IN hdr

(TCPCRC.MAC.1 5.19) {pkteli}
	MOVX PTR,<POINT 32,PKTELI(PKT)>	; Point to IP header

(TCPCRC.MAC.1 5.41) {pkteli}
	MOVE PTR,[POINT 32,PKTELI(PKT)]	; Pointer IP portion
^L
Searching <6-1-MONITOR>TCPJFN.MAC.1
Searching <6-1-MONITOR>TCPTCP.MAC.2

(TCPTCP.MAC.2 14.27) {pkteli}
	XMOVEI TPKT,PKTELI(PKT)	; Pointer to Internet packet

(TCPTCP.MAC.2 23.30) {pkteli}
	XMOVEI T4,PKTELI(QS)	; Pointer to Internet portion

(TCPTCP.MAC.2 25.8) {pkteli}
	XMOVEI T4,PKTELI(T4)	; Pointer to Internet portion

(TCPTCP.MAC.2 26.17) {pkteli}
	XMOVEI T4,PKTELI(QPKT)	; Pointer to Internet portion

(TCPTCP.MAC.2 38.10) {pkteli}
	XMOVEI TPKT,PKTELI(PKT)	; Pointer to Internet portion

(TCPTCP.MAC.2 48.39) {pkteli}
	XMOVEI TPKT,PKTELI(PKT)	; Pointer to Internet portion of packet

(TCPTCP.MAC.2 57.47) {intxpb}
	MOVE T4,INTXPB		; Estimated packet size

(TCPTCP.MAC.2 66.75) {intxpb}
	CAMLE XFRCNT,INTXPB	; Limit (roughly) to what a

(TCPTCP.MAC.2 66.76) {intxpb}
	 MOVE XFRCNT,INTXPB	; Pkt can hold.

(TCPTCP.MAC.2 67.7) {pkteli}
	XMOVEI TPKT,PKTELI(PKT)	; Locate TCP header

(TCPTCP.MAC.2 73.59) {pkteli}
	MOVEI T3,PKTELI-1(T2)	;word offset (not including 4 bytes just added)

(TCPTCP.MAC.2 74.19) {pkteli}
	MOVEI PKTPTR,PKTELI(T1)	; Word offset and byte

(TCPTCP.MAC.2 87.34) {pkteli}
	XMOVEI TPKT,PKTELI(PKT)	; Pointer to Internet portion

(TCPTCP.MAC.2 110.17) {pkteli}
	ADDI T1,<4*PKTELI>+3	; Total length, set to round up

(TCPTCP.MAC.2 123.42) {intxpb}
           MOVE T1,INTXPB	; None or 0, use maximum packet length

(TCPTCP.MAC.2 125.2) {pkteli}
	MOVEI T1,PKTELI+<<MINIHS+3>/4>-1 ; Clear through IP header

(TCPTCP.MAC.2 125.38) {pkteli}
	XMOVEI TPKT,PKTELI(PKT)	; Pointer to Internet portion

(TCPTCP.MAC.2 126.24) {pkteli}
	MOVEI T1,-PKTELI(SIZW)	; Words for IP+TCP+DATA

(TCPTCP.MAC.2 126.26) {intxpb}
	MOVE T2,INTXPB		; Maximum for all interfaces

(TCPTCP.MAC.2 128.41) {pkteli}
	XMOVEI T3,PKTELI(PKT)	; IP header base

(TCPTCP.MAC.2 136.15) {pkteli}
	ADDI T2,PKTELI+<MINIHS+3>/4

(TCPTCP.MAC.2 151.10) {lclpkt,pkteli}
	CAILE T1,<PPBFSZ+LCLPKT-PKTELI> ; Beware too many options

(TCPTCP.MAC.2 151.11) {lclpkt,pkteli}
	  MOVEI T1,<PPBFSZ+LCLPKT-PKTELI> ; Clamp at PPBUF limit

(TCPTCP.MAC.2 151.18) {pkteli}
	XMOVEI T2,PKTELI+1(PKT)	; Beginning of corresponding part of hdr

(TCPTCP.MAC.2 151.20) {pkteli,lclpkt}
	CAME T3,PPBUF+PKTELI+1-LCLPKT(T1) ; Same as header in the buffer?

(TCPTCP.MAC.2 151.31) {lclpkt}
	XMOVEI T2,LCLPKT+1(PKT)	; Beginning of real header info(+1)
^L
Searching <6-1-MONITOR>TIMER.MAC.1
Searching <6-1-MONITOR>TTYDEF.MAC.1
Searching <6-1-MONITOR>TTYSRV.MAC.1
Searching <6-1-MONITOR>TVTSRV.MAC.1
Searching <6-1-MONITOR>VERSIO.MAC.3

	Lines recognized = 253
   String    Matches  Unrecognized Matches
1) "intxpb"	13	0
2) "intxbw"	0	0
3) "intbsz"	14	0
4) "bf1822"	14	0
5) "maxwpm"	34	0
6) "intbls"	12	0
7) "nntbfs"	4	0
8) "lclpkt"	51	0
9) "maxldr"	42	0
10) "pkteli"	96	0
Letter case ignored ("Ab" = "aB").

Files with no matches: APRSRV.MAC.1, BUGS.MAC.1, ... VERSIO.MAC.3.
108 files searched, 90 without matches.
^L

	...DONE...   continue to start over
!
VIVIAN, TTY17, 16-Feb-87 11:26pm
what is the command in emacs to get an edit line at the top of a file?
(a,e,f,m,t,x)? tx1jY8I kjY8 10:52pm Logout: IANKk!
!reply M-X Date Edit
 Replying to VIVIAN, TTY17
! 23:28:56 Used 0:05:40.9 in 12:20:20, Load   1.19
^C
                 24 DUMPER   24   2 EK289 Dump TTY x4234
                              25 EXEC   1:53.  3 EK205 Operator Fishbowl x4664
VIVIAN   Vivian Neou          19 REPLY        17 NIC Micom 30 [P235]
!
!
[PHOTO:  Recording terminated Mon 16-Feb-87 11:29pm]
