;[SRI-NIC]SRC:<6-1-EXEC>EXECTT.MAC.2,  5-Jul-88 16:22:47, Edit by MKL
; add sun ttytype stuff
;<6-1-EXEC.CE>EXECTT.MAC.2, 29-Mar-85 20:02:09, Edit by WHP4
; update from 6.1 STG.MAC
;<ALMQUIST.CE>EXECTT.MAC.3,  4-Nov-84 21:12:48, Edit by ALMQUIST
; Created...

;----------------------------------------------------------------------
;
; Exectt.Mac - terminal type information for the command editor
;
;	Philip Almquist		November 4, 1984
;
; Copyright (C) 1983, 1984 by Philip Almquist
; All rights reserved
;
;
;	This module contains the terminal-type dependent information
; needed by the command editor in Exechs.Mac.  As of this writing, the
; editor only needs to know how to clear to end of line and to back up
; the cursor.  However, much more is included here since this is based on
; STG.MAC for easy updating.
;
;	The last part of this file is the piece of STG.MAC beginning with
; "TTYPE1::" and ending just before the "SWPCOD" a few lines above "USGFIL:".
; The distributed version of this module contains some conditional compilation
; switches for local terminal support at sites involved in development of the
; command editor.  If you have not added additional terminal types to STG.MAC
; you may simply use this module as is by compiling it without defining any
; of the conditionals.  If you have modified the terminal support in STG.MAC
; you can either merge those changes into this file or simply replace the end
; of this file (starting with "TTYPE1::") with the approriate piece of your
; STG.MAC.  If you do the latter, remember to add an END at the end of the
; module!

	SEARCH EXECDE		;Get site conditional switches and TTITLE defn
	TTITLE EXECTT		;Set module name, get .CHxxx defs from MACSYM

IFNDEF STANSW,<STANSW==0>	;Default is no Stanford local changes

;
; The macro used to define the TTYPE1 entries.  Just like the table of the
; same name in the monitor, we generate an array indexed by terminal type
; number containing the address of a table of cursor addressing sequences
; for that terminal type.  The second parameter, which indicates whether
; page mode is desired, is ignored because the command editor doesn't care.
; NTTTYP is used to keep track of the number of entries in the table.

NTTTYP==:0

DEFINE TY1 (DPTAB,PGM)<
	DPTAB
	NTTTYP==:NTTTYP+1
	>

; Fake out sanity check below - since we are not in the monitor the error
; detected by the sanity check isn't really an error:

DEFINE NTTYPS,<<.-TTYPE1>>


;
; The rest of this filecontains the actual terminal type definitions.  To
; modify this module for use at your site, replace the rest of this file
; with the equivalent piece of your STG.MAC.  Then put an END statement at
; the end of the module.
;
TTYPE1::
IFE STANSW,<
   REPEAT ^D10,<		;TYPES 0-9 ARE NOT DISPLAYS
	TY1(0)
>
>;IFE STANSW
IFN STANSW,<
REPEAT 4,<			;TYPES 0-3 ARE NOT DISPLAYS
	TY1(0)
>;REPEAT 4
	TY1(ADM3TB,1)		; 4 - ADM3
	TY1(DMTB,1)		; 5 - DATAMEDIA
	TY1(HPTB,1)		; 6 - HP2645
	TY1(HAZLTB,1)		; 7 - HAZELTINE
	TY1(0)			; 8 - TERMINET
	TY1(0)			; 9 - IDEAL
>;IFN STANSW
	TY1 (VT05TB)		; 10 - VT05
	TY1 (VT50TB)		; 11 - VT50
	TY1 (0)			; 12 - LA30
	TY1 (0)			; 13 - GT40
	TY1 (0)			; 14- LA36
	TY1 (VT52TB)		; VT52
	TY1 (VT100T,1)		; VT100
	TY1 (0)			; 17 - LA38
	TY1 (0,1)		; 18 - LA120
IFE STANSW,<
   REPEAT ^D16,<		;TYPES 19-34 ARE NOT DISPLAYS
	TY1(0)
>
>;IFE STANSW
IFN STANSW,<
	TY1 (0)			; 19 - MOD 43
	TY1(IQTB,1)		; 20 - SOROC IQ120
	TY1(GILLTB,1)		; 21 - GILLOTINE
	TY1(TELETB,1)		; 22 - TELERAY 1061
	TY1(TEKTB,1)		; 23 - TEKTRONIX 4025
	TY1(ANNTB,1)		; 24 - ANN ARBOR
	TY1(H19TBL,1)		; 25 - HEATH H19
	TY1(C100TB,1)		; 26 - CONCEPT 100
	TY1(IBMTB,1)		; 27 - IBM 3101
	TY1(TVITB,1)		; 28 - TELEVIDEO-912
	TY1(TK3TB,1)		; 29 - TEKTRONIX-4023
	TY1(DM15TB,1)		; 30 - DATAMEDIA-1520
	TY1(AMBTB,1)		; 31 - AMBASSADOR
	TY1(ESPRTB,1)		; 32 - HAZELTINE ESPRIT
	TY1(FRDMTB,1)		; 33 - FREEDOM-100
	TY1(FRDMTB,1)		; 34 - FREEDOM-200
>;IFN STANSW
	TY1 (VT125T,1)		; 35 - VT125
	TY1 (VK100T,1)		; 36 - VK100 - GIGI
	TY1 (VT102T,1)		; 37 - VT102
	TY1 (H19TBL,1)		; 38 - H19
	TY1 (VT131T,1)		; 39 - VT131
	TY1 (VT200T,1)		; 40 - VT200-SERIES
IFN STANSW,<
	TY1 (ANSITB,1)		; 41 - ANSI STANDARD
	TY1 (AVTTB,1)		; 42 - CONCEPT AVT
	TY1 (GVTTB,1)		; 43 - CONCEPT GVT
	TY1 (ANSITB,1)		; 44 - SUN
>;IFN STANSW
IFN <.-TTYPE1>-NTTYPS,<PRINTX %TERM TYPE TABLES OF DIFFERENT LENGTHS>

;CURSOR CONTROL TABLES.  TABLE FOR EACH TERMINAL TYPE, INDEXED
;BY FUNCTION.

.STP==:377			;STOP CODE

;VT05 TABLE AND FUNCTION INDEX DEFINITIONS

VT05TB::
	PHASE 0
.CURUP::!Z [BYTE (8)32,0,0,0,0,.STP]
.CURDN::!Z [BYTE (8)13,0,0,0,0,.STP]
.CURBK::!BYTE (8).CHBSP,.STP
.CURFW::!BYTE (8)30,.STP
.CURHM::!Z [BYTE (8)35,0,0,0,0,.STP]
.CURES::!Z [BYTE (8)37,0,0,0,0,.STP]
.CUREL::!Z [BYTE (8)36,0,0,0,0,.STP]
	DEPHASE

VT200T::				; VT200 TABLE SAME AS VT102
VT131T::				; VT131 TABLE SAME AS VT102
VT102T::				; VT102 TABLE
	BYTE (8).CHESC,"[","A",.STP	;UP
	BYTE(8).CHESC,"[","B",.STP	;DOWN
	BYTE(8).CHESC,"[","D",.STP	;BACK
	BYTE(8).CHESC,"[","C",.STP	;FORWARD
	BYTE(8).CHESC,"[","H",.STP	;HOME
	BYTE(8).CHESC,"[","J",.STP	;ERASE TO END OF SCREEN
	BYTE(8).CHESC,"[","K",.STP	;ERASE TO END OF LINE
VK100T::				; VK100 TABLE
	BYTE(8).CHESC,"[","A",.STP	;UP
	BYTE(8).CHESC,"[","B",.STP	;DOWN
	BYTE(8).CHESC,"[","D",.STP	;BACK
	BYTE(8).CHESC,"[","C",.STP	;FORWARD
	BYTE(8).CHESC,"[","H",.STP	;HOME
				        ;ERASE TO END OF SCREEN
	Z [BYTE(8).CHESC,"P","p","s","(","e",")",.CHESC,"\",.STP]
	BYTE(8).CHESC,"[","K",.STP	;ERASE TO END OF LINE

IFN STANSW,<
AMBTB::
ANSITB::
AVTTB::					; AVT TABLE
GVTTB::
>;IFN STANSW
VT125T::				; VT125 TABLE
VT100T::				; VT100 TABLE
	BYTE (8).CHESC,"[","A",.STP	;UP
	BYTE(8).CHESC,"[","B",.STP	;DOWN
	BYTE(8).CHESC,"[","D",.STP	;BACK
	BYTE(8).CHESC,"[","C",.STP	;FORWARD
	BYTE(8).CHESC,"[","H",.STP	;HOME
	BYTE(8).CHESC,"[","J",.STP	;ERASE TO END OF SCREEN
	BYTE(8).CHESC,"[","K",.STP	;ERASE TO END OF LINE

IFN STANSW,<
; VT100 RESET CODES TABLE

V100RS::[BYTE(8).CHESC,"[","2","0","l",.STP] ;RESET LF MODE
	[BYTE(8).CHESC,"[","?","3","l",.STP] ;80 COL. MODE
	[BYTE(8).CHESC,"[","?","4","l",.STP] ;JUMP SCROLL
	[BYTE(8).CHESC,"[","?","5","l",.STP] ;NORMAL VIDEO
	[BYTE(8).CHESC,"[","?","6","l",.STP] ;ABSOLUTE ORIGIN MODE
	[BYTE(8).CHESC,"[","?","7","l",.STP] ;WRAPAROUND OFF
	[BYTE(8).CHESC,"[","?","8","h",.STP] ;AUTO REPEAT ON
	[BYTE(8).CHESC,"[","?","9","l",.STP] ;INTERLACE OFF
	[BYTE(8).CHESC,76,.STP]	;NUMERIC KEYPAD
	0			;TABLE MUST END WITH ZERO
>;IFN STANSW

;VT50 TABLE - USES ESCAPE SEQUENCES

IFN STANSW,<
HPTB::
TELETB::
>;IFN STANSW
H19TBL::				; H19 TABLE SAME AS VT52
VT52TB::
VT50TB::BYTE (8).CHESC,"A",.STP	;CURSOR UP
	Z [BYTE (8).CHLFD,0,0,0,0,.STP] ;CURSOR DOWN
	BYTE (8).CHBSP,.STP	;CURSOR BACK
	BYTE (8).CHESC,"C",.STP	;CURSOR FORWARD
	BYTE (8).CHESC,"H",.STP	;CURSOR HOME
	BYTE (8).CHESC,"J",.STP	;ERASE SCREEN
	BYTE (8).CHESC,"K",.STP	;ERASE LINE

IFN STANSW,<
;ADM3 TABLE - NOT MUCH, AND DON'T HOLD YOUR BREATH FOR MORE

ADM3TB::BYTE (8) .STP		;CURSOR UP
	BYTE (8) .CHLFD,.STP	;CURSOR DOWN (LF)
	BYTE (8) .CHBSP,.CHSPC,.CHBSP,.STP ;CURSOR BACK
	BYTE (8) .CHSPC,.STP	;CURSOR FORWARD
	BYTE (8) .CHCRT,.STP	;CURSOR HOME (CR)
	BYTE (8) .STP		;ERASE TO EOS
	BYTE (8) .STP		;ERASE LINE

;DATAMEDIA 2500

DMTB::	BYTE (8) .CHCNZ,.STP	;LINE STARVE
	BYTE (8) .CHLFD,.STP	;LINE FEED
	BYTE (8) .CHBSP,.STP	;BACK SPACE
	BYTE (8) .CHCBS,.STP	;FORWARD SPACE
	BYTE (8) .CHCNB,.STP	;HOME
	BYTE (8) .CHCNW,.STP	;EOS ?
	BYTE (8) .CHCNW,.STP	;ERASE LINE

;HAZELTINE 1500

HAZLTB::BYTE (8) "~",.CHFFD,.STP ;CURSOR UP
	BYTE (8) "~",.CHVTB,.STP ;CURSOR DOWN
	BYTE (8) .CHBSP,.STP	;CURSOR BACK
	BYTE (8) .CHCNP,.STP	;CURSOR FORWARD
	[BYTE (8) "~",.CHCNR,0,0,0,0,.STP] ;CURSOR HOME
	[BYTE (8) "~",.CHCNW,0,0,0,0,.STP] ;ERASE TO END OF SCREEN
	BYTE (8) "~",.CHCNO,.STP ;ERASE LINE

;SOROC IQ120
IQTB::	BYTE (8) .STP		;CURSOR UP
	BYTE (8) .CHLFD,.STP	;CURSOR DOWN (LF)
	BYTE (8) .CHBSP,.CHSPC,.CHBSP,.STP ;CURSOR BACK
	BYTE (8) .CHSPC,.STP	;CURSOR FORWARD
	BYTE (8) .CHCCF,.STP	;CURSOR HOME
	BYTE (8) .CHESC,"Y",.STP ;ERASE TO EOS
	BYTE (8) .CHESC,"T",.STP ;ERASE LINE

;GILLOTINE
GILLTB::BYTE (8) .CHCNC,.STP	;UP
	BYTE (8) .CHCND,.STP	;DOWN
	BYTE (8) .CHCNA,.STP	;LEFT
	BYTE (8) .CHCNB,.STP	;RIGHT
	BYTE (8) .CHCNE,.STP	;HOME
	BYTE (8) .CHCRB,.STP	;ERASE TO EOS
	BYTE (8) .CHCBS,.STP	;ERASE TO EOL

;TEKTRONIX 4025

TKLD=="`"
TEKTB:	[BYTE (8) TKLD,"U","P",";",.STP]     ;UP
	[BYTE (8) TKLD,"D","O","W",";",.STP] ;DOWN
	[BYTE (8) TKLD,"L","E","F",";",.STP] ;LEFT
	[BYTE (8) TKLD,"R","I","G",";",.STP] ;RIGHT
	[BYTE (8) TKLD,"J","U","M",";",.STP] ;HOME
	[BYTE (8) TKLD,"D","C","H","9","9",";",.STP] ;EEOS (ACTUALLY EEOL)
	[BYTE (8) TKLD,"D","C","H","9","9",";",.STP] ;EEOL

;ANN ARBOR

ANNTB:	BYTE (8) .CHCNN,.STP	;UP
	BYTE (8) .CHLFD,.STP	;DOWN
	BYTE (8) .CHBSP,.STP	;LEFT
	BYTE (8) .CHCUN,.STP	;RIGHT
	BYTE (8) .CHVTB,.STP	;HOME
	BYTE (8) .STP		;ERASE TO EOS
	BYTE (8) .STP		;ERASE LINE

;IBM 3101 -- ALMOST A VT52
IBMTB::	BYTE (8) .CHESC,"A",.STP ;CURSOR UP
	BYTE (8) .CHESC,"B",.STP ;CURSOR DOWN
	BYTE (8) .CHESC,"D",.STP ;CURSOR BACK
	BYTE (8) .CHESC,"C",.STP ;CURSOR FORWARD
	BYTE (8) .CHESC,"H",.STP ;CURSOR HOME
	BYTE (8) .CHESC,"J",.STP ;ERASE TO EOS
	BYTE (8) .CHESC,"I",.STP ;ERASE LINE

;CONCEPT 100
C100TB::BYTE (8) .CHESC,";",.STP ;CURSOR UP
	BYTE (8) .CHLFD,.STP	;CURSOR DOWN (LF)
	BYTE (8) .CHBSP,.STP	;CURSOR BACK
	BYTE (8) .CHESC,"=",.STP ;CURSOR FORWARD
	BYTE (8) .CHESC,"?",.STP ;CURSOR HOME
	BYTE (8) .CHESC,5,.STP	;ERASE TO EOS
	BYTE (8) .CHESC,25,.STP	;ERASE LINE

;TELEVIDEO-912

TVITB::	BYTE (8) .CHVTB,.STP	;CURSOR UP
	BYTE (8) .CHLFD,.STP	;CURSOR DOWN
	BYTE (8) .CHBSP,.STP	;CURSOR BACK
	BYTE (8) .CHFFD,.STP	;CURSOR FORWARD
	BYTE (8) .CHCCF,.STP	;CURSOR HOME
	BYTE (8) .CHESC,"Y",.STP ;ERASE EOS
	BYTE (8) .CHESC,"T",.STP ;ERASE EOL

;TEKTRONIX 4023

TK3TB::	BYTE (8) .STP		;NO CURSOR UP
	BYTE (8) .CHLFD,.STP	;CURSOR DOWN
	BYTE (8) .CHBSP,.CHSPC,.CHBSP,.STP ;CURSOR BACK
	BYTE (8) .CHTAB,.STP	;CURSOR FORWARD
	BYTE (8) .STP		;NO CURSOR HOME
	BYTE (8) .STP		;NO ERASE EOS
	BYTE (8) .STP		;NO ERASE EOL

;HAZELTINE ESPRIT

ESPRTB::BYTE (8) .CHESC,.CHFFD,.STP ;CURSOR UP
	BYTE (8) .CHESC,.CHVTB,.STP ;CURSOR DOWN
	BYTE (8) .CHBSP,.STP	;CURSOR BACK
	BYTE (8) .CHCNP,.STP	;CURSOR FORWARD
	[BYTE (8) .CHESC,.CHCNR,0,0,0,0,.STP] ;CURSOR HOME
	[BYTE (8) .CHESC,.CHCNW,0,0,0,0,.STP] ;ERASE TO END OF SCREEN
	BYTE (8) .CHESC,.CHCNO,.STP ;ERASE LINE

;FREEDOM-100

FRDMTB::BYTE (8) .CHVTB,.STP	;CURSOR UP
	BYTE (8) .CHCNV,.STP	;CURSOR DOWN
	BYTE (8) .CHBSP,.CHSPC,.CHBSP,.STP	;CURSOR BACK
	BYTE (8) .CHFFD,.STP	;CURSOR FORWARD
	BYTE (8) .CHCCF,.STP	;CURSOR HOME
	BYTE (8) .CHESC,"Y",.STP ;ERASE EOS
	BYTE (8) .CHESC,"T",.STP ;ERASE EOL

;DATAMEDIA-1520

DM15TB::BYTE (8) .CHCUN,.STP	;CURSOR UP
	BYTE (8) .CHLFD,.STP	;CURSOR DOWN
	BYTE (8) .CHBSP,.CHSPC,.CHBSP,.STP ;CURSOR BACK
	BYTE (8) .CHCBS,.STP	;CURSOR FORWARD
	BYTE (8) .CHCNY,.STP	;CURSOR HOME
	BYTE (8) .CHVTB,.STP	;ERASE EOS
	BYTE (8) .CHCRB,.STP	;ERASE EOL
>;IFN STANSW

; The following is not from STG.MAC, but nonetheless needs to be here!:

	END
