Hi Vivian!

Here's our story thus far....

I'm really rather astounded that the "authors" of this program hold
that this program is built to run on a DEC-20.  First off, I discovered
a couple of weeks ago that the FSEEK, FREAD problems I thought we were
having with KCC weren't problems at all.  The language specification for
C supports only full random access for binary files, with only very limited
support for text files (machine dependent).

Original Liptops got away with full random access on text files (by FSEEK)
since it was probably written in an environment like UNIX, where there
is no difference between text and binary files...
(UNIX:  supports rand acc on binary -> supports rand acc on text)

With this in mind, I was able to port Liptops to Blackjack, where my bug fixes
were successful and I've been able to tweak the defaults to produce output
which mimics exactly Speedy's output.

But we need a version on the '20 for Leda to run... so yesterday I wrote
a new page reversal scheme, (using FSEEK still, but keeping in mind that
I could only FSEEK to the places where I've done FTELL's).

Six hours later I've discovered the awful truth...

The FTELL values you get when you are writing a file do not correspond
to FTELL values you get when read the file back (I tried all the different
modes).  Since Liptops can't ever tell when it has read past the start of
the next page (when reading the un-reversed pages), it consistantly reads
off the end of the file.  Trying FOPEN() modes like "r+" and "w+", just
made things worse.

Here's the most likely possibilites that I see:

- Change it to use a separate .tmp file for each page (original plan)
	I think this could be done. (I'll look into this)

- Set up a way for Leda to use UNIX Liptops

- Write a new program which reverses text (maybe scribe output as well)
	avoiding the write-then-read FTELL problem by only reading
	fixed source and generating output once.

Ugh!  Ugh!  Ugh!

Todd