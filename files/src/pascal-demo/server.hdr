{This is a file designed to declare the external procedures and
 types needed to write an IPCF server.  You should use it with
 INCLUDE '<HEDRICK>SERVER.HDR', immediately after your PROGRAM
 statement.}

{Your program should include a type declaration for MESSAGE.
 It declares the form of the message to be passed to the server.
 It can be anything you like, so long as the size is not bigger
 than 512 words.  Here is an example:
     MESSAGE = ARRAY[1..512]OF INTEGER
 This should go in the TYPE section of your program}

type
     messpt=^message;

function server(name:alfa):messpt; extern;
  {Startserver should be used to initialize your program to receive
   requests from other programs.  NAME will probably be a 10-character
   name in quotes, e.g.
     M := SERVER('MYSERVE   ').
   You and your users have to agree on the name, since anyone who wants
   to pass you requests will have to specify the name of the server he
   wants to talk to.  Also, if several projects are going on, make sure
   they use different names, since there may only be one server with a
   given name at a time on the whole system.
      SERVER returns a pointer to a MESSAGE (whatever that may be).
   All data sent or received will go where this pointer points.}

procedure getrequest; extern;
  {Getrequest should be used when you are ready to receive a request
   from the user.  It puts the user's message into the place pointed
   to by the pointer returned by SERVER.} 

procedure sendreply; extern.
  {Sendreply should be used when you are ready to reply to the
   user.  The message to be sent back to the user is assumed to be
   at the place pointed to by the pointer returned by SERVER.}
