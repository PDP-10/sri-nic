
TOPS20 Change Order Number 5.1043

Written by: DBELL		21-May-80 16:16:02

Edit checked: NO			   Document: NO
  TCO Tested: NO		Maintenance Release: NO
Hardware-related: NO

Program: boot

Related TCO's:
Related SPR's: 


Problem: 
BOOT needs to be able to load DX20 microcode for the RP20 disks.

Diagnosis: 
No code exists to do it.

Solution: 
Change BOOT to look for the proper type of DX20, and load the proper
kind of microcode into it.  Either the RP20 driver, or the TU7x driver.
This means that BOOT now has two different external files to load with
it:  DXMCA.RMC and DXMCE.RMC.

[End of TCO 5.1043]


TOPS20 Change Order Number 5.1257

Written by: ZIMA		 4-Feb-81 10:20:40

Edit checked: NO			   Document: NO
  TCO Tested: NO		Maintenance Release: YES
Hardware-related: YES

Program: boot

Related TCO's:	5.1095
Related SPR's: 	 14573


Problem: 
     Various problems relating to power-fail on 2020 systems.  For instance,
BOOT hangs, first page of ROOT-DIRECTORY may be trashed, SWPPTP BUGHLTs on
reload, etc.

Diagnosis: 
     Uninitialized MOS memory can cause a wide range of problems that BOOT
and the monitor are not prepared to handle.  Memory initialization is done
by the front-end for the KL processor.

Solution: 
     Add code to BOOT under SMFLG conditional to initialize memory for
the KS-10.

[End of TCO 5.1257]


TOPS20 Change Order Number 5.1262

Written by: LEACHE		18-Feb-81 14:46:47

Edit checked: NO			   Document: NO
  TCO Tested: NO		Maintenance Release: NO
Hardware-related: NO

Program: BOOT

Related TCO's:
Related SPR's: 


Problem: BOOT bugs

Diagnosis: fix

Solution: Make following changes to BOOT:

1.	BOOT will now print the following message on the CTY if the dump file
	is too small:

	  ?SML DMP FIL

	This message ("small dump file") means that DUMP.EXE is too small
	to hold all the core pages that BOOT is trying to dump.  The dump
	will be created as usual, except that some number of pages will be
	missing.  The solution to this problem is to run MAKDMP and create
	a DUMP.EXE of the correct size for the particular memory configuration.

2.	Make /S and /D true no-ops for MTBOOT.  

3.	Add /I switch (and also increase code pages from 3 to 4).  This
	switch displays the version of BOOT and also the versions of any
	embedded DX20 microcode.

4.	For large memory configurations, BOOT was not successfully writing
	all EXE-directory entries.  Fix this bug and also section-align
	all entries.

5.	Allow selective inclusion/exclusion of DX20B (RP20) microcode
	under feature test switch FT.RP2.

6.	Stop BOOT from writing DX20 microcode to the dump file.  Microcode
	pages, as well as the pages that BOOT itself destroys when it lands
	in core are not written to the dump file.  Thus a file hole will
	appear in the dump file.  This page boundaries for this hole are
	as follows (approximately):

	BOOT without DX20B mcode:	[22 - 52]
	BOOT with DX20B mcode:		[22 - 57]

7.	Reload DX20B's (RP20-DX20's) during auto-reload of monitor.  This
	is not done for DX20A's (TU7x-DX20's).  Also, display DX20 type
	on the console during a microcode load.

[End of TCO 5.1262]


TOPS20 Change Order Number 5.1762

Written by: MILLER		18-Mar-82 15:42:49

Edit checked: NO			   Document: NO
  TCO Tested: NO		Maintenance Release: NO
Hardware-related: NO

Program: boot

Related TCO's:
Related SPR's: 


Problem: Now and then BOOT hangs in a microcode loop. When this
happens, reloading BOOT fixes the problem.

Diagnosis: The code that zeroes locations 20-23 is in the wrong place.
When this code is executed, paging is on but pages below
BOOT are not yet mapped. Depending on what garbage is in the
page table for page 0, many different things can happen.

Solution: Move the code until after the page map is completed.

[End of TCO 5.1762]

