

; SCSJSY.NEW.1 & <MONITOR>SCSJSY.MAC.1 31-Mar-89 2354	PAGE 1



LINE 1, PAGE 1
1)	; Edit= 8936 to SCSJSY.MAC on 23-Aug-88 by GSCOTT
1)	;Update BUG. documentation. Change some IFNSK. to IFSKP. 
1)	; UPD ID= 8620, RIP:<7.MONITOR>SCSJSY.MAC.8,  11-Feb-88 18:33:30 by GSCOTT
LINE 1, PAGE 1
2)	; UPD ID= 8620, RIP:<7.MONITOR>SCSJSY.MAC.8,  11-Feb-88 18:33:30 by GSCOTT


LINE 14, PAGE 3
1)	;        3.4    Read port counters (SCSRPC)  . . . . . . . . .  14
1)	;        3.5    Reject (SCSREJ)  . . . . . . . . . . . . . . .  15
1)	;        3.6    Disconnect (SCSDIS)  . . . . . . . . . . . . .  16
1)	;        3.7    Send message/datagram (SCSSMG/SCSSDG)  . . . .  17
1)	;        3.8    Queue mess buffers (SCSQRM)  . . . . . . . . .  20
1)	;        3.9    Cancel DG/MSG buffers (SCSCRD/SCSCRM)  . . . .  21
1)	;        3.10   Connect state poll (SCSCSP)  . . . . . . . . .  22
1)	;        3.11   Return connect data (SCSRCD) . . . . . . . . .  23
1)	;        3.12   Status of connect (SCSSTS) . . . . . . . . . .  24
1)	;        3.13   Map a buffer (SCSMAP)  . . . . . . . . . . . .  25
1)	;        3.14   Unmap a buffer (SCSUMP)  . . . . . . . . . . .  26
1)	;        3.15   Send/Request a buffer (SCSSND/SCSREQ)  . . . .  27
1)	;        3.16   Maint. data send/rec (SCSMDS/SCSMDR) . . . . .  28
1)	;        3.17   Start a remote system (SCSSRS) . . . . . . . .  29
1)	;        3.18   Reset a remote system (SCSRRS) . . . . . . . .  30
1)	;        3.19   Add interrupt channel (SCSAIC) . . . . . . . .  31
1)	;        3.20   Accept connection (SCSACC) . . . . . . . . . .  33
1)	;        3.21   Get data queue entry (SCSGDE)  . . . . . . . .  34
1)	;        3.22   Get event Q entry (SCSEVT) . . . . . . . . . .  35
1)	;        3.23   Get local node number (SCSGLN) . . . . . . . .  36
1)	;        3.24   Return buffer sizes (SCSRBS) . . . . . . . . .  37
1)	;        3.25   Return path status info (SCSRPS) . . . . . . .  38
1)	;    4. SCS% error handlers
1)	;        4.1    A2MHLT (PSB mapping bug) . . . . . . . . . . .  39
1)	;        4.2    SERIAA (Invalid argument block address)  . . .  40
1)	;        4.3    SERIBP (Invalid byte pointer)  . . . . . . . .  41
1)	;    5. SCA call handlers
1)	;        5.1    Main entry point . . . . . . . . . . . . . . .  42
1)	;        5.2    SCSONT (Handle online/offline interrupts)  . .  43
1)	;        5.3    SINDGR . . . . . . . . . . . . . . . . . . . .  45
1)	;        5.4    SINDMA . . . . . . . . . . . . . . . . . . . .  46
1)	;        5.5    SINMSC . . . . . . . . . . . . . . . . . . . .  47
1)	;        5.6    SINPBC . . . . . . . . . . . . . . . . . . . .  50
1)	;        5.7    SINCTL . . . . . . . . . . . . . . . . . . . .  51
1)	;        5.8    SINCRA . . . . . . . . . . . . . . . . . . . .  52
1)	;        5.9    SINOSD . . . . . . . . . . . . . . . . . . . .  53
1)	;        5.10   SINRID . . . . . . . . . . . . . . . . . . . .  54
1)	;        5.11   SINCIA . . . . . . . . . . . . . . . . . . . .  55
1)	;        5.12   SINPSC . . . . . . . . . . . . . . . . . . . .  56
1)	;        5.13   SINLCL . . . . . . . . . . . . . . . . . . . .  57

; SCSJSY.NEW.1 & <MONITOR>SCSJSY.MAC.1 31-Mar-89 2354	PAGE 2


1)	;        5.14   SINNWO . . . . . . . . . . . . . . . . . . . .  58
1)	^L	Subttl	Table of Contents (page 2)
LINE 14, PAGE 3
2)	;        3.4    Read port counters (SCSRPC)  . . . . . . . . .  10
2)	;        3.5    Reject (SCSREJ)  . . . . . . . . . . . . . . .  11
2)	;        3.6    Disconnect (SCSDIS)  . . . . . . . . . . . . .  12
2)	;        3.7    Send message/datagram (SCSSMG/SCSSDG)  . . . .  13
2)	;        3.8    Queue mess buffers (SCSQRM)  . . . . . . . . .  14
2)	;        3.9    Cancel DG/MSG buffers (SCSCRD/SCSCRM)  . . . .  15
2)	;        3.10   Connect state poll (SCSCSP)  . . . . . . . . .  16
2)	;        3.11   Return connect data (SCSRCD) . . . . . . . . .  17
2)	;        3.12   Status of connect (SCSSTS) . . . . . . . . . .  18
2)	;        3.13   Map a buffer (SCSMAP)  . . . . . . . . . . . .  19
2)	;        3.14   Unmap a buffer (SCSUMP)  . . . . . . . . . . .  20
2)	;        3.15   Send/Request a buffer (SCSSND/SCSREQ)  . . . .  21
2)	;        3.16   Maint. data send/rec (SCSMDS/SCSMDR) . . . . .  22
2)	;        3.17   Start a remote system (SCSSRS) . . . . . . . .  23
2)	;        3.18   Reset a remote system (SCSRRS) . . . . . . . .  24
2)	;        3.19   Add interrupt channel (SCSAIC) . . . . . . . .  25
2)	;        3.20   Accept connection (SCSACC) . . . . . . . . . .  26
2)	;        3.21   Get data queue entry (SCSGDE)  . . . . . . . .  27
2)	;        3.22   Get event Q entry (SCSEVT) . . . . . . . . . .  28
2)	;        3.23   Get local node number (SCSGLN) . . . . . . . .  29
2)	;        3.24   Return buffer sizes (SCSRBS) . . . . . . . . .  30
2)	;        3.25   Return path status info (SCSRPS) . . . . . . .  31
2)	;    4. SCS% error handlers
2)	;        4.1    A2MHLT (PSB mapping bug) . . . . . . . . . . .  32
2)	;        4.2    SERIAA (Invalid argument block address)  . . .  33
2)	;        4.3    SERIBP (Invalid byte pointer)  . . . . . . . .  34
2)	;    5. SCA call handlers
2)	;        5.1    Main entry point . . . . . . . . . . . . . . .  35
2)	;        5.2    SCSONT (Handle online/offline interrupts)  . .  36
2)	;        5.3    SINDGR . . . . . . . . . . . . . . . . . . . .  37
2)	;        5.4    SINDMA . . . . . . . . . . . . . . . . . . . .  38
2)	;        5.5    SINMSC . . . . . . . . . . . . . . . . . . . .  39
2)	;        5.6    SINPBC . . . . . . . . . . . . . . . . . . . .  40
2)	;        5.7    SINCTL . . . . . . . . . . . . . . . . . . . .  41
2)	;        5.8    SINCRA . . . . . . . . . . . . . . . . . . . .  42
2)	;        5.9    SINOSD . . . . . . . . . . . . . . . . . . . .  43
2)	;        5.10   SINRID . . . . . . . . . . . . . . . . . . . .  44
2)	;        5.11   SINCIA . . . . . . . . . . . . . . . . . . . .  45
2)	;        5.12   SINPSC . . . . . . . . . . . . . . . . . . . .  46
2)	;        5.13   SINLCL . . . . . . . . . . . . . . . . . . . .  47
2)	;        5.14   SINNWO . . . . . . . . . . . . . . . . . . . .  48
2)	^L	Subttl	Table of Contents (page 2)


; SCSJSY.NEW.1 & <MONITOR>SCSJSY.MAC.1 31-Mar-89 2354	PAGE 3



LINE 9, PAGE 4
1)	;        6.1    SCSDMU (Data monitor to user)  . . . . . . . .  59
1)	;        6.2    SCSRUB (Remove user buffer)  . . . . . . . . .  60
1)	;        6.3    SCSSUM (Move string from user to monitor)  . .  61
1)	;        6.4    SCSDUM (Move data from user to monitor)  . . .  62
1)	;        6.5    SCSCUB (Count user buffers)  . . . . . . . . .  63
1)	;        6.6    SCSXUB (Link buffer chain into database) . . .  64
1)	;        6.7    SCSUNM (User name move)  . . . . . . . . . . .  65
1)	;        6.8    SCSUDM (User connection data move) . . . . . .  66
1)	;        6.9    SCSCBI (Connect block data init) . . . . . . .  67
1)	;        6.10   SCSABT/SCSRBT (Add/remove bit from table)  . .  68
1)	;        6.11   SCSGNB (Get next bit)  . . . . . . . . . . . .  69
1)	;        6.12   SCSAFT (Add fork to table) . . . . . . . . . .  70
1)	;        6.13   SCSRFT (Remove fork from table)  . . . . . . .  71
1)	;        6.14   SCSGNF (Get next fork) . . . . . . . . . . . .  72
1)	;        6.15   SCSQMD (Queue entry on maint. data Q)  . . . .  73
1)	;        6.16   SCSDMD (Dequeue maint. data queue entry) . . .  74
1)	;        6.17   SCSLFQ (Link packet to front of queue's) . . .  75
1)	;        6.18   SCSAER (ASGRES error handler)  . . . . . . . .  76
1)	;        6.19   SCSLCB (Link CB onto fork CB queue)  . . . . .  77
1)	;        6.20   SCSKIL (Clean up SCS% data)  . . . . . . . . .  78
1)	;        6.21   SCSCBD (JSYS CB data delete) . . . . . . . . .  80
1)	;        6.22   SCSGPR (General packet return) . . . . . . . .  82
1)	;        6.23   SCSCBS (Clean a BSD queue) . . . . . . . . . .  83
1)	;        6.24   SCSRCB (Remove CB from owning fork CB queue) .  84
1)	;        6.25   SCSAXN (Add DMA buffer name) . . . . . . . . .  85
1)	;        6.26   SCSDXN (Delete DMA buffer name)  . . . . . . .  86
1)	;        6.27   SCSFXN (Find a buffer name)  . . . . . . . . .  87
1)	;        6.28   SCSCXN (Clean a buffer name list)  . . . . . .  88
1)	;        6.29   SCSLXN (Link entry onto fork DMA name queue) .  89
1)	;        6.30   SCSRXN (Remove entry from fork DMA nam list) .  90
1)	;        6.31   SCSULK (Unlock pages in a DMA buffer)  . . . .  91
1)	;        6.32   SCSCLK (Clock service routine) . . . . . . . .  92
1)	;        6.33   SCSPSI (Add entry to fork queue) . . . . . . .  93
1)	;        6.34   SCSQUE (Queue a block for list queueing) . . .  98
1)	;        6.35   SCSMBS (Make another BSD)  . . . . . . . . . .  99
1)	;        6.36   SCSDEQ (Dequeue a buffer from fork+CB Q's) . . 100
1)	;        6.37   SCSMPS (Map a forks PSB) . . . . . . . . . . . 102
1)	;        6.38   SCSUPS (Unmap a forks PSB) . . . . . . . . . . 104
1)	;        6.39   SCSLUB (Link on user buffer addr)  . . . . . . 105
1)	;        6.40   SCSGUB (Get user buffer address) . . . . . . . 106
1)	;        6.41   SCSRET (Return buffer to correct pool) . . . . 107
1)	;    7. Storage  . . . . . . . . . . . . . . . . . . . . . . . 109
1)	;    8. End of SCSJSY  . . . . . . . . . . . . . . . . . . . . 110
1)	^L	SUBTTL Init code
LINE 9, PAGE 4
2)	;        6.1    SCSDMU (Data monitor to user)  . . . . . . . .  49
2)	;        6.2    SCSRUB (Remove user buffer)  . . . . . . . . .  50
2)	;        6.3    SCSSUM (Move string from user to monitor)  . .  51

; SCSJSY.NEW.1 & <MONITOR>SCSJSY.MAC.1 31-Mar-89 2354	PAGE 4


2)	;        6.4    SCSDUM (Move data from user to monitor)  . . .  52
2)	;        6.5    SCSCUB (Count user buffers)  . . . . . . . . .  53
2)	;        6.6    SCSXUB (Link buffer chain into database) . . .  54
2)	;        6.7    SCSUNM (User name move)  . . . . . . . . . . .  55
2)	;        6.8    SCSUDM (User connection data move) . . . . . .  56
2)	;        6.9    SCSCBI (Connect block data init) . . . . . . .  57
2)	;        6.10   SCSABT/SCSRBT (Add/remove bit from table)  . .  58
2)	;        6.11   SCSGNB (Get next bit)  . . . . . . . . . . . .  59
2)	;        6.12   SCSAFT (Add fork to table) . . . . . . . . . .  60
2)	;        6.13   SCSRFT (Remove fork from table)  . . . . . . .  61
2)	;        6.14   SCSGNF (Get next fork) . . . . . . . . . . . .  62
2)	;        6.15   SCSQMD (Queue entry on maint. data Q)  . . . .  63
2)	;        6.16   SCSDMD (Dequeue maint. data queue entry) . . .  64
2)	;        6.17   SCSLFQ (Link packet to front of queue's) . . .  65
2)	;        6.18   SCSAER (ASGRES error handler)  . . . . . . . .  66
2)	;        6.19   SCSLCB (Link CB onto fork CB queue)  . . . . .  67
2)	;        6.20   SCSKIL (Clean up SCS% data)  . . . . . . . . .  68
2)	;        6.21   SCSCBD (JSYS CB data delete) . . . . . . . . .  69
2)	;        6.22   SCSGPR (General packet return) . . . . . . . .  70
2)	;        6.23   SCSCBS (Clean a BSD queue) . . . . . . . . . .  71
2)	;        6.24   SCSRCB (Remove CB from owning fork CB queue) .  72
2)	;        6.25   SCSAXN (Add DMA buffer name) . . . . . . . . .  73
2)	;        6.26   SCSDXN (Delete DMA buffer name)  . . . . . . .  74
2)	;        6.27   SCSFXN (Find a buffer name)  . . . . . . . . .  75
2)	;        6.28   SCSCXN (Clean a buffer name list)  . . . . . .  76
2)	;        6.29   SCSLXN (Link entry onto fork DMA name queue) .  77
2)	;        6.30   SCSRXN (Remove entry from fork DMA nam list) .  78
2)	;        6.31   SCSULK (Unlock pages in a DMA buffer)  . . . .  79
2)	;        6.32   SCSCLK (Clock service routine) . . . . . . . .  80
2)	;        6.33   SCSPSI (Add entry to fork queue) . . . . . . .  81
2)	;        6.34   SCSQUE (Queue a block for list queueing) . . .  82
2)	;        6.35   SCSMBS (Make another BSD)  . . . . . . . . . .  83
2)	;        6.36   SCSDEQ (Dequeue a buffer from fork+CB Q's) . .  84
2)	;        6.37   SCSMPS (Map a forks PSB) . . . . . . . . . . .  85
2)	;        6.38   SCSUPS (Unmap a forks PSB) . . . . . . . . . .  86
2)	;        6.39   SCSLUB (Link on user buffer addr)  . . . . . .  87
2)	;        6.40   SCSGUB (Get user buffer address) . . . . . . .  88
2)	;        6.41   SCSRET (Return buffer to correct pool) . . . .  89
2)	;    7. Storage  . . . . . . . . . . . . . . . . . . . . . . .  90
2)	;    8. End of SCSJSY  . . . . . . . . . . . . . . . . . . . .  91
2)	^L	SUBTTL Init code


; SCSJSY.NEW.1 & <MONITOR>SCSJSY.MAC.1 31-Mar-89 2354	PAGE 5



LINE 11, PAGE 5
1)		is not allowed to see online/offline interrupts. The system can run but
1)		many diagnostics will get upset as will anything that uses the JSYS.
1)	
1)	Action:	If this BUGCHK is reproducible, set it dumpable and send in an SPR
1)		along with how to reproduce the problem.
1)	>)
LINE 11, PAGE 5
2)		is not allowed to see online/offline interrupts. The system can run
2)		but many diagnostics will get upset as will anything that uses the 
2)		JSYS.
2)	>)


LINE 30, PAGE 9
1)		CAME T1,[-1]		;[8936] Do we want first for fork or connection
1)		IFSKP.			;[8936] Yes
1)		 SKIPN T1,@.TOPFQ(Q2)	;Is there a packet waiting for this fork???
LINE 30, PAGE 9
2)		CAMN T1,[-1]		;Do we want first for fork or connection???
2)		IFNSK.
2)		 SKIPN T1,@.TOPFQ(Q2)	;Is there a packet waiting for this fork???


LINE 7, PAGE 10
1)		SKIPLE @.JBUFF(Q2)	;[8936] Are there datagram buffers queued???
1)		IFSKP.			;[8936]
1)		 MOVX T1,SCSNMQ		;Assume we are doing messages
LINE 52, PAGE 9
2)		SKIPG @.JBUFF(Q2)	;Are there datagram buffers queued???
2)		IFNSK.
2)		 MOVX T1,SCSNMQ		;Assume we are doing messages


LINE 34, PAGE 12
1)	Action:	If this BUGINF is reproducible, set it dumpable and send in an SPR
1)		along with how to reproduce the problem.
1)	
1)	Data:	ERRCOD - Erro code
1)		CURFRK - Current fork
LINE 163, PAGE 9
2)	DATA:	ERRCOD - Erro code
2)		CURFRK - Current fork


; SCSJSY.NEW.1 & <MONITOR>SCSJSY.MAC.1 31-Mar-89 2354	PAGE 6



LINE 33, PAGE 17
1)		SKIPE MSGFLG		;[8936] Are we doing messages???
1)		IFSKP.			;[8936]
1)		 CALL <XENT SC.ALD>	;[7.1043]Get a monitor buffer for the data
LINE 33, PAGE 13
2)		SKIPN MSGFLG		;Are we doing messages???
2)		IFNSK.
2)		 CALL <XENT SC.ALD>	;[7.1043]Get a monitor buffer for the data


LINE 4, PAGE 19
1)		SKIPE MSGFLG		;[8936] Are we doing messages???
1)		IFSKP.			;[8936]
1)		 BLCAL. (<XENT SC.SDG>,<CID,T2,T4,BUFADR,[SCSPRI],T3>) ;[7.1043]Have SCA send the datagram
1)		  JRST SDGERR		;Fail with code from SCA
1)		 AOS SCSJDS		;[7211] COUNT THE DATAGRAM SEND
LINE 93, PAGE 13
2)		SKIPN MSGFLG		;Are we doing messages???
2)		IFNSK.
2)		 BLCAL. (<XENT SC.SDG>,<CID,T2,T4,BUFADR,[SCSPRI],T3>) ;[7.1043]Have SCA send the datagram
2)		  JRST SDGERR		;Fail with code from SCA
2)	;**;[7211] Add 1 line at SCSSMG+86	CEG 18-Dec-85
2)		 AOS SCSJDS		;[7211] COUNT THE DATAGRAM SEND


LINE 98, PAGE 25
1)		CAIG T3,PGSIZ		;[8936] Is the block not longer than one page?
1)		IFSKP.			;[8936]
1)		 MOVEI T1,SCSSTL	;Yes, error code for segment to long
LINE 98, PAGE 19
2)		CAILE T3,PGSIZ		;Is the block not longer than one page???
2)		IFNSK.
2)		 MOVEI T1,SCSSTL	;Yes, error code for segment to long


LINE 8, PAGE 32
1)		CAIN T2,-1		;[8936] Are we disabling event interrupts???
1)		IFSKP.			;[8936]
1)		 CALL SCSAFT		;(T1)No, add this fork to FRKTAB
LINE 46, PAGE 25
2)		CAIE T2,-1		;Are we disabling event interrupts???
2)		IFNSK.
2)		 CALL SCSAFT		;(T1)No, add this fork to FRKTAB


; SCSJSY.NEW.1 & <MONITOR>SCSJSY.MAC.1 31-Mar-89 2354	PAGE 7



LINE 37, PAGE 33
1)		 JRST ACCERR		;[8936] Handle the error please
1)		BLCAL. (<XENT SC.ACC>,<T1,DATADR,[0],[0]>) ;[7.1043]Do the accept call
LINE 37, PAGE 26
2)		IFNSK.
2)		 JRST ACCERR		;Handle the error please
2)		ENDIF.
2)		BLCAL. (<XENT SC.ACC>,<T1,DATADR,[0],[0]>) ;[7.1043]Do the accept call


LINE 20, PAGE 43
1)		CAIE T1,.SSNCO		;[8936] Did the node come online???
1)		IFSKP.			;[8936]
1)		  MOVX T4,.SENCO	;Yes, get the event code for node online
LINE 20, PAGE 36
2)		CAIN T1,.SSNCO		;Did the node come online???
2)		IFNSK.
2)		  MOVX T4,.SENCO	;Yes, get the event code for node online


LINE 33, PAGE 48
1)	Cause:	SCA called us with a buffer name for a completed maintenance data
1)		transfer.  Upon trying to find this name in the database of outstanding
1)		JSYS maint transfers, no match was found.  The fork which performed the
1)		maint data transfer request will never be notified of the completion of
1)		the request.
1)	
1)	Action:	If this BUGCHK is reproducible, set it dumpable and send in an SPR
1)		along with how to reproduce the problem.
1)	
1)		In the dump, try to find the buffer name in the port driver database of
1)		BSD/BHD's and see if this is a valid buffer name. If so, check the
1)		consistancy of the SCA maint queue.  Other than this, not much can be
1)		done.
1)	
1)	Data:	BFRNAM - Buffer name
LINE 53, PAGE 39
2)	Cause:	SCA called us with a buffer name for a completed maintainance data 
2)		transfer. Upon trying to find this name in the database of outstanding 
2)		JSYS maint xfers, no match was found. The fork which performed the 
2)		maint data xfer request will never be notified of the completion of 
2)		the request.
2)	
2)	Action: Try to find the buffer name in the port driver database of BSD/BHD's
2)		and see if this is a valid buffer name. If so, check the consistancy
2)		of the SCA maint Q. Other than this, not much can be done...
2)	
2)	Data:	BFRNAM - Buffer name


; SCSJSY.NEW.1 & <MONITOR>SCSJSY.MAC.1 31-Mar-89 2354	PAGE 8



LINE 6, PAGE 49
1)	MSCER1:	BUG.(CHK,SCSBIZ,SCSJSY,SOFT,<SCSJSY - Maintenance data transfer queue smashed>,<<T1,ERRCOD>>,<
1)	
1)	Cause:	A routine which should not return (+1), did.  This indicates that a
1)		maintenance data transfer queue is damaged.
1)	
1)	Action:	If this BUGCHK is reproducible, set it dumpable and send in an SPR
1)		along with how to reproduce the problem.
1)	
1)	Data:	ERRCOD - The error code
LINE 74, PAGE 39
2)	MSCER1:	BUG. (CHK,SCSBIZ,SCSJSY,SOFT,<SCSJSY - Maintainance data transfer Q smashed>,<<T1,ERRCOD>>,<
2)	
2)	Cause:	A routine which should not return (+1), did.
2)	
2)	Data:	ERRCOD - The error code


LINE 45, PAGE 63
1)		CAIGE T3,C%MXBF		;[8936] Have we exceeded a reasonable number of buf?
1)		IFSKP.			;[8936]
1)		 MOVX T1,SCSENB		;Yes, get the error code for too many buffers
LINE 45, PAGE 53
2)		CAIL T3,C%MXBF		;Have we exceeded a reasonable number of buf?
2)		 IFNSK.
2)		 MOVX T1,SCSENB		;Yes, get the error code for too many buffers


LINE 39, PAGE 68
1)		SKIPE ABTCOD		;[8936] Are we adding the bit???
1)		IFSKP.			;[8936]
1)		 ANDCAM T4,(T3)		;Turn off the bit please
LINE 39, PAGE 58
2)		SKIPN ABTCOD		;Are we adding the bit???
2)		IFNSK.
2)		 ANDCAM T4,(T3)		;Turn off the bit please


LINE 27, PAGE 76
1)		caller's PC given by the BUGINF, figuring out why it failed should be
1)		easy enough.
1)	
1)	Action:	If this BUGCHK is reproducible, set it dumpable and send in an SPR
1)		along with how to reproduce the problem.
1)	
1)	Data:	ERRCOD - Error code
LINE 27, PAGE 66
2)		caller's PC given by the BUGINF, figuring out why it failed should
2)		be easy enough.

; SCSJSY.NEW.1 & <MONITOR>SCSJSY.MAC.1 31-Mar-89 2354	PAGE 9


2)	
2)	Data:	ERRCOD - Error code


LINE 21, PAGE 77
1)		CAMN T1,T2		;[8936] Is BLINK a pointer to the FLINK???
1)		IFSKP.			;[8936]
1)		 MOVEM T1,.CBJPB(P1)	;No, update previous pointer of new CB
LINE 21, PAGE 67
2)		CAME T1,T2		;Is BLINK a pointer to the FLINK???
2)		IFNSK.
2)		 MOVEM T1,.CBJPB(P1)	;No, update previous pointer of new CB


LINE 27, PAGE 78
1)	; NOTE: The following two lines are a temporary hack to prevent SCSFR1 BUGCHKs
1)	; from FRKCHK when SCSKIL is called from CLZFF%.  The correct action here is to
1)	; allow SCSKIL to clean up CI connections owned by a fork inferior to the
1)	; current fork.
1)	
1)		CAME T1,FORKX		;IS THE CURRENT FORK
LINE 26, PAGE 68
2)	;
2)	; NOTE: The folowing two lines are a temporary hack to prevent SCSFR1
2)	; BUGCHKs from FRKCHK when SCSKIL is called from CLZFF%.  The correct
2)	; action here is to allow SCSKIL to clean up CI connections owned by a
2)	; fork inferior to the current fork.
2)	;
2)		CAME T1,FORKX		;IS THE CURRENT FORK


LINE 38, PAGE 79
1)	Action:	If this BUGCHK is reproducible, set it dumpable and send in an SPR
1)		along with how to reproduce the problem.
1)	
1)	Data:	ERRCOD - Error code returned by SC.DIS
LINE 91, PAGE 68
2)	Data:	ERRCOD - Error code returned by SC.DIS


LINE 38, PAGE 81
1)	Action:	If this BUGCHK is reproducible, set it dumpable and send in an SPR
1)		along with how to reproduce the problem.
1)	
1)	Data:	ERRCOD - Error code
LINE 84, PAGE 69
2)	Data:	ERRCOD - Error code


; SCSJSY.NEW.1 & <MONITOR>SCSJSY.MAC.1 31-Mar-89 2354	PAGE 10



LINE 18, PAGE 93
1)	;The .MEANC offset of each queue entry is used as a forward pointer to the next
1)	;entry. The .MEAPC offset is used as a backward pointer.  This is true only
1)	;between the times when the entry is queued (via QUEFRK) and when it is removed
1)	;(via SCSPSI).  After the entry is removed from the SCSTPQ list, the .MEANC and
1)	;.MEAPC offsets are used for another purpose.
1)	
1)	XRENT	(SCSPSI,G)		;[7.1043]SCSPSI::, XSCSPS::
LINE 18, PAGE 81
2)	;
2)	;THE .MEANC OFFSET OF EACH QUEUE ENTRY IS USED AS A FORWARD POINTER
2)	;TO THE NEXT ENTRY. THE .MEAPC OFFSET IS USED AS A BACKWARD POINTER.
2)	;THIS IS TRUE ONLY BETWEEN THE TIMES WHEN THE ENTRY
2)	;IS QUEUED (VIA QUEFRK) AND WHEN IT IS REMOVED (VIA SCSPSI). AFTER THE
2)	;ENTRY IS REMOVED FROM THE SCSTPQ LIST, THE .MEANC AND .MEAPC OFFSETS
2)	;ARE USED FOR ANOTHER PURPOSE.
2)	;
2)	XRENT	(SCSPSI,G)		;[7.1043]SCSPSI::, XSCSPS::


LINE 42, PAGE 94
1)		CAME T1,[-1]		;[8936] Is this a special block with no CID???
1)		IFSKP.			;[8936] yes
1)		 SETO P1,0		;Yes, special block, show address of CB as -1
LINE 90, PAGE 81
2)		CAMN T1,[-1]		;Is this a special block with no CID???
2)		IFNSK.
2)		 SETO P1,0		;Yes, special block, show address of CB as -1


LINE 16, PAGE 96
1)		CAME T3,Q1		;[8936] Is this a pointer to the FLINK???
1)		IFSKP.			;[8936]
1)		 MOVEM T1,(Q1)		;Yes, update the fork Q FLINK
LINE 142, PAGE 81
2)		CAMN T3,Q1		;Is this a pointer to the FLINK???
2)		IFNSK.
2)		 MOVEM T1,(Q1)		;Yes, update the fork Q FLINK


LINE 12, PAGE 97
1)	Action:	If this BUGCHK is reproducible, set it dumpable and send in an SPR
1)		along with how to reproduce the problem.
1)	
1)	Data:	TYPE - Message buffer type
LINE 171, PAGE 81
2)	Data:	TYPE - Message buffer type


; SCSJSY.NEW.1 & <MONITOR>SCSJSY.MAC.1 31-Mar-89 2354	PAGE 11



LINE 3, PAGE 101
1)	DEQFRK:	IFGE. P1		;[8936] Is this fork only case?
1)		 MOVX T3,CBFKIL		;No, see if fork with connect is dead
LINE 48, PAGE 84
2)	DEQFRK:	SKIPL P1		;Is this fork only case???
2)		IFNSK.
2)		 MOVX T3,CBFKIL		;No, see if fork with connect is dead


LINE 26, PAGE 102
1)	SCSMPS:	SKIPGE T2,MPSFRK	;[8936] Have we got a fork mapped already???
1)		IFSKP.			;[8936]
1)		 CAME T1,T2		;Yes, are we mapping the same fork again???
LINE 26, PAGE 85
2)	SCSMPS:	SKIPL T2,MPSFRK		;Have we got a fork mapped already???
2)		IFNSK.
2)		 CAME T1,T2		;Yes, are we mapping the same fork again???


LINE 38, PAGE 102
1)		CAME T1,FORKX		;[8936] Are we the target fork???
1)		IFSKP.			;[8936]
1)		 AOS MPSCNT		;Increment the nesting level
LINE 38, PAGE 85
2)		CAMN T1,FORKX		;Are we the target fork???
2)		IFNSK.
2)		 AOS MPSCNT		;Increment the nesting level


LINE 20, PAGE 108
1)	Cause:	SCS% fork is remving entries that don't belong to it.  It is assumed
1)		that only the owning fork can manipulate SCS% in a CB or in its own
1)		PSB.
1)	
1)	Action:	If this BUGCHK is reproducible, set it dumpable and send in an SPR
1)		along with how to reproduce the problem.
1)	
1)	Data:	FRKNUM - Fork number to be checked
LINE 46, PAGE 89
2)	Cause:	It is assumed that only the owning fork can manipulate SCS% in
2)		a CB or in its own PSB.
2)	
2)	Data:	FRKNUM - Fork number to be checked
