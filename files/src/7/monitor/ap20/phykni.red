REDIT 1(103) COMPARE by user MKL, 31-Mar-89 14:33:11
File 1: SRC:<7.MONITOR>PHYKNI.MAC.1
File 2: SRC:<7.MONITOR.AP20>PHYKNI.MAC.1
***** CHANGE #1; PAGE 1, LINE 1; PAGE 1, LINE 1
 ---------------------------------
; Edit= 8981 to PHYKNI.MAC on 11-Oct-88 by GSCOTT
;Add NOKLIN. 
; Edit= 8908 to PHYKNI.MAC on 16-Aug-88 by GSCOTT
;Update BUG. documentation. 

***** CHANGE #2; PAGE 3, LINE 34; PAGE 3, LINE 34
;   22. INTPRO - Determine what caused the interrupt, and hand  28
;   23. RSPERR - Handle errors generated by a response . . . .  29
;   24. Transmit errors  . . . . . . . . . . . . . . . . . . .  30
;   25. Here to handle receive errors  . . . . . . . . . . . .  31
;   26. KNIERR - Handle KLNI hardware errors . . . . . . . . .  32
;   27. KNIPPE - Planned CRAM Parity Errors  . . . . . . . . .  33
;   28. Individual Planned CRAM Parity Errors  . . . . . . . .  34
;   29. KNICHK - Periodic Checks . . . . . . . . . . . . . . .  40
;   30. Good Stuff - KLNI dump and reload logic description  .  41
;   31. KNIJB0 - Run KNILDR if necessary . . . . . . . . . . .  42
;   32. Read/Write CRAM  . . . . . . . . . . . . . . . . . . .  43
;   33. NISND - Send Datagram  . . . . . . . . . . . . . . . .  44
;   34. Byte pointer evaluation tables . . . . . . . . . . . .  45
;   35. CNTFRG - Count BSDs  . . . . . . . . . . . . . . . . .  50
;   36. BLDBSD - Build BSDs  . . . . . . . . . . . . . . . . .  51
;   37. FIXBSD - Correct buffer for physical contituity  . . .  54
;   38. SETSND - Setup Send Datagram Entry . . . . . . . . . .  55
;   39. NISRB - Specify Receive Buffer . . . . . . . . . . . .  58
;   40. Read/Clear Performance Counters  . . . . . . . . . . .  60
;   41. Read/Read Clear Counters Response  . . . . . . . . . .  61
;   42. Complete Reading Of Channel Counters . . . . . . . . .  62
;   43. Complete Reading Of Portal Counters  . . . . . . . . .  63
;   44. CMPSLZ - Compute Seconds Since Last Zeroed . . . . . .  64
;   45. NISCS - Set Channel State  . . . . . . . . . . . . . .  65
;   46. NIRPI - Read Portal Information  . . . . . . . . . . .  66
;   47. QUECMD - Queue A Command . . . . . . . . . . . . . . .  67
 ---------------------------------
;   22. INTPRO - Determine what caused the interrupt, and hand  28
;   23. RSPERR - Handle errors generated by a response . . . .  29
;   24. Transmit errors  . . . . . . . . . . . . . . . . . . .  30
;   25. Here to handle receive errors  . . . . . . . . . . . .  31
;   26. KNIERR - Handle KLNI hardware errors . . . . . . . . .  32
;   27. KNIPPE - Planned CRAM Parity Errors  . . . . . . . . .  34
;   28. Individual Planned CRAM Parity Errors  . . . . . . . .  35
;   29. KNICHK - Periodic Checks . . . . . . . . . . . . . . .  41
;   30. Good Stuff - KLNI dump and reload logic description  .  42
;   31. KNIJB0 - Run KNILDR if necessary . . . . . . . . . . .  43
;   32. Read/Write CRAM  . . . . . . . . . . . . . . . . . . .  44
;   33. NISND - Send Datagram  . . . . . . . . . . . . . . . .  45
;   34. Byte pointer evaluation tables . . . . . . . . . . . .  46
;   35. CNTFRG - Count BSDs  . . . . . . . . . . . . . . . . .  51
;   36. BLDBSD - Build BSDs  . . . . . . . . . . . . . . . . .  52
;   37. FIXBSD - Correct buffer for physical contituity  . . .  55
;   38. SETSND - Setup Send Datagram Entry . . . . . . . . . .  56
;   39. NISRB - Specify Receive Buffer . . . . . . . . . . . .  59
;   40. Read/Clear Performance Counters  . . . . . . . . . . .  61
;   41. Read/Read Clear Counters Response  . . . . . . . . . .  62
;   42. Complete Reading Of Channel Counters . . . . . . . . .  63
;   43. Complete Reading Of Portal Counters  . . . . . . . . .  64
;   44. CMPSLZ - Compute Seconds Since Last Zeroed . . . . . .  65
;   45. NISCS - Set Channel State  . . . . . . . . . . . . . .  66
;   46. NIRPI - Read Portal Information  . . . . . . . . . . .  67
;   47. QUECMD - Queue A Command . . . . . . . . . . . . . . .  68

***** CHANGE #3; PAGE 5, LINE 8; PAGE 5, LINE 8
;		     Table of Contents for PHYKNI
;
;				  Section		      Page
;
;
;   48. FNDPT - Find The PTT Entry For A Protocol Type . . . .  68
;   49. MSGAVA - Response Message Available  . . . . . . . . .  69
;   50. DGSNT - Response to Datagram Sent  . . . . . . . . . .  70
;   51. NIRSI - Read KLNI Station Information  . . . . . . . .  71
;   52. NIRCI - Read Channel Information . . . . . . . . . . .  72
;   53. NICLO - Flush All Commands From A Portal . . . . . . .  73
;   54. CLOSED - Command Flush Completion  . . . . . . . . . .  74
;   55. NISCA - Set Channel Address  . . . . . . . . . . . . .  75
;   56. PMOVE - Physical Mover . . . . . . . . . . . . . . . .  76
;   57. PUTQUE - Put An Entry On The Queue . . . . . . . . . .  77
;   58. REMQUE - Remove An Entry From A Queue  . . . . . . . .  78
;   59. GETCOR/RELCOR - Core Manager . . . . . . . . . . . . .  79
;   60. GXRCOR - Get Core For Transmits And Receives . . . . .  80
;   61. CHKBUF - Check Buffer Physical Range . . . . . . . . .  81
;   62. NISTP - Stop The KLNI (Freeze) . . . . . . . . . . . .  82
;   63. INICOM - Setup Initial KLNI Commands . . . . . . . . .  83
;   64. ENBKLP - Enable KLIPA NI Port  . . . . . . . . . . . .  84
;   65. PCBINI - Initialize The Port Control Block . . . . . .  85
;   66. ASGPRO - Assign Protocol Type  . . . . . . . . . . . .  88
;   67. NIDPT - Disable A Protocol Type  . . . . . . . . . . .  89
;   68. NISRA - Specify Receive Address  . . . . . . . . . . .  90
;   69. NIDRA - Disable A Multicast Address  . . . . . . . . .  91
;   70. FNDMT - Find Enabled MTT Entry For A Given Multicast A  92
;   71. LDMCT - Build Load Tables Commands . . . . . . . . . .  93
;   72. LDPTT - Load Protocol Type Table . . . . . . . . . . .  94
;   73. NIWSI - Write Station Information  . . . . . . . . . .  95
;   74. LOGERR - Generate ERROR.SYS Entries  . . . . . . . . .  96
;   75. Common BUGs  . . . . . . . . . . . . . . . . . . . . .  97
;   76. Miscellaneous Routines . . . . . . . . . . . . . . . .  98
;   77. History Buffer Routines  . . . . . . . . . . . . . . .  99
;   78. INIUNB - Initialize The History Buffer . . . . . . . . 100
;   79. FNDCHN - Find Channel Block Associated With Channel #  101
;   80. End of PHYKLP  . . . . . . . . . . . . . . . . . . . . 102
 ---------------------------------
;		     Table of Contents for PHYKNI
;
;				  Section		      Page
;
;
;   48. FNDPT - Find The PTT Entry For A Protocol Type . . . .  69
;   49. MSGAVA - Response Message Available  . . . . . . . . .  70
;   50. DGSNT - Response to Datagram Sent  . . . . . . . . . .  73
;   51. NIRSI - Read KLNI Station Information  . . . . . . . .  74
;   52. NIRCI - Read Channel Information . . . . . . . . . . .  75
;   53. NICLO - Flush All Commands From A Portal . . . . . . .  76
;   54. CLOSED - Command Flush Completion  . . . . . . . . . .  77
;   55. NISCA - Set Channel Address  . . . . . . . . . . . . .  78
;   56. PMOVE - Physical Mover . . . . . . . . . . . . . . . .  79
;   57. PUTQUE - Put An Entry On The Queue . . . . . . . . . .  80
;   58. REMQUE - Remove An Entry From A Queue  . . . . . . . .  81
;   59. GETCOR/RELCOR - Core Manager . . . . . . . . . . . . .  82
;   60. GXRCOR - Get Core For Transmits And Receives . . . . .  83
;   61. CHKBUF - Check Buffer Physical Range . . . . . . . . .  84
;   62. NISTP - Stop The KLNI (Freeze) . . . . . . . . . . . .  85
;   63. INICOM - Setup Initial KLNI Commands . . . . . . . . .  86
;   64. ENBKLP - Enable KLIPA NI Port  . . . . . . . . . . . .  87
;   65. PCBINI - Initialize The Port Control Block . . . . . .  90
;   66. ASGPRO - Assign Protocol Type  . . . . . . . . . . . .  93
;   67. NIDPT - Disable A Protocol Type  . . . . . . . . . . .  94
;   68. NISRA - Specify Receive Address  . . . . . . . . . . .  95
;   69. NIDRA - Disable A Multicast Address  . . . . . . . . .  96
;   70. FNDMT - Find Enabled MTT Entry For A Given Multicast A  97
;   71. LDMCT - Build Load Tables Commands . . . . . . . . . .  98
;   72. LDPTT - Load Protocol Type Table . . . . . . . . . . .  99
;   73. NIWSI - Write Station Information  . . . . . . . . . . 100
;   74. LOGERR - Generate ERROR.SYS Entries  . . . . . . . . . 101
;   75. Common BUGs  . . . . . . . . . . . . . . . . . . . . . 102
;   76. Miscellaneous Routines . . . . . . . . . . . . . . . . 104
;   77. History Buffer Routines  . . . . . . . . . . . . . . . 105
;   78. INIUNB - Initialize The History Buffer . . . . . . . . 106
;   79. FNDCHN - Find Channel Block Associated With Channel #  107
;   80. End of PHYKLP  . . . . . . . . . . . . . . . . . . . . 108

***** CHANGE #4; PAGE 15, LINE 17; PAGE 15, LINE 17

;BSD STYLE DATAGRAMS

BEGSTR SB,SN.LST
	WORD BBA		; Physical BSD base address
				;  Anything may be added from here on ****
	WORD PID		; Portal ID
 ---------------------------------

;BSD STYLE DATAGRAMS

BEGSTR SB,SN.LST
	WORD BBA		; Physical BSD base address
				;  Anything may be added from here on 
	WORD PID		; Portal ID

***** CHANGE #5; PAGE 15, LINE 34; PAGE 15, LINE 34
	FIELD PAC,2,7		;PACKING MODE
	FIELD SBA,24,35		;PHYSICAL SEGMENT BASE ADDRESS
	WORD NXA		;PHYSICAL NEXT BSD ADDRESS
	WORD SLN		;SEGMENT LENGTH
	WORD RES		;RESERVED FOR SOFTWARE
				;**** ADDITION DEFINITIONS MAY BE ADDED HERE
ENDSTR
 ---------------------------------
	FIELD PAC,2,7		;PACKING MODE
	FIELD SBA,24,35		;PHYSICAL SEGMENT BASE ADDRESS
	WORD NXA		;PHYSICAL NEXT BSD ADDRESS
	WORD SLN		;SEGMENT LENGTH
	WORD RES		;RESERVED FOR SOFTWARE
				; ADDITION DEFINITIONS MAY BE ADDED HERE
ENDSTR

***** CHANGE #6; PAGE 18, LINE 17; PAGE 18, LINE 17
	  BIT H40		;H4000 MODE
	  BIT PRM		;PROMISCIOUS MODE
	NXTWRD
	FILLER 24		;NOT USED
	FIELD RTY,12		;ERROR RETRY VALUE
				;**** ADDITIONS MAY BE ADDED HERE
	HWORD FNC		;FUNCTION WHICH INVOKED THIS COMMAND
 ---------------------------------
	  BIT H40		;H4000 MODE
	  BIT PRM		;PROMISCIOUS MODE
	NXTWRD
	FILLER 24		;NOT USED
	FIELD RTY,12		;ERROR RETRY VALUE
				; ADDITIONS MAY BE ADDED HERE
	HWORD FNC		;FUNCTION WHICH INVOKED THIS COMMAND

***** CHANGE #7; PAGE 19, LINE 13; PAGE 19, LINE 13
;	FIELD DA2,16,31		; Low order destination address
;	FIELD SA1,32		; High order source address
;	FIELD SA2,16,31		; Low order source address
	FIELD PTY,16,31		; Protocol type
	FIELD PBA,22,35		; Physical address of receive buffer
				; **** Additions may be added here
	WORD VBA,2		; Virtual address of receive buffer
 ---------------------------------
;	FIELD DA2,16,31		; Low order destination address
;	FIELD SA1,32		; High order source address
;	FIELD SA2,16,31		; Low order source address
	FIELD PTY,16,31		; Protocol type
	FIELD PBA,22,35		; Physical address of receive buffer
				;  Additions may be added here
	WORD VBA,2		; Virtual address of receive buffer

***** CHANGE #8; PAGE 21, LINE 4; PAGE 21, LINE 4

	SUBTTL Local Storage

RSI	(CHNBAS,0)		;BASE OF CHANNEL BLOCK LIST
RS	NIHERE,1		;[7134] NI IN USE
 ---------------------------------

	SUBTTL Local Storage

RSI	(CHNBAS,0)		;BASE OF CHANNEL BLOCK LIST
RSI	(NOKLIN,0)		;[8981] nonzero to pretend no KLNI
RS	NIHERE,1		;[7134] NI IN USE

***** CHANGE #9; PAGE 23, LINE 13; PAGE 23, LINE 13
;	<+2 Success>

NIDSP:	SAVEAC <PS,CM>
	SKIPLE T1		; Less than zero?
	CAXLE T1,NF.MAX		; Or larger than the max?
	 BUG. (HLT,KNIBFC,PHYKNI,SOFT,<PHYKNI - Illegal NI function code>,<<T1,FUNC>>,<

 ---------------------------------
;	<+2 Success>

NIDSP:	SAVEAC <PS,CM>
	SKIPLE T1		; Less than zero?
	CAXLE T1,NF.MAX		; Or larger than the max?
	 BUG.(HLT,KNIBFC,PHYKNI,SOFT,<PHYKNI - Illegal NISRV function code>,<<T1,FUNC>>,<


***** CHANGE #10; PAGE 23, LINE 26; PAGE 23, LINE 26
	TXNE T1,NOCHAN		; Channel block required?
	 JRST (T1)		;  Nope, skip the check
	LOAD PS,PRCHN,(PR)	; Get channel block address
	JUMPLE PS,NIDSP1	; Jump if it's .LE. 0
	OPSTR <CAME PS,>,PSCHK,(PS) ; Does the check word look Kosher?
NIDSP1:	 BUG. (HLT,KNIICA,PHYKNI,SOFT,<PHYKNI - Illegal channel block address>,<<PS,PS>,<PR,PR>>,<

Cause:	The channel block address for this portal is invalid.

 ---------------------------------
	TXNE T1,NOCHAN		; Channel block required?
	 JRST (T1)		;  Nope, skip the check
	LOAD PS,PRCHN,(PR)	; Get channel block address
	JUMPLE PS,NIDSP1	; Jump if it's .LE. 0
	OPSTR <CAME PS,>,PSCHK,(PS) ; Does the check word look Kosher?
NIDSP1:	 BUG.(HLT,KNIICA,PHYKNI,SOFT,<PHYKNI - Illegal channel block address>,<<PS,PS>,<PR,PR>>,<

Cause:	The channel block address for this NIA20 portal is invalid.


***** CHANGE #11; PAGE 24, LINE 26; PAGE 24, LINE 26
NIINI1:
>

; Check for a KLIPA in slot 5

	CONI KNI,T1		; Read the CSR
 ---------------------------------
NIINI1:
>

; Check for a KLIPA in slot 5

	SKIPE NOKLIN		;[8981] Pretenting no KLNI today?
	RET			;[8981] Yes, return now
	CONI KNI,T1		; Read the CSR

***** CHANGE #12; PAGE 24, LINE 82; PAGE 24, LINE 84
	JRST KNIRSC		;10 - RESET CHANNEL
	RET			;11 - PERIODIC CHECK
	JRST DSPBUG		;12 - CHECK UNIT EXISTANCE
	JRST DSPBUG		;13 - EXTRACT ADDRESS FROM CCW WORD

DSPBUG:	BUG. (HLT,KNIIPF,PHYKNI,SOFT,<PHYKNI - Illegal channel dispatch>,,<

Cause:	The KLNI driver was called to perform a PHYSIO function it is not
	capable of doing.
 ---------------------------------
	JRST KNIRSC		;10 - RESET CHANNEL
	RET			;11 - PERIODIC CHECK
	JRST DSPBUG		;12 - CHECK UNIT EXISTANCE
	JRST DSPBUG		;13 - EXTRACT ADDRESS FROM CCW WORD

DSPBUG:	BUG.(HLT,KNIIPF,PHYKNI,SOFT,<PHYKNI - Illegal channel dispatch>,,<

Cause:	The NIA20 driver was called to perform a PHYSIO function it is not
	capable of doing.

***** CHANGE #13; PAGE 29, LINE 38; PAGE 29, LINE 38
	DADD T1,TOTINT		; Accumulate total time spent here
	DMOVEM T1,TOTINT	; Put it in the right place
	UNBRK KNI		; Dismiss the interrupt

repeat 0,<
	BUG. (HLT,KNIUEI,PHYKNI,HARD,<PHYKNI - Unexpected interrupt>,<<T1,CONI>,<T2,CDBSTS>>,<

Cause:	The KLNI has interrupted the processor, however the monitor does not
	beleive that there is a KLNI in this channel slot.  Since the monitor
	determined that this is NOT a KLNI (at system startup time via
	KNITST), this interrupt should NOT have happened.

Action:	Call field service.

 ---------------------------------
	DADD T1,TOTINT		; Accumulate total time spent here
	DMOVEM T1,TOTINT	; Put it in the right place
	UNBRK KNI		; Dismiss the interrupt

repeat 0,<
	BUG.(HLT,KNIUEI,PHYKNI,HARD,<PHYKNI - Unexpected interrupt>,<<T1,CONI>,<T2,CDBSTS>>,<

Cause:	The NIA20 has interrupted the processor, however the monitor does not
	beleive that there is a NIA20 in this channel slot.  Since the monitor
	determined that this is NOT a NIA20 (at system startup time via
	KNITST), this interrupt should NOT have happened.

Action:	Field Service should check out the NIA20 and KL10 hardware.


***** CHANGE #14; PAGE 30, LINE 20; PAGE 30, LINE 20
	IFSKP.
	  MOVE T2,T1		; Save CONI bits for a minute
	  MOVX T1,CI.FQE+CO.BTS	; Get bits for CONO
	  OPSTR <XCT>,PSCNO,(PS); Clear the condition
	  SKIPE NIBUGX		; Skip this if we aren't interested
	  BUG. (INF,KNIFQE,PHYKNI,SOFT,<PHYKNI - Free Queue Error>,,<

Cause:	  The KLNI received a packet for a protocol, and there were no free
	  packets available for that protocol type.
 ---------------------------------
	IFSKP.
	  MOVE T2,T1		; Save CONI bits for a minute
	  MOVX T1,CI.FQE+CO.BTS	; Get bits for CONO
	  OPSTR <XCT>,PSCNO,(PS); Clear the condition
	  SKIPE NIBUGX		; Skip this if we aren't interested
	  BUG.(INF,KNIFQE,PHYKNI,SOFT,<PHYKNI - Free Queue Error>,,<

Cause:	  The NIA20 received a packet for a protocol, and there were no free
	  packets available for that protocol type.

***** CHANGE #15; PAGE 30, LINE 56; PAGE 30, LINE 56

NIINT2:	OPSTR <AOSN T2,>,QHIWD,(T1) ;Wait for interlock
	 JRST NIINT3		; Got it
	CAXG T2,TIMOUT		;Waited long enough?
	 JRST NIINT2		;No, try again
	BUG. (CHK,KNIRIT,PHYKNI,SOFT,<PHYKNI - Response queue interlock timed out>,,<

Cause:	PHYKNI did not succeed in getting the response queue interlock after
	5000. tries.

 ---------------------------------

NIINT2:	OPSTR <AOSN T2,>,QHIWD,(T1) ;Wait for interlock
	 JRST NIINT3		; Got it
	CAXG T2,TIMOUT		;Waited long enough?
	 JRST NIINT2		;No, try again
	BUG.(CHK,KNIRIT,PHYKNI,SOFT,<PHYKNI - Response queue interlock timed out>,,<

Cause:	PHYKNI did not succeed in getting the response queue interlock after
	5000. tries.

Action:	There may be an NIA20 microcode problem.  It is more likely that there
	is a NIA20 hardware problem.  Field Service should check out the NIA20.


***** CHANGE #16; PAGE 31, LINE 85; PAGE 31, LINE 85

; Here when we get a buffer length violation.  This happens when the BSD chain
; contains inconsistent length information with respect to the command block
; or the free queue.

BLVERR:	BUG. (HLT,KNIBLV,PHYKNI,SOFT,<PHYKNI - Buffer length violation>,,<

Cause:	The BSD chain contained inconsistent length information for 
	the transmit or receive command that caused it.
>)

ILLERR:	BUG. (HLT,KNIIEC,PHYKNI,HARD,<PHYKNI - Illegal port error code>,<<T1,CODE>,<T4,CMD>>,<

 ---------------------------------

; Here when we get a buffer length violation.  This happens when the BSD chain
; contains inconsistent length information with respect to the command block
; or the free queue.

BLVERR:	BUG.(HLT,KNIBLV,PHYKNI,SOFT,<PHYKNI - Buffer length violation>,,<

Cause:	The BSD chain contained inconsistent length information for the
	transmit or receive command that caused it.
>)

ILLERR:	BUG.(HLT,KNIIEC,PHYKNI,HARD,<PHYKNI - Illegal port error code>,<<T1,CODE>,<T4,CMD>>,<


***** CHANGE #17; PAGE 31, LINE 99; PAGE 31, LINE 99
Cause:	The port generated a response which contained:

	a. An unknown error code
	b. An inappropriate error code for the command

Data:	CODE - Error Code
	CMD- Command
>)
 ---------------------------------
Cause:	The port generated a response which contained:

	a. An unknown error code
	b. An inappropriate error code for the command


Action:	There may be an NIA20 microcode problem.  It is more likely that there
	is a NIA20 hardware problem.  Field Service should check out the NIA20.

Data:	CODE - Error Code
	CMD - Command
>)

***** CHANGE #18; PAGE 32, LINE 9; PAGE 32, LINE 9

EXCERR:	MOVX T1,UNEXC%		; Get error code
	RET			; And pass it on

CCFERR:	LOAD T1,CMTDR,(CM)	; Get the TDR value
	BUG. (INF,KNICCF,PHYKNI,HARD,<PHYKNI - Carrier check failed>,<<T1,TDR>>,<

Cause:	The NIA module did not detect it's own carrier while it was
	transmitting.

Action:	Make sure that both ends of the transceiver cable are securely
	fastened.  Also check Ethernet cable to see if it is properly
	terminated.

 ---------------------------------

EXCERR:	MOVX T1,UNEXC%		; Get error code
	RET			; And pass it on

CCFERR:	LOAD T1,CMTDR,(CM)	; Get the TDR value
	BUG.(INF,KNICCF,PHYKNI,HARD,<PHYKNI - Carrier check failed>,<<T1,TDR>>,<

Cause:	The NIA20 module did not detect it's own carrier while it was
	transmitting.

Action:	The usual cause is that the Ethernet transceiver cable has come loose.
	Make sure that both ends of the transceiver cable are securely
	fastened.  If this BUGINF is seen on several systems at once, check the
	Ethernet cable to see if it is properly terminated.  If all of these
	check out, the NIA20 hardware should be checked by Field Service.


***** CHANGE #19; PAGE 32, LINE 26; PAGE 32, LINE 28
	MOVX T1,UNCCF%		; Get the error code
	RET

; Here on Collision Detect Check failures

CDFERR:	BUG. (CHK,KNICDF,PHYKNI,HARD,<PHYKNI - Collision detect check failed>,,<

 ---------------------------------
	MOVX T1,UNCCF%		; Get the error code
	RET

; Here on Collision Detect Check failures

CDFERR:	BUG.(CHK,KNICDF,PHYKNI,HARD,<PHYKNI - Collision detect check failed>,,<


***** CHANGE #20; PAGE 32, LINE 34; PAGE 32, LINE 36
Cause:	The H4000 did not assert the collision detect signal shortly after
	completion of a transmission.  (This signal is also known as the
	"Heartbeat" of the H4000).

Action:	Check the transceiver cable and make sure both ends are securely
	fastened (to the H4000 and the NIA box).  Check the H4000.
>,,<DB%NND>)			;[7.1210] 
 ---------------------------------
Cause:	The H4000 did not assert the collision detect signal shortly after
	completion of a transmission.  (This signal is also known as the
	"Heartbeat" of the H4000).

Action:	Check the transceiver cable and make sure both ends are securely
	fastened to both the H4000 and NIA20.  Field Service should also check
	the H4000 or DELNI hardware.
>,,<DB%NND>)			;[7.1210] 

***** CHANGE #21; PAGE 32, LINE 42; PAGE 32, LINE 45
	SETZ T1,		; Indicate successful transmission
	RET

; Here when we get a frame too long error

FTLERR:	BUG. (CHK,KNIFTL,PHYKNI,HARD,<PHYKNI - Frame too long>,,<

Cause:	The NIA module detected that it was transmitting a frame longer
	than 1536. bytes.

Action:	Check the NIA module.
>,,<DB%NND>)			;[7.1210] 
 ---------------------------------
	SETZ T1,		; Indicate successful transmission
	RET

; Here when we get a frame too long error

FTLERR:	BUG.(CHK,KNIFTL,PHYKNI,HARD,<PHYKNI - Frame too long>,,<

Cause:	The NIA20 port module detected that it was transmitting a frame longer
	than 1536. bytes.

Action:	Field Service should check the NIA20.
>,,<DB%NND>)			;[7.1210] 

***** CHANGE #22; PAGE 32, LINE 56; PAGE 32, LINE 59
	RET

; Here when a remote station fails to defer to us (ie: a late collision).

RFDERR:	LOAD T1,CMTDR,(CM)	; Get the TDR
	BUG. (INF,KNIRFD,PHYKNI,HARD,<PHYKNI - Remote failure to defer>,<<T1,TDR>>,<

Cause:	A collision was detected after the NIA had "acquired" control of the
	Ethernet cable.  This is also known as a "late collision".

	A collision may only occur during the transmission of the preamble
	of a frame.  This problem occurs when the collision is detected
	after the preamble has been transmitted.

Action:	Check the Ethernet cable.  The maximum distance between any two
	stations on the cable may not exceed 1500. meters.  A longer cable
	may result in late collisions of this sort.  This problem may also
	be caused by a malfunctioning Ethernet station.  Check the other
	Ethernet stations on the cable to see if they are having similar
	problems.
 ---------------------------------
	RET

; Here when a remote station fails to defer to us (ie: a late collision).

RFDERR:	LOAD T1,CMTDR,(CM)	; Get the TDR
	BUG.(INF,KNIRFD,PHYKNI,HARD,<PHYKNI - Remote failure to defer>,<<T1,TDR>>,<

Cause:	A collision was detected after the NIA20 had "acquired" control of the
	Ethernet cable.  This is also known as a "late collision".

	A collision may only occur during the transmission of the preamble of a
	frame.  This problem occurs when the collision is detected after the
	preamble has been transmitted.

Action:	Field Service should check the Ethernet cable.  The maximum distance
	between any two stations on the cable may not exceed 1500. meters.  A
	longer cable may result in late collisions of this sort.  This problem
	may also be caused by a malfunctioning Ethernet station.  Check the
	other Ethernet stations on the cable to see if they are having similar
	problems.

***** CHANGE #23; PAGE 32, LINE 81; PAGE 32, LINE 84
	RET

; Here when we attempt to transmit a frame with less than 46. bytes of data
; and we didn't specify padding.

FTSERR:	BUG. (HLT,KNIFTS,PHYKNI,SOFT,<PHYKNI - Frame too short>,,<

Cause:	The port was told to transmit a frame with less than 46. bytes of
	user data and the pad flag (CMPAD) was not set.  This should have
	been detected by NISND.
>)
 ---------------------------------
	RET

; Here when we attempt to transmit a frame with less than 46. bytes of data
; and we didn't specify padding.

FTSERR:	BUG.(HLT,KNIFTS,PHYKNI,SOFT,<PHYKNI - Frame too short>,,<

Cause:	The port was told to transmit a frame with less than 46. bytes of user
	data and the pad flag (CMPAD) was not set.  This should have been
	detected by NISND.
>)

***** CHANGE #24; PAGE 33, LINE 5; PAGE 33, LINE 5
	SUBTTL Here to handle receive errors

; Here when we get a NIA receive buffer overrun

DOVERR:	BUG. (CHK,KNIDOV,PHYKNI,HARD,<PHYKNI - NIA buffer overrun>,,<

Cause:	The NIA module did not have enough free space to store an
	incoming datagram.
>,,<DB%NND>)			;[7.1210] 
 ---------------------------------
	SUBTTL Here to handle receive errors

; Here when we get a NIA receive buffer overrun

DOVERR:	BUG.(CHK,KNIDOV,PHYKNI,HARD,<PHYKNI - NIA20 buffer overrun>,,<

Cause:	The NIA20 hardware did not have enough free space to store an
	incoming datagram.

Action:	It is likely that there is a NIA20 hardware problem.  Field Service
	should check out the NIA20.

>,,<DB%NND>)			;[7.1210] 

***** CHANGE #25; PAGE 34, LINE 32; PAGE 34, LINE 32
	TXNN P1,CI.CPE		; CRAM parity error?
	 JRST HRDERR		;  No, treat MBUS, EBUS, DATA MVR errors special

	CAXL T1,MINCPE		; Before the first planned CRAM parity error?
	 JRST KNIPPE		;  No, must be a micro-stopcode

 ---------------------------------
	TXNN P1,CI.CPE		; CRAM parity error?
	 JRST HRDERR		;  No, treat MBUS, EBUS, DATA MVR errors special

	CAXL T1,MINCPE		; Before the first planned CRAM parity error?
	 JRST KNIPPE		;  No, must be a micro-stopcode


***** CHANGE #26; PAGE 34, LINE 42; PAGE 35, LINE 10
	MOVE P2,T1		; Save the PC
	CALL RDCRAM		; Read the CRAM location
	 SETO T1,		; !?! Port running!?!
	STOR T1,PSCRL,(PS)	; Save the MSB in the PSB
	STOR T2,PSCRR,(PS)	; Save the LSB in the PSB
	BUG. (CHK,KNIPER,PHYKNI,HARD,<PHYKNI - CRAM parity error>,<<P1,CONI>,<P2,ADDR>,<T1,LOCMSB>,<T2,LOCLSB>>,<

Cause:	The KLNI has detected a parity error in it's Control RAM.  This is
	a hardware problem.  

Action:	Reload the ucode.  If the problem persists call field service.

 ---------------------------------
	MOVE P2,T1		; Save the PC
	CALL RDCRAM		; Read the CRAM location
	 SETO T1,		; !?! Port running!?!
	STOR T1,PSCRL,(PS)	; Save the MSB in the PSB
	STOR T2,PSCRR,(PS)	; Save the LSB in the PSB
	BUG.(CHK,KNIPER,PHYKNI,HARD,<PHYKNI - CRAM parity error>,<<P1,CONI>,<P2,ADDR>,<T1,LOCMSB>,<T2,LOCLSB>>,<

Cause:	The KLNI has detected a unplanned parity error in it's Control RAM.  

Action:	There is a NIA20 hardware problem.  Reload the NIA20 microcode.  Field
	Service should check out the NIA20.


***** CHANGE #27; PAGE 34, LINE 57; PAGE 35, LINE 25
	LOCMSB & LOCLSB - Contents of memory location
>,,<DB%NND>)			;[7.1210] 
	CALL STRLD		; Set state to RELOAD and start KNILDR
	CALLRET LOGERR		; Log the problem and return

HRDERR:	BUG. (CHK,KNIHED,PHYKNI,HARD,<PHYKNI - Hard error detected>,<<P1,CONI>,<T1,PC>>,<

Cause:	MBUS ERROR, or EBUS PARITY ERROR was detected.  This is a KLNI
	hardware problem.  The address (ADDR) and it's contents (LOCMSB 
	and LOCLSB) are printed out.

Action:	Call field service.

 ---------------------------------
	LOCMSB & LOCLSB - Contents of memory location
>,,<DB%NND>)			;[7.1210] 
	CALL STRLD		; Set state to RELOAD and start KNILDR
	CALLRET LOGERR		; Log the problem and return

HRDERR:	BUG.(CHK,KNIHED,PHYKNI,HARD,<PHYKNI - Hard error detected>,<<P1,CONI>,<T1,PC>>,<

Cause:	The NIA20 has detected MBUS ERROR or EBUS PARITY ERROR.

Action:	This is a NIA20 hardware problem.  The address (ADDR) and it's contents
	(LOCMSB and LOCLSB) are printed out.  Call Field Service and have the
	NIA20 checked.  


***** CHANGE #28; PAGE 36, LINE 3; PAGE 37, LINE 3
	TABEND

	SUBTTL Individual Planned CRAM Parity Errors

DIEUPE:	BUG. (INF,KNIUPE,PHYKNI,HARD,<PHYKNI - NIA20 unknown planned CRAM parity error>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<

Cause:	The NIA20 got a CRAM parity error in the range of 7750 to 7777.  This
	particular error falls into this range, but is not known to TOPS-20.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Contact Field Service.

 ---------------------------------
	TABEND

	SUBTTL Individual Planned CRAM Parity Errors

DIEUPE:	BUG.(INF,KNIUPE,PHYKNI,HARD,<PHYKNI - NIA20 unknown planned CRAM parity error>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<

Cause:	The NIA20 got a CRAM parity error in the range of 7750 to 7777.  This
	particular error falls into the range of planned CRAM parity errors,
	but is not known to TOPS-20.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Call Field Service and have the NIA20 checked.


***** CHANGE #29; PAGE 36, LINE 20; PAGE 37, LINE 21
	LOGOU1 - Channel logout word 1
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIEIPE:	BUG. (INF,KNIIPE,PHYKNI,HARD,<PHYKNI - Internal port error>,<<P1,CSR>,<P2,VERSION>,<T1,ADDR>>,<

 ---------------------------------
	LOGOU1 - Channel logout word 1
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIEIPE:	BUG.(INF,KNIIPE,PHYKNI,HARD,<PHYKNI - Internal NIA20 port error>,<<P1,CSR>,<P2,VERSION>,<T1,ADDR>>,<


***** CHANGE #30; PAGE 36, LINE 30; PAGE 37, LINE 31
	but the end result is that the function did not occur correctly or was
	not logical.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Contact Field Service.

 ---------------------------------
	but the end result is that the function did not occur correctly or was
	not logical.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Call Field Service and have the NIA20 checked.  It is unlikely, but
	possible, that this can be caused by a NIA20 microcode bug.


***** CHANGE #31; PAGE 36, LINE 39; PAGE 37, LINE 41
	VERSION - Version number of the NIA20 microcode
	ADDR - Address of parity error
>,,<DB%NND>)			;[7.1210] 
	RET

DIEFST:	BUG. (INF,KNIFST,PHYKNI,HARD,<PHYKNI - Failed self test>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<

 ---------------------------------
	VERSION - Version number of the NIA20 microcode
	ADDR - Address of parity error
>,,<DB%NND>)			;[7.1210] 
	RET

DIEFST:	BUG.(INF,KNIFST,PHYKNI,HARD,<PHYKNI - NIA20 failed self test>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<


***** CHANGE #32; PAGE 36, LINE 49; PAGE 37, LINE 51
	mover/formatter).  It also performs a self test when it is first
	started.  In one of those cases, the self test failed.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Contact Field Service.

 ---------------------------------
	mover/formatter).  It also performs a self test when it is first
	started.  In one of those cases, the self test failed.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Call Field Service and have the NIA20 checked.


***** CHANGE #33; PAGE 37, LINE 2; PAGE 38, LINE 2
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIEEPE:	BUG. (INF,KNIEPE,PHYKNI,HARD,<PHYKNI - EBUS parity error>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<

 ---------------------------------
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIEEPE:	BUG.(INF,KNIEPE,PHYKNI,HARD,<PHYKNI - NIA20 detected EBUS parity error>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<


***** CHANGE #34; PAGE 37, LINE 9; PAGE 38, LINE 9
Cause:	The NIA20 received a word with bad parity from the EBUS.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Contact Field Service.

 ---------------------------------
Cause:	The NIA20 received a word with bad parity from the EBUS.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Call Field Service and have the NIA20 and KL10 hardware checked.


***** CHANGE #35; PAGE 37, LINE 19; PAGE 38, LINE 19
	LOGOU1 - Channel logout word 1
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIEPIE:	BUG. (INF,KNIPIE,PHYKNI,HARD,<PHYKNI - PLI parity error>,,<

 ---------------------------------
	LOGOU1 - Channel logout word 1
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIEPIE:	BUG.(INF,KNIPIE,PHYKNI,HARD,<PHYKNI - NIA20 detected PLI parity error>,,<


***** CHANGE #36; PAGE 37, LINE 27; PAGE 38, LINE 27
Cause:	More than five parity errors occurred when reading data over the PLI
	interface.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Contact Field Service.
>,,<DB%NND>)			;[7.1210] 
	RET

DIECPE:	BUG. (INF,KNICPE,PHYKNI,HARD,<PHYKNI - CBUS parity error>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<

 ---------------------------------
Cause:	More than five parity errors occurred when reading data over the PLI
	interface.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Call Field Service and have the NIA20 checked.
>,,<DB%NND>)			;[7.1210] 
	RET

DIECPE:	BUG.(INF,KNICPE,PHYKNI,HARD,<PHYKNI - NIA20 detected CBUS parity error>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<


***** CHANGE #37; PAGE 37, LINE 38; PAGE 38, LINE 38
Cause:	The NIA20 detected bad parity for data that was read over the CBUS.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Contact Field Service.

 ---------------------------------
Cause:	The NIA20 detected bad parity for data that was read over the CBUS.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Call Field Service and have the NIA20 and KL10 hardware checked.


***** CHANGE #38; PAGE 38, LINE 2; PAGE 39, LINE 2
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIEDPE:	BUG. (INF,KNIDPE,PHYKNI,HARD,<PHYKNI - NIA20 data path error>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<

 ---------------------------------
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIEDPE:	BUG.(INF,KNIDPE,PHYKNI,HARD,<PHYKNI - NIA20 data path error>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<


***** CHANGE #39; PAGE 38, LINE 9; PAGE 39, LINE 9
Cause:	The threshold (5) for data mover parity errors was exceeded.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Contact Field Service.

 ---------------------------------
Cause:	The threshold (5) for data mover parity errors was exceeded.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Call Field Service and have the NIA20 hardware checked.


***** CHANGE #40; PAGE 38, LINE 19; PAGE 39, LINE 19
	LOGOU1 - Channel logout word 1
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIECAE:	BUG. (INF,KNICAE,PHYKNI,HARD,<PHYKNI - CBUS available timeout>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<

 ---------------------------------
	LOGOU1 - Channel logout word 1
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIECAE:	BUG.(INF,KNICAE,PHYKNI,HARD,<PHYKNI - NIA20 got CBUS available timeout>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<


***** CHANGE #41; PAGE 38, LINE 27; PAGE 39, LINE 27
Cause:	The NIA20 was unable to acquire control of the CBUS within 50
	microseconds from the start of a CBUS request.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Contact Field Service.

 ---------------------------------
Cause:	The NIA20 was unable to acquire control of the CBUS within 50
	microseconds from the start of a CBUS request.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Call Field Service and have the NIA20 and KL10 hardware checked.


***** CHANGE #42; PAGE 38, LINE 37; PAGE 39, LINE 37
	LOGOU1 - Channel logout word 1
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIEERE:	BUG. (INF,KNIERE,PHYKNI,HARD,<PHYKNI - EBUS request timeout>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<

 ---------------------------------
	LOGOU1 - Channel logout word 1
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIEERE:	BUG.(INF,KNIERE,PHYKNI,HARD,<PHYKNI - NIA20 got EBUS request timeout>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<


***** CHANGE #43; PAGE 38, LINE 45; PAGE 39, LINE 45
Cause:	The NIA20 was unable to get control of the EBUS within 20 milliseconds
	after making a PI request.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Contact Field Service.

 ---------------------------------
Cause:	The NIA20 was unable to get control of the EBUS within 20 milliseconds
	after making a PI request.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Call Field Service and have the NIA20 and KL10 hardware checked.


***** CHANGE #44; PAGE 39, LINE 2; PAGE 40, LINE 2
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIEGCE:	BUG. (INF,KNIGCE,PHYKNI,HARD,<PHYKNI - Grant CSR timeout>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<

 ---------------------------------
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIEGCE:	BUG.(INF,KNIGCE,PHYKNI,HARD,<PHYKNI - NIA20 got Grant CSR timeout>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<


***** CHANGE #45; PAGE 39, LINE 10; PAGE 40, LINE 10
Cause:	The NIA20 was unable to acquire control of the CSR (CONI word) within
	10 milliseconds after requesting it.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Contact Field Service.

 ---------------------------------
Cause:	The NIA20 was unable to acquire control of the CSR (CONI word) within
	10 milliseconds after requesting it.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Call Field Service and have the NIA20 and KL10 hardware checked.


***** CHANGE #46; PAGE 39, LINE 20; PAGE 40, LINE 20
	LOGOU1 - Channel logout word 1
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIESWC:	BUG. (INF,KNISWC,PHYKNI,HARD,<PHYKNI - Channel short word count>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<

 ---------------------------------
	LOGOU1 - Channel logout word 1
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIESWC:	BUG.(INF,KNISWC,PHYKNI,HARD,<PHYKNI - NIA20 short word count>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<


***** CHANGE #47; PAGE 39, LINE 28; PAGE 40, LINE 28
Cause:	When the NIA20 completed a CBUS transfer, the channel had a short word
	count error.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Contact Field Service.

 ---------------------------------
Cause:	When the NIA20 completed a CBUS transfer, the channel had a short word
	count error.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Call Field Service and have the NIA20 and KL10 hardware checked.


***** CHANGE #48; PAGE 39, LINE 38; PAGE 40, LINE 38
	LOGOU1 - Channel logout word 1
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIESCE:	BUG. (INF,KNISCE,PHYKNI,HARD,<PHYKNI - Spurious channel error>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<

 ---------------------------------
	LOGOU1 - Channel logout word 1
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIESCE:	BUG.(INF,KNISCE,PHYKNI,HARD,<PHYKNI - NIA20 spurious channel error>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<


***** CHANGE #49; PAGE 39, LINE 48; PAGE 40, LINE 48
	error occurs after the threshold (5) of spurious channel errors has
	been exceeded.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Contact Field Service.

 ---------------------------------
	error occurs after the threshold (5) of spurious channel errors has
	been exceeded.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Call Field Service and have the NIA20 and KL10 hardware checked.


***** CHANGE #50; PAGE 40, LINE 2; PAGE 41, LINE 2
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIESTA:	BUG. (INF,KNISTA,PHYKNI,HARD,<PHYKNI - NIA20 spurious transmit attention>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<

Cause:	The NIA module set the PLI transmit attention bit, but there was no
	transmit pending according to the microcode.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Contact Field Service.

 ---------------------------------
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIESTA:	BUG.(INF,KNISTA,PHYKNI,HARD,<PHYKNI - NIA20 spurious transmit attention>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<

Cause:	The NIA20 module set the PLI transmit attention bit, but there was no
	transmit pending according to the microcode.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Call Field Service and have the NIA20 hardware checked.


***** CHANGE #51; PAGE 40, LINE 19; PAGE 41, LINE 19
	LOGOU1 - Channel logout word 1
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIEUBE:	BUG. (INF,KNIUBE,PHYKNI,HARD,<PHYKNI - NIA20 used buffer list parity error>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<

Cause:	The port received a PLI parity error while reading the NIA module's
	user buffer list.  This error is only reported after a threshold (5)
	for this type of error has been exceeded.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Contact Field Service.

 ---------------------------------
	LOGOU1 - Channel logout word 1
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIEUBE:	BUG.(INF,KNIUBE,PHYKNI,HARD,<PHYKNI - NIA20 used buffer list parity error>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<

Cause:	The NIA20 port received a PLI parity error while reading the NIA
	module's user buffer list.  This error is only reported after a
	threshold (5) for this type of error has been exceeded.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Call Field Service and have the NIA20 hardware checked.


***** CHANGE #52; PAGE 41, LINE 2; PAGE 42, LINE 2
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIEFBE:	BUG. (INF,KNIFBE,PHYKNI,HARD,<PHYKNI - NIA20 free buffer list parity error>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<

Cause:	The NIA receive status indicated that there was a free buffer list
	parity error.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Contact Field Service.

 ---------------------------------
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIEFBE:	BUG.(INF,KNIFBE,PHYKNI,HARD,<PHYKNI - NIA20 free buffer list parity error>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<

Cause:	The NIA20 receive status indicated that there was a free buffer list
	parity error.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Call Field Service and have the NIA20 hardware checked.


***** CHANGE #53; PAGE 41, LINE 19; PAGE 42, LINE 19
	LOGOU1 - Channel logout word 1
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIEXPE:	BUG. (INF,KNIXPE,PHYKNI,HARD,<PHYKNI - NIA20 transmit buffer parity error>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<

Cause:	The NIA transmit status indicated a transmit buffer parity error.  This
	error is not reported until a threshold (5) of this type of error has
	been exceeded.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Contact Field Service.

 ---------------------------------
	LOGOU1 - Channel logout word 1
	LOGOU2 - Channel logout word 2
>,,<DB%NND>)			;[7.1210] 
	RET

DIEXPE:	BUG.(INF,KNIXPE,PHYKNI,HARD,<PHYKNI - NIA20 transmit buffer parity error>,<<P1,CSR>,<T1,ADDR>,<T3,LOGOU1>,<T4,LOGOU2>>,<

Cause:	The NIA20 transmit status indicated a transmit buffer parity error.
	This error is not reported until a threshold (5) of this type of error
	has been exceeded.

	The NIA20 will be dumped and restarted by KNILDR.

Action:	Call Field Service and have the NIA20 hardware checked.


***** CHANGE #54; PAGE 42, LINE 44; PAGE 43, LINE 44
	OPSTR <XCT>,PSCNI,(PS)	; Read the status
	MOVE P1,T1		; Put it in a safe place
	CALL NISTP		; Stop the channel gracefully
	CALL RDLAR		; Read the LAR
	 SETO T1,		; Port is still running!  Use a funny PC...
	BUG. (CHK,KNISTP,PHYKNI,SOFT,<PHYKNI - KLNI stopped>,<<P1,CONI>,<T1,LAR>>,<

Cause:	No response from KLNI after 5 seconds.

 ---------------------------------
	OPSTR <XCT>,PSCNI,(PS)	; Read the status
	MOVE P1,T1		; Put it in a safe place
	CALL NISTP		; Stop the channel gracefully
	CALL RDLAR		; Read the LAR
	 SETO T1,		; Port is still running!  Use a funny PC...
	BUG.(CHK,KNISTP,PHYKNI,SOFT,<PHYKNI - NIA20 stopped>,<<P1,CONI>,<T1,LAR>>,<

Cause:	No response from NIA20 after 5 seconds.

Action:	Unless the NIA20 has been halted by hand, call Field Service and have
	the NIA20 hardware checked.


***** CHANGE #55; PAGE 44, LINE 37; PAGE 45, LINE 37
	MOVX T1,<GJ%SHT+GJ%OLD>	; Use short form GTJFN, file must exist
	MOVEI T3,1		; Use CCL entry point
	SETZ T4,		; Don't care about fork number
	CALLX (MSEC1,RUNDII)	; Run the program to completion
	IFNSK.
	  BUG. (CHK,KNICFF,PHYKNI,SOFT,<PHYKNI - Cannot reload the KLNI>,<<T1,ERROR>>,<

 ---------------------------------
	MOVX T1,<GJ%SHT+GJ%OLD>	; Use short form GTJFN, file must exist
	MOVEI T3,1		; Use CCL entry point
	SETZ T4,		; Don't care about fork number
	CALLX (MSEC1,RUNDII)	; Run the program to completion
	IFNSK.
	  BUG.(CHK,KNICFF,PHYKNI,SOFT,<PHYKNI - Cannot reload the NIA20>,<<T1,ERROR>>,<


***** CHANGE #56; PAGE 44, LINE 67; PAGE 45, LINE 67

	LOAD T1,PSSST,(PS)	; Get the substate
	CAXN T1,UNS.RN		; Is the KLNI now running?
	 RET			;  Yes, all done!

	BUG. (CHK,KNIRLF,PHYKNI,SOFT,<PHYKNI - KLNI Reload Failed>,<<T1,STATE>>,<

Cause:	KNILDR ran, but failed to reload the KLNI for some reason.

 ---------------------------------

	LOAD T1,PSSST,(PS)	; Get the substate
	CAXN T1,UNS.RN		; Is the KLNI now running?
	 RET			;  Yes, all done!

	BUG.(CHK,KNIRLF,PHYKNI,SOFT,<PHYKNI - NIA20 Reload Failed>,<<T1,STATE>>,<

Cause:	KNILDR ran, but failed to reload the NIA20 for some reason.

Action:	Look at any possible KNILDR output.  Call Field Service and have the
	NIA20 hardware checked.


***** CHANGE #57; PAGE 53, LINE 47; PAGE 54, LINE 47
	IFIW RTN		;.BYILL - Illegal byte size, non-skip return
	IFIW BLDBS3		;.BYOK  - Byte size is fine, proceed normally
	IFIW BLDBS2		;.BYCSZ - Check the size manually
	IFIW KNIBT1		;Illegal BYTAB entry

KNIBT1:	BUG. (HLT,KNIBTB,PHYKNI,SOFT,<PHYKNI - Bad BYTAB entry>,<<P2,ENTRY>,<T1,BYTPTR>>,<
	
 ---------------------------------
	IFIW RTN		;.BYILL - Illegal byte size, non-skip return
	IFIW BLDBS3		;.BYOK  - Byte size is fine, proceed normally
	IFIW BLDBS2		;.BYCSZ - Check the size manually
	IFIW KNIBT1		;Illegal BYTAB entry

KNIBT1:	BUG.(HLT,KNIBTB,PHYKNI,SOFT,<PHYKNI - Bad BYTAB entry>,<<P2,ENTRY>,<T1,BYTPTR>>,<
	

***** CHANGE #58; PAGE 63, LINE 40; PAGE 64, LINE 40
	LOAD T1,C1FNC,(CM)	; Get the function code
	CAXN T1,NF.RDC		; Is it "read channel counters"
	 JRST RCRCC		;  Yes, process channel counters
	CAXN T1,NF.RPC		; Read portal counters?
	 JRST RCRPC		;  Yes, go to it
	BUG. (HLT,KNIICF,PHYKNI,SOFT,<PHYKNI - Illegal read counters function>,,<

 ---------------------------------
	LOAD T1,C1FNC,(CM)	; Get the function code
	CAXN T1,NF.RDC		; Is it "read channel counters"
	 JRST RCRCC		;  Yes, process channel counters
	CAXN T1,NF.RPC		; Read portal counters?
	 JRST RCRPC		;  Yes, go to it
	BUG.(HLT,KNIICF,PHYKNI,SOFT,<PHYKNI - Illegal read counters function>,,<


***** CHANGE #59; PAGE 65, LINE 26; PAGE 66, LINE 26
	STOR T1,PCBYS,(T3)
	LOAD T1,PRDGS,(P1)	; Datagrams sent
	STOR T1,PCDGS,(T3)

; Fetch the lost buffers count from the appropriate place in the read counters
; block.  **** Note that this code may not work for unknown protocol queue****

 ---------------------------------
	STOR T1,PCBYS,(T3)
	LOAD T1,PRDGS,(P1)	; Datagrams sent
	STOR T1,PCDGS,(T3)

; Fetch the lost buffers count from the appropriate place in the read counters
; block.   Note that this code may not work for unknown protocol queue


***** CHANGE #60; PAGE 71, LINE 44; PAGE 72, LINE 44
; See if this is a promiscuous or unknown protocol type portal.  If so,
; pass on the datagram.

	LOADE T3,PRPRO,(PR)	; Get the protocol type
	JUMPL T3,MSGAV2		; Jump if it's promiscuous or unknown

 ---------------------------------
; See if this is a promiscuous or unknown protocol type portal.  If so,
; pass on the datagram.

	LOADE T3,PRPRO,(PR)	; Get the protocol type
	JUMPL T3,MSGAV2		; Jump if it's promiscuous or unknown


***** CHANGE #61; PAGE 71, LINE 59; PAGE 73, LINE 15
	  OPSTR <DMOVE T3,>,RDSA1,(CM) ; Get source Ethernet address

	  LOAD T1,RDPTY,(CM)	; Get protocol type
	  CALL SWAB		; Normalize it

	  BUG. (INF,KNIDMD,NISRV,SOFT,<Portal not enabled for this multicast>,<<P1,HIDST>,<P2,LODST>,<T3,HISRC>,<T4,LOSRC>>,<

Cause:  A portal received a multicast frame on an address it wasn't enabled
	for.  The frame will be discarded, and the buffer will be re-used.

 ---------------------------------
	  OPSTR <DMOVE T3,>,RDSA1,(CM) ; Get source Ethernet address

	  LOAD T1,RDPTY,(CM)	; Get protocol type
	  CALL SWAB		; Normalize it

	  BUG.(INF,KNIDMD,NISRV,SOFT,<Portal not enabled for this multicast>,<<P1,HIDST>,<P2,LODST>,<T3,HISRC>,<T4,LOSRC>>,<

Cause:  A portal received a multicast frame on an address it wasn't enabled
	for.  The frame will be discarded, and the buffer will be re-used.
	A KNIDM1 BUGINF will follow with the protocol type.

Action:	No immediate action is required.  However, if this BUGINF persists,
	examine the additional data and try to determine by the protocol type
	and source and destination addresses what is going on.  It is possible,
	but very unlikely, that some sort of NIA20 hardware problem is at
	fault.


***** CHANGE #62; PAGE 71, LINE 70; PAGE 73, LINE 33
Data:	HIDST - High order destination address
	LODST - Low order destination address
	HISRC - High order source address
	LOSRC - Low order source address
>)
	  BUG. (INF,KNIDM1,NISRV,SOFT,<KNIDMD continued>,<<T1,PROTO>>,<

Cause:	Additional data for KNIDMD.

 ---------------------------------
Data:	HIDST - High order destination address
	LODST - Low order destination address
	HISRC - High order source address
	LOSRC - Low order source address
>)
	  BUG.(INF,KNIDM1,NISRV,SOFT,<KNIDMD continued>,<<T1,PROTO>>,<

Cause:	Additional data for KNIDMD.

Action:	See KNIDMD.


***** CHANGE #63; PAGE 71, LINE 82; PAGE 73, LINE 47
	ENDIF.

	LOAD T1,PRFQA,(PR)	; Get PTT entry address
	LOAD T1,PTVIR,(T1)	; Get virt address of free queue header
	CALLRET PUTQUE		; Put this buffer back on the free list

 ---------------------------------
	ENDIF.

	LOAD T1,PRFQA,(PR)	; Get PTT entry address
	LOAD T1,PTVIR,(T1)	; Get virt address of free queue header
	CALLRET PUTQUE		; Put this buffer back on the free list


***** CHANGE #64; PAGE 72, LINE 34; PAGE 75, LINE 34
	CALL RXRCOR		; Return it
	RETSKP			; Give good return

;NON-BSD SENT

DGSNT5:	BUG. (HLT,KNINBS,PHYKNI,SOFT,<PHYKNI - Non-BSD datagram sent>,<<CM,BUFFER>>,<

Cause:	A NON-BSD style datagram was sent. The driver does not send this
	style.

 ---------------------------------
	CALL RXRCOR		; Return it
	RETSKP			; Give good return

;NON-BSD SENT

DGSNT5:	BUG.(HLT,KNINBS,PHYKNI,SOFT,<PHYKNI - Non-BSD datagram sent>,<<CM,BUFFER>>,<

Cause:	A NON-BSD style datagram was sent. The driver does not send this style.


***** CHANGE #65; PAGE 73, LINE 69; PAGE 76, LINE 69

	RETSKP			; Good return

BADVAR:	LOAD T2,PSVAR,(PS)	; Get the monitor's copy of the variables.

	BUG. (CHK,KNIVAR,PHYKNI,SOFT,<Monitor variables do not match KLNI variables>,<<T1,KLNI>,<T2,MON>>,<

Cause:	PHYKNI just read some status variables from the KLNI and found them 
	different from the shadow copies stored in the monitor.

Action:	The port will be shutdown.

 ---------------------------------

	RETSKP			; Good return

BADVAR:	LOAD T2,PSVAR,(PS)	; Get the monitor's copy of the variables.

	BUG.(CHK,KNIVAR,PHYKNI,SOFT,<Monitor variables do not match NIA20 variables>,<<T1,KLNI>,<T2,MON>>,<

Cause:	PHYKNI just read some status variables from the NIA20 and found them
	different from the shadow copies stored in the monitor.  The port will
	be shutdown.

Action:	It is possible that there is a monitor software or NIA20 microcode
	problem.  If this BUGCHK continues and is reprooducable, change this
	CHGCHK to a BUGHLT and send in an SPR along with the dump and how to
	reproduce the problem.


***** CHANGE #66; PAGE 73, LINE 87; PAGE 76, LINE 91
	STOR CM,PSRSI,(PS)	; Give buffer back
	RET

BADADR:	LOAD T3,PSHAD,(PS)	; Get the monitor's copy of the address
	LOAD T4,PSLAD,(PS)	; "
	BUG. (CHK,KNIADR,PHYKNI,SOFT,<Monitor address does not match KLNI address>,<<T1,KLNHIO>,<T2,KLNLO>,<T3,MONHIO>,<T4,MONLO>>,<

Cause:	PHYKNI just read the Ethernet address from the KLNI and found it 
	different from the shadow copy stored in the monitor.

Action:	The port will be shutdown.

 ---------------------------------
	STOR CM,PSRSI,(PS)	; Give buffer back
	RET

BADADR:	LOAD T3,PSHAD,(PS)	; Get the monitor's copy of the address
	LOAD T4,PSLAD,(PS)	; "
	BUG.(CHK,KNIADR,PHYKNI,SOFT,<Monitor address does not match NIA20 address>,<<T1,KLNHIO>,<T2,KLNLO>,<T3,MONHIO>,<T4,MONLO>>,<

Cause:	PHYKNI just read the Ethernet address from the KLNI and found it
	different from the shadow copy stored in the monitor.  The port will be
	shutdown.

Action:	It is possible that there is a monitor software or NIA20 microcode
	problem.  If this BUGCHK continues and is reprooducable, change this
	BUGCHK to a BUGHLT and send in an SPR along with the dump and how to
	reproduce the problem.


***** CHANGE #67; PAGE 76, LINE 20; PAGE 79, LINE 20
	MOVX T1,NF.CLO		; Indicate that all commands are flushed
	CALL DLLCBK		; And inform the user
	MOVE T1,CM		; Get address of command block
	CALLRET RELCOR		; Release the command block

BADFLS:	BUG. (HLT,KNIIRC,PHYKNI,SOFT,<Illegal status on close>,<<T1,STATUS>>,<

Cause:	The status field contained an unexpected value upon return from the
	close function.

 ---------------------------------
	MOVX T1,NF.CLO		; Indicate that all commands are flushed
	CALL DLLCBK		; And inform the user
	MOVE T1,CM		; Get address of command block
	CALLRET RELCOR		; Release the command block

BADFLS:	BUG.(HLT,KNIIRC,PHYKNI,SOFT,<PHYKNI - Illegal status on close>,<<T1,STATUS>>,<

Cause:	The NIA20 driver has discovered that status field contained an
	unexpected value upon return from the close (command flush) function.


***** CHANGE #68; PAGE 86, LINE 25; PAGE 89, LINE 25
	 RET			;  Port running!?!??
	STOR T1,PSUMA,(PS)	; Save major version #
	STOR T2,PSUMI,(PS)	; Save minor version #
	STOR T3,PSUED,(PS)	; Save the edit #
	CAMGE T3,UCVEDT		;[7.1221] Acceptable edit level?
	BUG. (CHK,KNIVER,PHYKNI,SOFT,<Bad KLNI microcode version>,<<T3,BADEDT>,<<XADDR. UCVEDT>,GODEDT>>,<

Cause:	PHYKNI has read the microcode edit number from the KLNI, and has
	determined that it is below the minimum revision level required for
	proper port/driver operation. The NI is started anyway.

Action:	Obtain the proper version of the KLNI microcode.  The minimum
	acceptable version is indicated by the second additional data item.

Data:	BADEDT - Edit number read from the KLNI
	GODEDT - Edit number we require
>,,<DB%NND>)			;[7.1210][7.1221] BUGCHK, but start the KLNI
	MOVX T1,CO.CPT		; Get ready to
 ---------------------------------
	 RET			;  Port running!?!??
	STOR T1,PSUMA,(PS)	; Save major version #
	STOR T2,PSUMI,(PS)	; Save minor version #
	STOR T3,PSUED,(PS)	; Save the edit #
	CAMGE T3,UCVEDT		;[7.1221] Acceptable edit level?
	BUG.(CHK,KNIVER,PHYKNI,SOFT,<Bad NIA20 microcode version>,<<T3,BADEDT>,<<XADDR. UCVEDT>,GODEDT>>,<

Cause:	The NIA20 port driver has read the microcode edit number from the
	NIA20, and has determined that it is below the minimum revision level
	required for proper port/driver operation.  The NI is started anyway.

Action:	Obtain the proper version of the NIA20 microcode, and install it into
	SYSTEM:KNILDR.EXE.  The minimum acceptable version is indicated by the
	second additional data item.

Data:	BADEDT - Edit number read from the KLNI
	GODEDT - Edit number we require
>,,<DB%NND>)			;[7.1210][7.1221] BUGCHK, but start the KLNI

	MOVX T1,CO.CPT		; Get ready to

***** CHANGE #69; PAGE 86, LINE 75; PAGE 90, LINE 39
	  SOJG T2,TOP.		; Continue checking
	ENDDO.
	JUMPE T2,INIERR		; Go away if timed out
	OPSTR XCT,PSCQA,(PS)	; Start up the command queue
	RETSKP			; Indicate success

 ---------------------------------
	  SOJG T2,TOP.		; Continue checking
	ENDDO.
	JUMPE T2,INIERR		; Go away if timed out
	OPSTR XCT,PSCQA,(PS)	; Start up the command queue
	RETSKP			; Indicate success


***** CHANGE #70; PAGE 86, LINE 83; PAGE 91, LINE 8
; are set in T1.

INIERR:	TXNE T1,CI.ERR		; Any error bits set?
	 JRST KNIERR		;  Yes, complain and log the problem

	BUG. (CHK,KNIINF,PHYKNI,HARD,<PHYKNI - KLNI initialization timed out>,<<T1,CONI>>,<

Cause:	The KLNI timed out during initialization.  Either "disable complete"
	didn't set or "enable complete" didn't set (the CONI will indicate
	which).  This is very likely a hardware problem, because the microcode
	version number was valid, and there was no specific error indication
	in the CONI.

Action:	Try reloading the KLNI microcode.  If the problem still persists call
	field service.

Data:	CONI - CONI KNI,
>,,<DB%NND>)			;[7.1210] 
	CALLRET NISTP			; Stop the KLNI gracefully

 ---------------------------------
; are set in T1.

INIERR:	TXNE T1,CI.ERR		; Any error bits set?
	 JRST KNIERR		;  Yes, complain and log the problem

	BUG.(CHK,KNIINF,PHYKNI,HARD,<PHYKNI - NIA20 initialization timed out>,<<T1,CONI>>,<

Cause:	The NIA20 timed out during initialization.  Either "disable complete"
	didn't set or "enable complete" didn't set (the CONI will indicate
	which).  This is very likely a hardware problem, because the microcode
	version number was valid, and there was no specific error indication in
	the CONI.

Action:	Try reloading the NIA20 microcode.  If the problem still persists call
	Field Service.

Data:	CONI - CONI KNI,
>,,<DB%NND>)			;[7.1210] 
	CALLRET NISTP		; Stop the KLNI gracefully


***** CHANGE #71; PAGE 91, LINE 55; PAGE 96, LINE 55
NIDPT3:	OPSTR <SKIPN T2,>,PRMUL,(PR) ; Get the enabled multicast bit table
	 JRST ONRSKP		;  Nothing enabled, just return
	JFFO T2,.+1		; Find the MTT table offset for this bit
	OPSTR <ADD T3,>,PSMTT,(PS) ; Point to the MTT entry
	CALL NIDRA2		; Disable this address
	 BUG. (HLT,KNIADE,PHYKNI,SOFT,<PHYKNI - Multicast address disable error>,,<

Cause:	NIDPT got an error from NIDRA when attempting to disable a multicast
	address that was supposedly enabled.
>)
 ---------------------------------
NIDPT3:	OPSTR <SKIPN T2,>,PRMUL,(PR) ; Get the enabled multicast bit table
	 JRST ONRSKP		;  Nothing enabled, just return
	JFFO T2,.+1		; Find the MTT table offset for this bit
	OPSTR <ADD T3,>,PSMTT,(PS) ; Point to the MTT entry
	CALL NIDRA2		; Disable this address
	 BUG.(HLT,KNIADE,PHYKNI,SOFT,<PHYKNI - Multicast address disable error>,,<

Cause:	In the NIA20 driver, NIDPT got an error from NIDRA when attempting to
	disable a multicast address that was supposedly enabled.  This may be a
	NIA20 microcode problem or a monitor software problem.
>)

***** CHANGE #72; PAGE 99, LINE 3; PAGE 104, LINE 3
	SEBTSZ==.-SEBTAB

	SUBTTL Common BUGs

ILLPTY:	BUG. (HLT,KNIIPT,PHYKNI,SOFT,<PHYKNI - Illegal protocol type on close>,<<T1,PTYPE>>,<

 ---------------------------------
	SEBTSZ==.-SEBTAB

	SUBTTL Common BUGs

ILLPTY:	BUG.(HLT,KNIIPT,PHYKNI,SOFT,<PHYKNI - Illegal protocol type on close>,<<T1,PTYPE>>,<


***** CHANGE #73; PAGE 99, LINE 12; PAGE 104, LINE 12

Data:	PTYPE - The specified protocol type.
>)
	RET

QEMPTY:	BUG. (CHK,KNIQUE,PHYKNI,SOFT,<PHYKNI - Queue empty on entry>,<<T1,QUE>>,<

Cause:	A queue was empty when the routine REMQUE was called.

 ---------------------------------

Data:	PTYPE - The specified protocol type.
>)
	RET

QEMPTY:	BUG.(CHK,KNIQUE,PHYKNI,SOFT,<PHYKNI - Queue empty on entry>,<<T1,QUE>>,<

Cause:	A queue was empty when the routine REMQUE was called.

Action:	This may be a NIA20 microcode problem or a software problem.  It is
	possible, but unlikely, that there is a NIA20 hardware problem.  If
	this BUGCHK persists, change the BUGCHK to a BUGHLT, and submit an SPR
	along with the dump and instructions on reproducing the problem.


***** CHANGE #74; PAGE 99, LINE 22; PAGE 104, LINE 27
Data:	QUE - The queue header address.
>)
	RET


UNKRES:	BUG. (HLT,KNIUOP,PHYKNI,HARD,<PHYKNI - Unknown response>,<<T1,RESP>>,<

Cause:	The port gave us a response we don't know about.

Data:	RESP - Response
>)
	RET

 ---------------------------------
Data:	QUE - The queue header address.
>)
	RET


UNKRES:	BUG.(HLT,KNIUOP,PHYKNI,HARD,<PHYKNI - Unknown response>,<<T1,RESP>>,<

Cause:	The NIA20 port gave us a response we don't know about.

Data:	RESP - Response
>)
	RET


***** CHANGE #75; PAGE 99, LINE 35; PAGE 105, LINE 6
ILLFNC:	BUG. (CHK,KNIIFD,PHYKNI,SOFT,<PHYKNI - Illegal function from DLL>,<<T1,PASED>,<T2,BLKADR>,<T3,FNC>>,<

Cause:	The NIDLL called the driver with a function we don't handle yet.

Data:	BLKADR -The function block address.
	FNC - The function code
>)
	RET

NOCTL:	BUG. (HLT,KNINIB,PHYKNI,SOFT,<PHYKNI - No control buffer at interrupt level>,,<

 ---------------------------------
ILLFNC:	BUG. (CHK,KNIIFD,PHYKNI,SOFT,<PHYKNI - Illegal function from DLL>,<<T1,PASED>,<T2,BLKADR>,<T3,FNC>>,<

Cause:	The NIDLL called the driver with a function we don't handle yet.

Action:	If this BUGCHK persists, change the BUGCHK to a BUGHLT, and submit an
	SPR along with the dump and instructions on reproducing the problem.

Data:	BLKADR - The function block address.
	FNC - The function code
>)
	RET

NOCTL:	BUG.(HLT,KNINIB,PHYKNI,SOFT,<PHYKNI - No control buffer at interrupt level>,,<


***** CHANGE #76; PAGE 99, LINE 48; PAGE 105, LINE 22
Cause:	The Port Storage (PS) block was not set up with the address of a UN
	block to be used at interrupt level.
>)
	RET

VMCBUG:	BUG. (CHK,KNIIAM,PHYKNI,SOFT,<PHYKNI - Illegal addressing mode>,<<T2,ADR>>,<

Cause:	An illegal addressing mode was specified.

 ---------------------------------
Cause:	The Port Storage (PS) block was not set up with the address of a UN
	block to be used at interrupt level.
>)
	RET

VMCBUG:	BUG.(CHK,KNIIAM,PHYKNI,SOFT,<PHYKNI - Illegal addressing mode>,<<T2,ADR>>,<

Cause:	An illegal addressing mode was specified.

Action:	If this BUGCHK persists, change the BUGCHK to a BUGHLT, and submit an
	SPR along with the dump and instructions on reproducing the problem.


