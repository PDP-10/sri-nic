

; FUTILI.NEW.1 & <MONITOR>FUTILI.MAC.1 31-Mar-89 2331	PAGE 1



LINE 1, PAGE 1
1)	; Edit= 8937 to FUTILI.MAC on 23-Aug-88 by LOMARTIRE
1)	;Spell MONITR correctly in ACTION field of BUGs!
1)	; Edit= 8915 to FUTILI.MAC on 18-Aug-88 by LOMARTIRE
1)	;Improve BUG. documentation
1)	; UPD ID= 8521, RIP:<7.MONITOR>FUTILI.MAC.6,   9-Feb-88 15:36:36 by GSCOTT
LINE 1, PAGE 1
2)	; UPD ID= 8521, RIP:<7.MONITOR>FUTILI.MAC.6,   9-Feb-88 15:36:36 by GSCOTT


LINE 46, PAGE 10
1)		JE STRLK,(T1),[BUG.(CHK,ULKSTZ,FUTILI,SOFT,<Overly decremented structure lock>,,<
1)	
1)	Cause:	ULKST1 was called to unlock a structure but the lock count was
1)		already zero.
1)	
1)	Action:	If this BUG persists, make it dumpable and submit an SPR with the
1)		dump and a copy of MONITR.EXE.  If possible, include any known
1)		method for reproducing the problem and/or the state of the system
1)		at the time the BUG was observed.
1)	>)
LINE 46, PAGE 10
2)		JE STRLK,(T1),[BUG.(CHK,ULKSTZ,FUTILI,HARD,<Overly decremented structure lock>,,<
2)	
2)	Cause:	ULKST1 was called to unlock a structure but the lock count was
2)		already zero.
2)	
2)	>)


LINE 18, PAGE 22
1)	Cause:	A routine is locking a lock while OKINT.  This is dangerous since 
1)		allowing interrupts can cause the lock to be held indefinetly or 
1)		lock ownership to be lost.
1)	
1)	Action:	If this BUG persists, make it dumpable and submit an SPR with the
1)		dump and a copy of MONITR.EXE.  If possible, include any known
1)		method for reproducing the problem and/or the state of the system
1)		at the time the BUG was observed.  The dump will show which routine
1)		is OKINT while attempting to get the lock.  Make the routine go 
1)		NOINT for the duration of the lock being locked.
1)	
1)	Data:	LOCK   - Lock index and flags
LINE 18, PAGE 22
2)	Cause:	A routine is locking a lock while OKINT.
2)	
2)	Action:	Make the process be NOINT for the duration of the lock being
2)		locked.
2)	

; FUTILI.NEW.1 & <MONITOR>FUTILI.MAC.1 31-Mar-89 2331	PAGE 2


2)	Data:	LOCK - Lock index and flags


LINE 13, PAGE 23
1)	Cause:	A routine is unlocking a lock while OKINT.  This is dangerous since 
1)		allowing interrupts can cause the lock to be held indefinetly or 
1)		lock ownership to be lost.  The process should have been NOINT when
1)		it acquired the lock or a LOKINT BUGCHK would have resulted.
1)	
1)	Action:	If this BUG persists, make it dumpable and submit an SPR with the
1)		dump and a copy of MONITR.EXE.  If possible, include any known
1)		method for reproducing the problem and/or the state of the system
1)		at the time the BUG was observed.  The dump will show which routine
1)		is OKINT while attempting to get the lock.  Make the routine go 
1)		NOINT for the duration of the lock being locked.
1)	
1)	Data:	LOCK   - Lock index and flags
LINE 13, PAGE 23
2)	Cause:	A routine is unlocking a lock while OKINT.
2)	
2)	Action:	Make the process be NOINT for the duration of the lock being locked.
2)	
2)	Data:	LOCK - Lock index and flags
