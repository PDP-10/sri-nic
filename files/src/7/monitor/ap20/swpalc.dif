

; SWPALC.NEW.1 & <MONITOR>SWPALC.MAC.1 31-Mar-89 2357	PAGE 1



LINE 1, PAGE 1
1)	; Edit= 8940 to SWPALC.MAC on 25-Aug-88 by GSCOTT
1)	;Update BUG. documentation. 
1)	; UPD ID= 8625, RIP:<7.MONITOR>SWPALC.MAC.2,  11-Feb-88 18:36:40 by GSCOTT
LINE 1, PAGE 1
2)	; UPD ID= 8625, RIP:<7.MONITOR>SWPALC.MAC.2,  11-Feb-88 18:36:40 by GSCOTT


LINE 27, PAGE 3
1)	Cause:	During the assignment of drum a page, DRMCNT for a track showed there
1)		was space on that track.  There was no free space available according
1)		to the bit table for the track, however.
1)	>)
LINE 27, PAGE 3
2)	Cause:	During the assignment of drum a page, DRMCNT for a track showed
2)		there was space on that track.  There was no free space available
2)		according to the bit table for the track, however.
2)	>)


LINE 13, PAGE 5
1)	Action:	If this BUGCHK can be reproduced, change it to a BUGHLT and submit an
1)		SPR along with instructions on reproducing the problem.
1)	>)
LINE 12, PAGE 5
2)	>)


LINE 36, PAGE 6
1)	Cause:	During assignment of multiple contiguous drum addresses, DRMFRE said
1)		there was space on the drum.  However, none of the DRMCNT's for each
1)		track showed any free space.
1)	>)
LINE 36, PAGE 6
2)	Cause:	During assignment of multiple contiguous drum addresses,
2)		DRMFRE said there was space on the drum.  However, none
2)		of the DRMCNT's for each track showed any free space.
2)	>)


LINE 24, PAGE 8
1)	Cause:	A routine in SWPALC that provides an address in the DST was called from
1)		section 0 on a machine that runs extended addressing.  This is
1)		dangerous because the routine returns a 30-bit address, and the caller
1)		will probably use the address in an index register, thus losing the
1)		section number.
1)	
1)		It is essential that any code that references the DST run in a non-zero
1)		section.  The long-term solution is to study the entire stack and make

; SWPALC.NEW.1 & <MONITOR>SWPALC.MAC.1 31-Mar-89 2357	PAGE 2


LINE 24, PAGE 8
2)	Cause:	A routine in SWPALC that provides an address in the DST was called
2)		from section 0 on a machine that runs extended addressing. This
2)		is dangerous because the routine returns a 30-bit address, and the
2)		caller will probably use the address in an index register, thus
2)		losing the section number.
2)	
2)	Action:	It is essential that any code that references the DST run in a non-zero
2)		section. The long-term solution is to study the entire stack and make


LINE 35, PAGE 8
1)		and ILMNRF BUGHLTs.
1)	
1)	Action:	If this BUGCHK can be reproduced, change it to a BUGHLT and submit an
1)		SPR along with instructions on reproducing the problem.
1)	
1)	Data:	PC - the PC from which GDSTX was called
LINE 35, PAGE 8
2)		and ILMNRF BUGHLT's.
2)	
2)	Data:	PC - the PC from which GDSTX was called


LINE 19, PAGE 10
1)	Cause:	There are more pages for swapping than there are entries in the DST.
1)	
1)	Action:	Either rebuild the monitor after changing STG.MAC to have a larger
1)		value for NDST or use a boot structure with less swapping pages.
1)	>)
LINE 19, PAGE 10
2)	Cause:	There are more pages for swapping than there are entries in the
2)		DST.
2)	>)


LINE 8, PAGE 11
1)	Cause:	Cannot assign bad drum address because it is an illegal address or
1)		already assigned.
1)	
1)	Action:	There could be a problem with the boot structure on this system.  If
1)		this problem is reproducable with a healthy boot structure, and this
1)		BUGCHK can be reproduced, change it to a BUGHLT and submit an SPR along
1)		with instructions on reproducing the problem.
1)	>)
LINE 33, PAGE 10
2)	Cause:	Cannot assign bad drum address because it is an illegal
2)		address or already assigned.
2)	>)
