

; PAGUTL.NEW.1 & <MONITOR>PAGUTL.MAC.1 31-Mar-89 2343	PAGE 1



LINE 1, PAGE 1
1)	; Edit= 8906 to PAGUTL.MAC on 16-Aug-88 by GSCOTT
1)	;Update BUG. documentation. 
1)	; Edit= 8869 to PAGUTL.MAC on 29-Jul-88 by LOMARTIRE, for SPR #21717
1)	;Prevent CFSOFB BUGHLTs by getting write token in UPDOFN 
1)	; Edit= 8840 to PAGUTL.MAC on 6-May-88 by LOMARTIRE, for SPR #21691 (TCO 7.1285)
LINE 1, PAGE 1
2)	; Edit= 8840 to PAGUTL.MAC on 6-May-88 by LOMARTIRE, for SPR #21691 (TCO 7.1285)


LINE 11, PAGE 23
1)	Cause:	ASGVAS was called to get a free section for SCA at startup but failed.
1)	>)
LINE 11, PAGE 23
2)	Cause:	ASGVAS was called to get a free section for SCA at
2)		startup but failed.
2)	>)


LINE 39, PAGE 28
1)	Cause:	The values in BUTPHY indicate that BOOT has been left in pages which
1)		are expected to be available for resident code or storage areas.  This
1)		could be the result of a bad monitor build or an attempt to run the
1)		monitor with insufficient memory.
1)	>)
LINE 39, PAGE 28
2)	Cause:	The values in BUTPHY indicate that BOOT has been left in pages
2)		which are expected to be available for resident code or
2)		storage areas.  This could be the result of a bad monitor build
2)		or an attempt to run the monitor with insufficient memory.
2)	>)


LINE 19, PAGE 40
1)	Cause:	Insufficient swap space has been allocated for reasonable operation.
1)		The swapping space should be at least 4 times the size of main
1)		(MOS/core) memory.
1)	
1)	Action:	Rebuild the boot structure with more swapping space.  Supply at least
1)		four times the amount of main memory for swapping.
1)	
1)	Data:	SWPSIZ - Size of swapping space allocated
LINE 44, PAGE 39
2)	Cause:	Insufficient swap space has been allocated for reasonable
2)		operation.  The swapping space should be at least 4 times
2)		the size of main (MOS/core) memory.
2)	
2)	Data:	SWPSIZ - Size of swapping space allocated


; PAGUTL.NEW.1 & <MONITOR>PAGUTL.MAC.1 31-Mar-89 2343	PAGE 2



LINE 28, PAGE 45
1)		swapping space after a system crash.  It is unable to assign a page in
1)		the swapping space to which a monitor page was previously written. This
1)		code is executed only if the monitor is manually started at location
1)		EVLDGO.  This is not a recommended procedure.
1)	>)
LINE 28, PAGE 44
2)		swapping space after a system crash. It is unable to assign a
2)		page in the swapping space to which a monitor page was previously
2)		written. This code is executed only if the monitor is
2)		manually started at location EVLDGO. This is not a recommended
2)		procedure.
2)	>)


LINE 30, PAGE 46
1)	Cause:	The monitor is attempting to complete I/O that was taking place when
1)		the system crashed.  The backup address in the CST is invalid for some
1)		core page.  Note: This code is executed only if the monitor is manually
1)		started at location EVRST.  This is not a recommended procedure.
1)	>)
LINE 30, PAGE 45
2)	Cause:	The monitor is attempting to complete I/O that was taking place
2)		when the system crashed. The backup address in the CST is
2)		invalid for some core page. Note: This code is executed only
2)		if the monitor is manually started at location EVRST. This is
2)		not a recommended procedure.
2)	>)


LINE 13, PAGE 49
1)	Cause:	A routine has been called to map a specified core page to a specified
1)		virtual page.  The BUGHLT indicates that the caller provided a page
1)		number of a core page that does not exist.  (The number is too large.)
1)		This BUGHLT can occur if a monitor that is built for less than 256K is
1)		booted on a machine whose memory exceeds 256K.
1)	
1)	Action:	If the monitor was built for less than 256K, and there is more than
1)		256K of memory on the system, rebuild the monitor for the correct
1)		amount of memory.
1)	>)
LINE 13, PAGE 48
2)	Cause:	A routine has been called to map a specified core page to a
2)		specified virtual page. The BUGHLT indicates that the caller
2)		provided a page number of a core page that does not exist.
2)		(The number is too large). This BUGHLT can occur if a monitor
2)		that is built for less than 256K is booted on a machine whose
2)		memory exceeds 256K.
2)	

; PAGUTL.NEW.1 & <MONITOR>PAGUTL.MAC.1 31-Mar-89 2343	PAGE 3


2)	Action:	If the monitor was built for less than 256K, and there
2)		is more than 256K of memory on the system, rebuild the monitor
2)		for the correct amount of memory.
2)	>)


LINE 13, PAGE 59
1)	Cause:	A routine was called to setup CPTPG while CPTPG was already setup.  All
1)		callers should call RELCPT if CPTPG is mapped.
1)	
1)	Action:	RELCPT has been called and the system will continue to run.  If this
1)		bug is reproducable, set it dumpable, and send in an SPR with the dump
1)		and how to reproduce the problem.
1)	>)				;** MAKE THIS A BUGHLT IN THE FUTURE
LINE 13, PAGE 58
2)	Cause:	A routine was called to setup CPTPG while CPTPG was already setup.
2)		All callers should call RELCPT if CPTPG is mapped.
2)	>)				;** MAKE THIS A BUGHLT IN THE FUTURE


LINE 26, PAGE 65
1)	Cause:	The share count for an OFN has been incremented beyond the maximum
1)		value.  It should not be possible for a user program to cause this.
1)	>)
LINE 27, PAGE 64
2)	Cause:	The share count for an OFN has been incremented beyond the
2)		maximum value. It should not be possible for a user program
2)		to cause this.
2)	>)


LINE 36, PAGE 65
1)	Cause:	The share count for an SPT slot (not an OFN) has been incremented
1)		beyond the maximum value.  This can be caused by a pathological
1)		program.
1)	
1)	Action:	If a user program cannot be found that is at fault, please send in an
1)		SPR along with a dump and any information on reproducing the problem.
1)	>)
LINE 38, PAGE 64
2)	Cause:	The share count for an SPT slot (not an OFN) has been
2)		incremented beyond the maximum value. This can be caused
2)		by a pathological program.
2)	>)


; PAGUTL.NEW.1 & <MONITOR>PAGUTL.MAC.1 31-Mar-89 2343	PAGE 4



LINE 15, PAGE 66
1)	Cause:	A routine has been called to decrement the share count for an OFN.  The
1)		BUGHLT indicates that the count was already 0.
1)	>)
LINE 15, PAGE 65
2)	Cause:	A routine has been called to decrement the share count for
2)		an OFN. The BUGHLT indicates that the count was already 0.
2)	>)


LINE 20, PAGE 70
1)	Cause:	A hardware error (AR/ARX parity error or MB parity error) was detected
1)		when the monitor referenced a page in memory that contained part of the
1)		resident monitor.  The monitor has printed an analysis of the error on
1)		the CTY, and A SYSERR entry will be created when the monitor is
1)		rebooted.
1)	
1)	Action:	Field Service should check the system for a hardware problem.
1)	>)
LINE 20, PAGE 69
2)	Cause:	A hardware error (AR/ARX parity error or MB parity error) was
2)		detected when the monitor referenced a page in memory that
2)		contained part of the resident monitor. The monitor has printed
2)		an analysis of the error on the CTY, and A SYSERR entry will be
2)		created when the monitor is rebooted.
2)	>)


LINE 14, PAGE 71
1)	Cause:	A hardware error (AR/ARX parity error or MB parity error) was detected
1)		when the monitor referenced a page in memory that contained a process's
1)		page table. The monitor has printed an analysis of the error on the
1)		CTY, and A SYSERR entry will be created when the monitor is rebooted.
1)	
1)	Action:	Field Service should check out the system.
1)	>)]
LINE 14, PAGE 70
2)	Cause:	A hardware error (AR/ARX parity error or MB parity error) was
2)		detected when the monitor referenced a page in memory that
2)		contained a process's page table. The monitor has printed
2)		an analysis of the error on the CTY, and A SYSERR entry will be
2)		created when the monitor is rebooted.
2)	>)]


; PAGUTL.NEW.1 & <MONITOR>PAGUTL.MAC.1 31-Mar-89 2343	PAGE 5



LINE 45, PAGE 72
1)	Cause:	A routine has been called to mark a page as modified (to set the CORMB
1)		flag in CST0).  The BUGHLT indicates that the core page number provided
1)		by the caller is invalid.
1)	>)
LINE 45, PAGE 71
2)	Cause:	A routine has been called to mark a page as modified (to
2)		set the CORMB flag in CST0). The BUGHLT indicates that the
2)		core page number provided by the caller is invalid.
2)	>)


LINE 24, PAGE 75
1)	Cause:	A routine was called to create a page in the monitor's address space.
1)		But the caller provided a page identifier that pointed to an existing
1)		page.
1)	>)
LINE 24, PAGE 74
2)	Cause:	A routine was called to create a page in the monitor's
2)		address space. But the caller provided a page identifier that
2)		pointed to an existing page.
2)	>)


LINE 12, PAGE 79
1)	Cause:	A routine was called to unlock a core page, but the page was not in
1)		core, indicating it could not have been locked.
1)	>)
LINE 12, PAGE 78
2)	Cause:	A routine was called to unlock a core page, but the page was
2)		not in core, indicating it could not have been locked.
2)	>)


LINE 28, PAGE 79
1)	Cause:	A routine was called to unlock a core page, but the page's lock count
1)		was 0.
1)	>)
LINE 28, PAGE 78
2)	Cause:	A routine was called to unlock a core page, but the page's
2)		lock count was 0.
2)	>)


; PAGUTL.NEW.1 & <MONITOR>PAGUTL.MAC.1 31-Mar-89 2343	PAGE 6



LINE 10, PAGE 80
1)	Cause:	A routine was called to unlock a core page in the monitor's address
1)		space but the caller provided a page identifier that did not point to
1)		the monitor's map.
1)	>)
LINE 10, PAGE 79
2)	Cause:	A routine was called to unlock a core page in the monitor's
2)		address space but the caller provided a page identifier that did not
2)		point to the monitor's map.
2)	>)


LINE 25, PAGE 80
1)	Cause:	A routine was called to unlock a core page. The caller provided a page
1)		number that was illegal because of one of the following:
1)	
1)		1. The page is never locked because it is part of the resident monitor.
1)	
1)		2. The page does not exist in physical memory.
LINE 25, PAGE 79
2)	Cause:	A routine was called to unlock a core page. The caller provided
2)		a page number that was illegal because of one of the following:
2)	
2)		1. The page is never locked because it is part of the resident
2)		   monitor
2)	
2)		2. The page does not exist in physical memory.


LINE 13, PAGE 83
1)	Cause:	A routine was called to convert a virtual address or page id to its
1)		corresponding core page.  However, the page table is not in core.
1)	>)
LINE 13, PAGE 82
2)	Cause:	A routine was called to convert a virtual address or page id
2)		to its corresponding core page. But the page table is not in
2)		core.
2)	>)


LINE 12, PAGE 90
1)	Cause:	The monitor is establishing the context for running a process by making
1)		its per-process area part of the monitor's map.  It is about to copy
1)		the SPT entry for the PSB into a special SPT slot but the PSB is not in
1)		core.
1)	>)
LINE 12, PAGE 89
2)	Cause:	The monitor is establishing the context for running a
2)		process by making its per-process area part of the

; PAGUTL.NEW.1 & <MONITOR>PAGUTL.MAC.1 31-Mar-89 2343	PAGE 7


2)		monitor's map. It is about to copy the SPT entry for the
2)		PSB into a special SPT slot but the PSB is not in core.
2)	>)


LINE 29, PAGE 90
1)	Cause:	The monitor is establishing the context for running a process by making
1)		its per-job area part of the monitor's map.  It is about to copy the
1)		SPT entry for the JSB into a special SPT slot.  However, the JSB is not
1)		in core.
1)	>)
LINE 29, PAGE 89
2)	Cause:	The monitor is establishing the context for running a
2)		process by making its per-job area part of the
2)		monitor's map. It is about to copy the SPT entry for the
2)		JSB into a special SPT slot. But the JSB is not in core.
2)	>)


LINE 7, PAGE 91
1)	Cause:	The monitor is establishing the context for running a process by making
1)		the PT for its extended per-job area part of the monitor's map.  It is
1)		about to copy the SPT entry for the extended JSB's page-table into a
1)		special SPT slot.  However, the page-table is not in core.
1)	>)
LINE 7, PAGE 90
2)	Cause:	The monitor is establishing the context for running a process by 
2)		making the PT for its extended per-job area part of the monitor's map. 
2)		It is about to copy the SPT entry for the extended JSB's page-table 
2)		into a special SPT slot. But the page-table is not in core.
2)	>)


LINE 13, PAGE 96
1)	Cause:	A routine has been called to remove a core page from the special memory
1)		queue.  If a page is on the queue, its age should be PSSPQ.  The BUGHLT
1)		indicates that the age is incorrect.  The entry may or may not actually
1)		be on the queue.  The caller is expected to ensure that the page is on
1)		the queue.
1)	>)
LINE 13, PAGE 95
2)	Cause:	A routine has been called to remove a core page from the special
2)		memory queue. If a page is on the queue, its age should be
2)		PSSPQ. The BUGHLT indicates that the age is incorrect. The
2)		entry may or may not actually be on the queue. The caller is
2)		expected to ensure that the page is on the queue.
2)	>)


; PAGUTL.NEW.1 & <MONITOR>PAGUTL.MAC.1 31-Mar-89 2343	PAGE 8



LINE 14, PAGE 121
1)	Action:	Field Service should run SPEAR to examine the SYSERR file for errors on
1)		the boot structure.
1)	>)
LINE 13, PAGE 120
2)	>)


LINE 12, PAGE 123
1)		CALL LCKOFA		;[8869] (T1/)Lock OFN and get write token
1)		MOVX B,OFNWRB		;SEE IF OFN MODIFIED
LINE 12, PAGE 122
2)		CALL LCKOFN		;LOCK OFN AGAINST CHANGES
2)		MOVX B,OFNWRB		;SEE IF OFN MODIFIED


LINE 15, PAGE 124
1)		BUG.(HLT,NOTOFN,PAGUTL,SOFT,<UPDOF0 - Updating file argument not OFN>,,<
1)	
1)	Cause:	A routine has been called to write an updated index block for a file
LINE 15, PAGE 123
2)		BUG.(HLT,NOTOFN,PAGUTL,SOFT,<UPDOF0 - ARG NOT OFN>,,<
2)	
2)	Cause:	A routine has been called to write an updated index block for a file  


LINE 21, PAGE 126
1)		IFN. P3			;[8906] Error on write?
1)		  LOAD T1,STRX,(P1)	;[8906] Yes, get the structure number
1)		  BUG.(CHK,XBWERR,PAGUTL,HARD,<UPDOFN - Disk write error on XB>,<<T1,STRX>>,<
1)	
1)	Cause:	UPDOFO was called to scan an index block and write the image to disk.
1)		This BUG indicates that there has been a disk write error on the index
1)		block for a file.
1)	
1)	Action:	Field Service should run SPEAR to check the SYSERR file for disk
1)		problems.  The additional data is the structure number having the
1)		problem.  The easiest way to determine the structure name from the
1)		structure number is to count down the structures listed in a
1)		INFORMATION AVAILABLE command, skipping "DSK".
1)	
1)	Data:	STRX - Structure number
1)	>,,<DB%NND>)			;[8906][7.1210] 
1)		ENDIF.			;[8906]
1)	
1)	UOFNX:	MOVEI A,0
LINE 21, PAGE 125
2)		SKIPE P3		;ERROR ON WRITE?
2)		BUG.(CHK,XBWERR,PAGUTL,HARD,<UPDOFN - Disk write error on XB>,,<

; PAGUTL.NEW.1 & <MONITOR>PAGUTL.MAC.1 31-Mar-89 2343	PAGE 9


2)	
2)	Cause:	UPDOFO was called to scan an index block and write the image to
2)		disk. This BUG indicates that there has been a disk write error on
2)		the index block.
2)	>,,<DB%NND>)			;[7.1210] 
2)	
2)	UOFNX:	MOVEI A,0


LINE 5, PAGE 128
1)	Cause:	The monitor is updating the disk index block for a file.  The index
1)		block contains an address of a file page that is incorrect for one of
1)		the following reasons:
1)	
1)		1. It is a memory address of non-existent memory or in the
1)		   resident monitor.
1)		2. There is no disk address for the page.
1)	
1)	Action:	This problem can be caused by bad hardware; Field Service should check
1)		the system.  If the hardware is not at fault, send in a SPR along with
1)		a dump and any information on how to reproduce the problem.
1)	>)
LINE 5, PAGE 127
2)	Cause:	The monitor is updating the disk index block for a file.
2)		The index block contains an address of a file page that is
2)		incorrect for one of the following reasons:
2)	
2)		1. It is a memory address of non-existent memory or in the
2)		   resident monitor.
2)		2. There is no disk address for the page.
2)	>)


LINE 25, PAGE 132
1)	Cause:	A routine has been called to update pages of a file on the disk to
1)		which a specified index block (OFN) points.  The caller provides a
1)		starting page and a count.  The BUGHLT occurs because the sum of the
1)		two extends beyond the end of the index block.
1)	>)
LINE 25, PAGE 131
2)	Cause:	A routine has been called to update pages of a file on the disk 
2)		to which a specified index block (OFN) points. The caller
2)		provides a starting page and a count. The BUGHLT occurs
2)		because the sum of the two extends beyond the end of the
2)		index block.
2)	>)


; PAGUTL.NEW.1 & <MONITOR>PAGUTL.MAC.1 31-Mar-89 2343	PAGE 10



LINE 23, PAGE 138
1)	Cause:	A routine was called to assign an OFN (index block).  The caller
1)		provided a structure number that was invalid, either because that
1)		number can never exist or because it does not exist now.
1)	>)
LINE 23, PAGE 137
2)	Cause:	A routine was called to assign an OFN (index block). The
2)		caller provided a structure number that was invalid, either
2)		because that number can never exist or because it does not
2)		exist now.
2)	>)


LINE 10, PAGE 142
1)	Cause:	As a result of an OPENF, an attempt has been made to create a new OFN.
1)		This attempt fails because the system has no more OFNs available for
1)		use.  The user will receive an OPNX10 error.  This BUGINF will be
1)		issued at most once every 30 minutes regardless of how many OPENF
1)		attempts are made during the time the OFN space is exhausted.
1)	
1)	Action:	If more OFN space is desired, increase the value of NOFN in STG and
1)		rebuild the monitor.
1)	>,,<DB%NND>)			;[7.1210] 
LINE 10, PAGE 141
2)	Cause:	As a result of an OPENF, an attempt has been made to create a new
2)		OFN.  This attempt fails because the system has no more OFNs 
2)		available for use.  The user will receive an OPNX10 error.  This 
2)		BUGINF will be issued at most once every 30 minutes regardless of 
2)		how many OPENF attempts are made during the time the OFN space is 
2)		exhausted.
2)	
2)	Action:	If more OFN space is desired, increase the value of NOFN.
2)	>,,<DB%NND>)			;[7.1210] 


LINE 32, PAGE 144
1)	Cause:	We are assigning an OFN which is cached and notice that the old value
1)		of SPTH does not match what was just written.  This is a bug because
1)		the cached OFN should not have changed its index block address.
1)	>)				;[7247] Not the same - error!
LINE 32, PAGE 143
2)	Cause:	We are assigning an OFN which is cached and notice that the old
2)		value of SPTH does not match what was just written.  This is a 
2)		bug because the cached OFN should not have changed its index block
2)		address.
2)	>)				;[7247] Not the same - error!


; PAGUTL.NEW.1 & <MONITOR>PAGUTL.MAC.1 31-Mar-89 2343	PAGE 11



LINE 5, PAGE 148
1)	Cause:	The monitor maintains information for disk quota enforcement in two
1)		parallel tables called the allocation tables.  These contain one entry
1)		for each directory to which at least one OFN is assigned (that has at
1)		least one file open).  The size of these tables is the maximum number
1)		of OFNs; therefore even if every OFN were associated with a unique
1)		directory, there should be enough room in the allocation tables.  The
1)		BUGHLT indicates that the tables have overflowed.
1)	>)
LINE 40, PAGE 146
2)	Cause:	The monitor maintains information for disk quota enforcement
2)		in two parallel tables called the allocation tables. These
2)		contain one entry for each directory to which at least one OFN
2)		is assigned (that has at least one file open). The size
2)		of these tables is the maximum number of OFN's; therefore even
2)		if every OFN were associated with a unique directory, there
2)		should be enough room in the allocation tables. The BUGHLT
2)		indicates that the tables have overflowed.
2)	>)


LINE 30, PAGE 158
1)	Cause:	There are multiple causes of this BUGHLT.  They all indicate some error
1)		in the monitors internal OFN data.  The cause of the BUGHLT can be
1)		found by examining the dump.
1)	>)
LINE 30, PAGE 156
2)	Cause:	There are multiple causes of this BUGHLT. They all indicate some
2)		error in the monitors internal OFN data. The cause of the BUGHLT
2)		can be found by examining the dump.
2)	>)


LINE 26, PAGE 159
1)	Cause:	DASOFN was called to delete an OFN slot but the page table's lock count
1)		in CST1 is greater than one.  This likely indicates that some of this
1)		OFN's pages have not yet been written to disk.
1)	
1)	Action:	Submit an SPR along with a dump and how the problem can be reproduced.
1)		When looking at the dump, look at the caller to DASOFN.  This routine
1)		should either call SCNOFN to write the pages to disk or should not be
1)		calling DASOFN at all.
1)	>)				;[7356]NO.
LINE 26, PAGE 157
2)	Cause:	DASOFN was called to delete an OFN slot but the page table's lock
2)		count in CST1 is greater than one. This likely indicates that some
2)		of this OFN's pages have not yet been written to disk.
2)	
2)	Action:	Look at the caller to DASOFN. This routine should either call

; PAGUTL.NEW.1 & <MONITOR>PAGUTL.MAC.1 31-Mar-89 2343	PAGE 12


2)		SCNOFN to write the pages to disk or should not be calling DASOFN
2)		at all.
2)	>)				;[7356]NO.


LINE 25, PAGE 172
1)	Cause:	A routine has been called to release an OFN.  The OFN is the identifier
1)		for the index block of a file that is being closed.  This routine
1)		forces the index block into memory.  The backup address for the index
1)		block should be on the disk.  The BUGHLT indicates that the backup
1)		address is not on the disk.
1)	>)
LINE 25, PAGE 169
2)	Cause:	A routine has been called to release an OFN. The OFN is the
2)		identifier for the index block of a file that is being closed.
2)		This routine forces the index block into memory. The backup
2)		address for the index block should be on the disk. The BUGHLT
2)		indicates that the backup address is not on the disk.
2)	>)


LINE 10, PAGE 175
1)		BUG.(CHK,CSHCLR,PAGUTL,HARD,<CLROFN - Cached OFN found at CLROFN>,,<
1)	
1)	Cause:	The monitor is removing an OFN by calling CLROFN.  It is found that the
1)		OFN is "cached".  CLROFN calls FRECFS and this is incorrect for cached
1)		OFNs since FRECFS has already been called.  This BUG is for debugging
1)		and the OFN deassignment does not proceed.
1)	
1)	Action:	If this problem can be reproduced, set the bug dumpable, and send in an
1)		SPR along with the dump and how to reproduce the problem.
1)	>,R)				;[7247] 
LINE 10, PAGE 172
2)		BUG.(CHK,CSHCLR,PAGUTL,HARD,<CLROFN - CACHED OFN FOUND AT CLROFN>,,<
2)	
2)	Cause:	The monitor is removing an OFN by calling CLROFN. It is found that 
2)		the OFN is "cached". CLROFN calls FRECFS and this is incorrect for
2)		cached OFNs since FRECFS has already been called. This BUG is for
2)		debugging and the OFN deassignment does not proceed.
2)	>,R)				;[7247] 


LINE 5, PAGE 177
1)	Cause:	SCNOFN was called to scan an index block and move all its pages to disk
1)		but the index block contains a pointer that is not an immediate
1)		pointer.
1)	
1)	Action:	This problem is usually seen when there is a hardware problem with a
1)		disk or channel.  Field Service should run SPEAR to read the SYSERR
1)		file and check for problems.
1)	

; PAGUTL.NEW.1 & <MONITOR>PAGUTL.MAC.1 31-Mar-89 2343	PAGE 13


1)		However, if the hardware checks out and the problem is reproducable,
1)		set this bug dumpable and submit an SPR along with the dump and how to
1)		reproduce the problem.
1)	>,,<DB%NND>)			;[7.1210] 
LINE 5, PAGE 174
2)	Cause:	SCNOFN was called to scan an index block and move all its pages to
2)		disk but the index block contains a pointer that is not an
2)		immediate pointer.
2)	
2)	>,,<DB%NND>)			;[7.1210] 


LINE 23, PAGE 180
1)		but not flush them from memory.  However, SCNOFK was not able to write
1)		the OFN pages to disk.  This BUGCHK should have followed a ILIBPT
1)		BUGCHK since this is the only way that SCNOFK can fail.
1)	>)				;[7400][7247] Could not cache the OFN
LINE 23, PAGE 177
2)		but not flush them from memory.  However, SCNOFK was not able to 
2)		write the OFN pages to disk.  This BUGCHK should have followed a
2)		ILIBPT BUGCHK since this is the only way that SCNOFK can fail.
2)	>)				;[7400][7247] Could not cache the OFN


LINE 9, PAGE 183
1)	Cause:	An OFN is being uncached but the storage address is not a core address.
1)		It should be since it is cached.
1)	>)				;[7247] No!
LINE 9, PAGE 180
2)	Cause:	An OFN is being uncached but the storage address is not a core
2)		address.  It should be since it is cached.
2)	>)				;[7247] No!


LINE 20, PAGE 183
1)		modified.  This is bad because there should be no users of this cached
1)		OFN.
1)	>)				;[7247] Error - OFN has been modified!?
LINE 20, PAGE 180
2)		modified.  This is bad because there should be no users of this
2)		cached OFN.
2)	>)				;[7247] Error - OFN has been modified!?


; PAGUTL.NEW.1 & <MONITOR>PAGUTL.MAC.1 31-Mar-89 2343	PAGE 14



LINE 13, PAGE 195
1)	Cause:	The monitor is attempting to assign to a process a slot in the non-OFN
1)		part of the SPT tables.  Normally a linked list points to the free
1)		slots.  The header is now 0, indicating either that there is confusion
1)		in the list or there is not available slot.  The monitor normally
1)		protects against this event by refusing to assign additional SPT slots
1)		when the available number falls below a fixed minimum.  This BUGHLT
1)		indicates a failure of this mechianism or corruption of the free list.
1)	>)
LINE 13, PAGE 192
2)	Cause:	The monitor is attempting to assign to a process a slot in the
2)		non-OFN part of the SPT tables. Normally a linked list points to
2)		the free slots. The header is now 0, indicating either that there
2)		is confusion in the list or there is not available slot. The
2)		monitor normally protects against this event by refusing to
2)		assign additional SPT slots when the available number falls
2)		below a fixed minimum. This BUGHLT indicates a failure of
2)		this mechianism or corruption of the free list.
2)	>)


LINE 9, PAGE 196
1)	Cause:	The monitor is attempting to deassign a slot in the non-OFN part of the
1)		SPT tables.  The caller is expected to have ensured that the SPT slot
1)		is no longer in use.  The BUGHLT indicates that the share count for the
1)		SPT slot is non-zero, indicating that some process is using the slot.
1)	>)
LINE 9, PAGE 193
2)	Cause:	The monitor is attempting to deassign a slot in the non-OFN
2)		part of the SPT tables. The caller is expected to have ensured
2)		that the SPT slot is no longer in use. The BUGHLT indicates
2)		that the share count for the SPT slot is non-zero, indicating
2)		that some process is using the slot.
2)	>)


LINE 27, PAGE 196
1)	Cause:	The monitor is attempting to deassign a slot in the non-OFN part of the
1)		SPT tables.  It assumes that the slot was used as a page table.  The
1)		BUGHLT occurs because the SPT entry or its backup address is on disk.
1)		The caller probably has used the wrong routine in releasing an OFN.
1)	>)
LINE 28, PAGE 193
2)	Cause:	The monitor is attempting to deassign a slot in the non-OFN
2)		part of the SPT tables. It assumes that the slot was used as a
2)		page table. The BUGHLT occurs because the SPT entry or its
2)		backup address is on disk. The caller probably has used the
2)		wrong routine in releasing an OFN.
2)	>)

; PAGUTL.NEW.1 & <MONITOR>PAGUTL.MAC.1 31-Mar-89 2343	PAGE 15




LINE 3, PAGE 197
1)	Cause:	The monitor is attempting to deassign a slot in the non-OFN part of the
1)		SPT tables.  The caller is expected to ensure that the SPT is no longer
1)		in use.  The BUGHLT indicates that the SPT slot is associated with a
1)		page that has been locked into memory even though the SPT share count
1)		is 0.  This indicates an inconsistency in the monitor's data base.
1)		Probably the page was used as a page table, and not all its page
1)		pointers were cleared properly.  A page table is locked in memory once
1)		for each page in memory to which it points.
1)	>)
LINE 3, PAGE 194
2)	Cause:	The monitor is attempting to deassign a slot in the non-OFN
2)		part of the SPT tables. The caller is expected to ensure that
2)		the SPT is no longer in use. The BUGHLT indicates that the
2)		SPT slot is associated with a page that has been locked into
2)		memory even though the SPT share count is 0. This indicates
2)		an inconsistency in the monitor's data base. Probably the page
2)		was used as a page table, and not all its page pointers were
2)		cleared properly. A page table is locked in memory once for
2)		each page in memory to which it points.
2)	>)
