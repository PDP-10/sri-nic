

; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 1



LINE 1, PAGE 1
1)	; Edit= 8960 to CFSSRV.MAC on 1-Sep-88 by GSCOTT
1)	;*Performance* Change IFNSK to IFSKP wherever possible.
1)	; Edit= 8956 to CFSSRV.MAC on 30-Aug-88 by GSCOTT
1)	;Fix badly formatted BUG.
1)	; Edit= 8951 to CFSSRV.MAC on 26-Aug-88 by LOMARTIRE
1)	;Improve BUG. documentation some more
1)	; Edit= 8874 to CFSSRV.MAC on 10-Aug-88 by RASPUZZI
1)	;Update BUG. documentation again.
1)	; Edit= 8863 to CFSSRV.MAC on 21-Jul-88 by RASPUZZI
1)	;Increase STKVAR for structure names and shutdown messages so that we don't
1)	;trash stacks and cause ILMNRFs.
1)	; UPD ID= 8488, RIP:<7.MONITOR>CFSSRV.MAC.19,   9-Feb-88 12:17:31 by GSCOTT
LINE 1, PAGE 1
2)	; UPD ID= 8488, RIP:<7.MONITOR>CFSSRV.MAC.19,   9-Feb-88 12:17:31 by GSCOTT


LINE 25, PAGE 7
1)	Locks are in one of several states.  First, a lock may be owned locally.  In
1)	this case, any attempts to share this lock must conform to the current level of
1)	ownership.  Second, a lock may reside on the local node, but be unowned.  A
LINE 25, PAGE 7
2)	Locks are in one of several states. First, a lock may be owned locally. In this
2)	case, any attempts to share this lock must conform to the current level of
2)	ownership. Second, a lock may reside on the local node, but be unowned. A


LINE 31, PAGE 7
1)	vote simply is a "braodcasting" of the lock request to all other CFS nodes.
1)	The reqeust is successful is no reply denies the request.  Note this scheme has
1)	the advantage that locks need not be permanent and no single node is ever
1)	responsible for keeping track of a dormant lock.  In principle, this will most
LINE 31, PAGE 7
2)	vote simply is a "braodcasting" of the lock request to all other CFS nodes. The
2)	reqeust is successful is no reply denies the request. Note this scheme has the
2)	advantage that locks need not be permanent and no single node is ever
2)	responsible for keeping track of a dormant lock. In principle, this will most


LINE 14, PAGE 8
1)	no assurances that it will not interfere with any other CI activity.  If this
1)	is zero, CFSDUM will be defined.  If this is a one, CFSDUM is defined
1)	independently of this conditional.  If CFSSCA=0, then this should processor
1)	should either not be on a CI at all, or should be on a CI with no other TOPS-20
1)	host systems.  Any other configuration is unsupported and not likely to operate
1)	correctly.
1)	
1)	In addition, the CFS network number, MYPOR2, defines the CFS subnet that this
LINE 14, PAGE 8

; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 2


2)	no assurances that it will not interfere with any other CI activity. If this is
2)	zero, CFSDUM will be defined. If this is a one, CFSDUM is defined independently
2)	of this conditional. If CFSSCA=0, then this should processor should either not
2)	be on a CI at all, or should be on a CI with no other TOPS-20 host systems. Any
2)	other configuration is unsupported and not likely to operate correctly.
2)	
2)	In addition, the CFS network number, MYPOR2, defines the CFS subnet that this


LINE 2, PAGE 9
1)	the other nodes, and one listener.  The following indicates the contents of
1)	these tables are various stages in the life of a connection.
LINE 2, PAGE 9
2)	the other nodes, and one listener. THe following indicates the contents of
2)	these tables are various stages in the life of a connection.


LINE 24, PAGE 23
1)		CAIN Q3,VC.OPN		;[8960] Open?
1)		IFSKP.			;[8960] No. Forget it then
1)		  MOVE T1,T2		;Get block address
1)		  CALLRET RELRES	;[8960] (T1) Return block to pool and return
1)		ENDIF.
LINE 24, PAGE 23
2)		CAIE Q3,VC.OPN		;OPEN?
2)		IFNSK.			;No. Forget it then
2)		  MOVE T1,T2		;Get block address
2)		  CALL RELRES		;(T1) Return block to pool
2)		  RET           	;No. Forget it then
2)		ENDIF.


LINE 19, PAGE 26
1)		non-zero section.  Examine the stack and change the caller of HSHLOK to
1)		run in a non-zero section.
1)	>)
LINE 19, PAGE 26
2)		non-zero section.
2)	
2)	Action:	Examine the stack and change the caller of HSHLOK to run in a
2)		non-zero section
2)	>)


; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 3



LINE 8, PAGE 28
1)		SOSE SCAILK		;[8960] Last one?
1)		IFSKP.			;[8960] If so.
1)		  TMNN SCWKP		;Any need to action?
1)		  SKIPE SCAQ		;No.  Anything here?
1)		  ANNSK.		;If so
LINE 8, PAGE 28
2)		SOSN SCAILK		;Last one?
2)		IFNSK.			;If so.
2)		 TMNN SCWKP		;Any need to action?
2)		 SKIPE SCAQ		;No. ANything here?
2)		 ANNSK.			;If so


LINE 34, PAGE 31
1)	Cause:	CFSMAP has returned a resource block that is already in use.  This bug
1)		is a debugging check.
1)	>)
LINE 34, PAGE 31
2)	Cause:	CFSMAP has returned a resource block that is already in use. This
2)		bug is a debugging check.
2)	>)


LINE 20, PAGE 36
1)		    IFGE. T2		;[8960] A valid CID?
1)		      CAMN T4,T2	;Is this the CID for the desired node?
LINE 20, PAGE 36
2)		    SKIPL T2		;A valid CID?
2)		    IFNSK.		;Yes, node number is returned
2)		      CAMN T4,T2	;Is this the CID for the desired node?


LINE 30, PAGE 38
1)	CFSGOD:	TMNN HSHCNT,(T1)	;[8960] Unclaimed?
1)		IFSKP.			;[8960] If not
1)		 CAIE T3,.HTOEX		;DO we want exclusive access?
LINE 30, PAGE 38
2)	CFSGOD:	TMNE HSHCNT,(T1)	;Unclaimed?
2)		IFNSK.			;If not
2)		 CAIE T3,.HTOEX		;DO we want exclusive access?


; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 4



LINE 3, PAGE 39
1)	CFSGTX:	SKIPE RTYFLG		;[8960] Want to retry?
1)		IFSKP.			;[8960] If not
1)		 MOVE T1,Q1
LINE 3, PAGE 39
2)	CFSGTX:	SKIPN RTYFLG		;WANT TO RETRY?
2)		IFNSK.			;If not
2)		 MOVE T1,Q1


LINE 17, PAGE 42
1)		SKIPE RTYFLG		;[8960] Shall we try, try again?
1)		IFSKP.			;[8960] If not
1)		  LOAD Q1,HSHDRC,(T1)	;Get the reason for the NO
LINE 17, PAGE 42
2)		SKIPN RTYFLG		;SHALL WE TRY, TRY AGAIN?
2)		IFNSK.			;If not
2)		 LOAD Q1,HSHDRC,(T1)	;Get the reason for the NO


LINE 3, PAGE 45
1)	CFSND3:	SKIPN T3,HSHNBT(T1)	;[8960] Anything here?
1)		IFSKP.			;[8960] If so
1)		  SKIPE AC3		;[8960] User want to leave a record of this?
1)		  IFSKP.		;[8960] Yes
1)		    SETONE HSHRFF,(T1)	;So do it
LINE 3, PAGE 45
2)	CFSND3:	SKIPE T3,HSHNBT(T1)	;ANYTING HERE?
2)		IFNSK.			;If so
2)		 SKIPN AC3		;Want to leave a record of this?
2)		 IFNSK.			;If so
2)		  SETONE HSHRFF,(T1)	;So do it


LINE 28, PAGE 46
1)		  CALL SCASND		;(T1,T2/T3)
1)		  IFSKP.		;[8960] If it worked
1)		    LOOP.		;[8960] Loop for the next one
1)		  ENDIF.		;[8960] Otherwise it failed
1)		  PIOFF
1)		  CALL CFSWDN		;Return the buffer
1)		  PION
1)		  LOOP.
LINE 28, PAGE 46
2)		CALL SCASND
2)		IFNSK.			;If failed
2)		 PIOFF
2)		 CALL CFSWDN		;Return the buffer
2)		 PION

; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 5


2)		ENDIF.
2)		LOOP.


LINE 10, PAGE 50
1)		  SKIPN T1,DLYLOK	;[8960] A delay in effect?
1)		  IFSKP.		;[8960] If so
1)		    SUB T1,TODCLK	;Get relative time
LINE 10, PAGE 50
2)		 SKIPE T1,DLYLOK	;A delay in effect?
2)		 IFNSK.			;If so
2)		  SUB T1,TODCLK		;Get relative time


LINE 32, PAGE 50
1)		SKIPE P3,CFSHCT		;[8960] Get host count of other hosts
1)		IFSKP.			;[8960] If nobody out there...
1)		  MOVE P,CFSSVP		;Restore original stack
1)		  CFSLOK		;Lock up the data base
1)		  OKSKED		;Turn on scheduling
1)		  RET			;And return now
LINE 32, PAGE 50
2)		SKIPN P3,CFSHCT		;GET HOST COUNT OF OTHER HOSTS
2)		IFNSK.			;If nobody out there...
2)		 MOVE P,CFSSVP		;Restore original stack
2)		 CFSLOK			;Lock up the data base
2)		 OKSKED
2)		 RET			;And return now


LINE 7, PAGE 51
1)	VOTE1:	TMNN HSHYES,(Q1)	;[8960] Already vetoed?
1)		IFSKP.			;[8960] Yes
1)		  MOVE P,CFSSVP		;Restore stack
1)		  CFSLOK		;Yes
1)		  OKSKED
LINE 7, PAGE 51
2)	VOTE1:	TMNE HSHYES,(Q1)	;ALREADY VETOED?
2)		IFNSK.
2)		 MOVE P,CFSSVP		;Restore stack
2)		 CFSLOK			;YES.
2)		 OKSKED


; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 6



LINE 22, PAGE 52
1)		TMNN HSVUC,(Q1)		;[8960] Vote to include HSHCOD?
1)		IFSKP.			;[8960] If so
1)		  SETONE CFVUC,(T1)	;Set it
LINE 22, PAGE 52
2)		TMNE HSVUC,(Q1)		;Vote to include HSHCOD?
2)		IFNSK.			;If so
2)		 SETONE CFVUC,(T1)	;Set it


LINE 9, PAGE 53
1)		  TMNN HSHYES,(Q1)	;[8960] Someone veto the request?
1)		  IFSKP.		;[8960] If so...
1)		    CFSLOK
LINE 9, PAGE 53
2)		TMNE HSHYES,(Q1)	;Someone veto the request?
2)		IFNSK.			;If so...
2)		 CFSLOK


LINE 3, PAGE 54
1)		TMNE HSHDLY,(Q1)	;[8960] 
1)		IFSKP.			;[8960] 
1)		  CFSLOK
LINE 3, PAGE 54
2)		TMNN HSHDLY,(Q1)
2)		IFNSK.
2)		 CFSLOK


LINE 24, PAGE 54
1)		TMNE HSHVRS,(Q1)	;[8960] Restart or success?
1)		IFSKP.			;[8960] 
1)		  CFSLOK
LINE 24, PAGE 54
2)		TMNN HSHVRS,(Q1)	;RESTART OR SUCCESS?
2)		IFNSK.
2)		 CFSLOK


LINE 12, PAGE 56
1)		SKIPE T1,VOTQ		;[8960] Get one
1)		IFSKP.			;[8960] If none there
1)		  PION
LINE 12, PAGE 56
2)		SKIPN T1,VOTQ		;GET ONE
2)		IFNSK.
2)		 PION


; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 7



LINE 8, PAGE 57
1)		SKIPN SCAFL1		;[8960] Is KLIPA off-line?
1)		IFSKP.			;[8960] If so
1)		  SETZ T1,0		;either path
1)		  CALL CIONLT		;is it sound yet?
1)		  IFSKP.		;[8960] If yes
1)		    CALL PRTONL		;[8960] Set dual-port access
1)		  ELSE.			;[8960] If not
1)		    MOVX T1,^D1000	;[8960] Come back in a sec
1)		    MOVEM T1,CFSTIM	;[8960] To check it again
1)		  ENDIF.		;[8960] 
1)		ELSE.
LINE 8, PAGE 57
2)		SKIPE SCAFL1		;Is KLIPA off-line?
2)		IFNSK.			;If so
2)		SETZ T1,0		;either path
2)		 CALL CIONLT		;is it sound yet?
2)		 IFNSK.			;If not
2)		  MOVX T1,^D1000	;Come back in a sec
2)		  MOVEM T1,CFSTIM	;To check it again
2)		 ELSE.
2)		  CALL PRTONL		;Set dual-port access
2)		 ENDIF.
2)		ELSE.


LINE 3, PAGE 65
1)		TMNN CFVUC,(Q1)		;[8960] Vote to include HSHCOD?
1)		IFSKP.			;[8960] If so
1)		  MOVE T2,CFDAT(Q1)	;Get required value
LINE 3, PAGE 65
2)		TMNE CFVUC,(Q1)		;Vote to include HSHCOD?
2)		IFNSK.			;If so
2)		 MOVE T2,CFDAT(Q1)	;Get required value


LINE 11, PAGE 69
1)		IFNSK.			;[8960] Failed
1)		  PIOFF
LINE 11, PAGE 69
2)		IFNSK.
2)		 PIOFF


; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 8



LINE 18, PAGE 70
1)		TMNN CFODA,(Q1)		;[8960] Providing optional data?
1)		IFSKP.			;[8960] If so
1)		  DO.
LINE 18, PAGE 70
2)		TMNE CFODA,(Q1)		;Providing optional data?
2)		IFNSK.			;If so
2)		 DO.


LINE 27, PAGE 70
1)		    SKIPN T2,HSHCDA(T1)	;[8960] Want to be notified?
1)		    IFSKP.		;[8960] If so
1)		      CALL 0(T2)	;Do so
LINE 27, PAGE 70
2)		  SKIPE T2,HSHCDA(T1)	;Want to be notified?
2)		  IFNSK.		;If so
2)		   CALL 0(T2)		;Do so


LINE 19, PAGE 73
1)	Cause:	CFS has received a message from a remote system that an OFN has changed
1)		and needs to be verified again. But CFS has found that the OFN is
1)		cached and the OFNLAC bit is not set.  This should not happen since
1)		this bit should be set when the other system was granted access.
1)	>)				;[7247] It's not!
LINE 19, PAGE 73
2)	Cause:	CFS has received a message from a remote system that an OFN
2)		has changed and needs to be verified again. But CFS has found
2)		that the OFN is cached and the OFNLAC bit is not set.  This
2)		should not happen since this bit should be set when the other
2)		system was granted access.
2)	>)				;[7247] It's not!


LINE 35, PAGE 73
1)	Cause:	CFS has received a message from a remote system that an OFN has changed
1)		and needs to be verified again. But CFS has found that it owns the OFN.
1)		It should never have received such a message.
1)	>)
LINE 36, PAGE 73
2)	Cause:	CFS has received a message from a remote system that an OFN
2)		has changed and needs to be verified again. But CFS has found
2)		that it owns the OFN. It should never have received such a
2)		message.
2)	>)


; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 9



LINE 16, PAGE 77
1)	Cause:	Another system sent a "cluster cease" that could not be queued because
1)		there was no available resident free space.
1)	
1)	Action:	If this becomes persistent, find out why there is no freespace
1)		available.  Run SYSDPY and use the RE display to see if the general
1)		pool is being used.  If there is no one particular freespace hog,
1)		consider building your monitor with an increase in the freespace
1)		general pool.  If this problem is reproducible, set this BUGINF
1)		dumpable and submit an SPR along with the dump and instructions on
1)		reproducing the problem.
1)	>,,<DB%NND>)			;[7.1210]
LINE 16, PAGE 77
2)	Cause:	Another system sent a "cluster cease" that could not be queued
2)		because there was no available resident free space.
2)	>,,<DB%NND>)			;[7.1210]


LINE 16, PAGE 78
1)	;[8863]
1)	;Milestone - These values were increased because of ILMNRFs. The
1)	;more structures you have served, the higher potential exists for
1)	;ILMNRFs when this routine scribbles on the stack.
1)	
1)		SLEN==^D20		;[8863] Words to hold structure names
1)		HLEN==^D30		;[8863] Words to hold header text
1)	
1)	CHKCLC::SETZ T1,		;THIS IS THE INTERLOCK
LINE 16, PAGE 78
2)		SLEN==^D14		;WORDS TO HOLD STRUCTURE NAMES
2)		HLEN==^D25		;WORDS TO HOLD HEADER TEXT
2)	
2)	CHKCLC::SETZ T1,		;THIS IS THE INTERLOCK


LINE 17, PAGE 83
1)		CAMLE T1,MYPORT		;[8960] Higher priority than I?
1)		IFSKP.			;[8960] 
1)		  DO.
LINE 17, PAGE 83
2)		CAMG T1,MYPORT		;HIGHER PRIORITY THAN I?
2)		IFNSK.
2)		DO.


; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 10



LINE 15, PAGE 84
1)	Cause:	The call to SC.ACC to accept a connection failed.  This indicates a
1)		possible problem with SCAMPI.
1)	
1)	Data:	NODE - Node Number
LINE 15, PAGE 84
2)	Cause:	The call to SC.ACC failed.
2)	
2)	Data:	NODE - Node Number


LINE 26, PAGE 86
1)		This BUGHLT only occurs in a cluster and will only occur on the system
1)		with the lowest CPU serial number. It happens when a system joins the
1)		cluster and that system has been away longer than the CFS vote delay
1)		period.  This time period is calculated to be
1)		(DLYTIM*maximum_CI_node_seen)+NDSTTM.  Currenty this is 5 seconds per
1)		CI node plus 10 seconds grace period.
1)	
1)	Action:	This BUGHLT usually occurs when a system has been hung for a long
1)		period of time on the CI or if someone has stopped and continued a
1)		halted system in the cluster (using EDDT breakpoints or other methods).
1)		If this problem is persistent, there is a good chance that one of the
1)		systems in the cluster is having CI problems.  Another step which could
1)		be taken would be to increase the value in DLYTIM and see if this
1)		provides enough time for the cluster to stablize.
1)	
1)	Data:	NODE - Number that has re-established a connection
LINE 27, PAGE 86
2)	Data:	NODE - Number that has re-established a connection


LINE 9, PAGE 87
1)		AOS T3,CFSHCM		;[8960] One more full voter on-line
1)		MOVEI T1,0(T2)		;Copy host index
LINE 9, PAGE 87
2)		IFNSK.			;If not
2)		 AOS T3,CFSHCM		;One more full voter on-line
2)		ENDIF.
2)		MOVEI T1,0(T2)		;Copy host index


; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 11



LINE 24, PAGE 89
1)	Cause:	A bad vote packet address has been given to CFSWDN.  The guard word did
1)		not contatin 252525.
1)	>)
LINE 24, PAGE 89
2)	Cause: A bad vote packet address has been given to CFSWDN.
2)	>)


LINE 14, PAGE 92
1)		AOS T3,CFSHCM		;[8960] Full, one more full voter
1)		MOVEI T1,0(Q1)		;Copy the index
LINE 14, PAGE 92
2)		IFNSK.			;If full
2)		 AOS T3,CFSHCM		;One more full voter
2)		ENDIF.
2)		MOVEI T1,0(Q1)		;Copy the index


LINE 12, PAGE 95
1)	Cause:	CFSSRV tried to send an SCA message and that option is not supported in
1)		this version of TOPS-20.
1)	>)
1)	   >	;IFE CFSSCA
LINE 12, PAGE 95
2)	Cause:	CFSSRV tried to send an SCA message and that option is not
2)		supported in this version of TOPS-20>
2)	)
2)	   >	;IFE CFSSCA


LINE 27, PAGE 95
1)		SKIPN CFSSMQ(T2)	;[8960] A queue?
1)		IFSKP.			;[8960] If so
1)		  CALL SENDQ		;Queue it up
LINE 26, PAGE 95
2)		SKIPE CFSSMQ(T2)	;A queue?
2)		IFNSK.			;If so
2)		 CALL SENDQ		;Queue it up


; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 12



LINE 4, PAGE 96
1)		  IFNSK.		;[8960] If failure
1)		    CAIE T1,SCSNEC	;[8960] Not enough credit?
1)		    IFSKP.		;[8960] If so...
1)		      MOVE T1,SCBUFF	;YES.
1)		      MOVE T2,SCHOST	;RESTORE ARGS
1)		      PIOFF		;[8960] Turn off PI system
1)		      TMNN STCRA,(T2)	;[8960] Credit arrive while we weren't looking?
1)		      IFSKP.		;[8960] If so
1)		        PION		;[8960] Turn PI back on
1)		        LOOP.		;[8960]  and call SC.SMG again
1)		      ENDIF.		;[8960]
1)		      CALL SENDQ	;Queue it up
1)		      PION		;[8960] Turn PI back on and continue
1)		    ELSE.		;[8960] Not little credit left, error
1)		      MOVE T3,SCBUFF	;Return buffer address in T3
1)		      RETBAD()		;Didn't send it
1)		    ENDIF.
1)		  ENDIF.		;[8960] End of SMG failure code
1)		ENDDO.
LINE 5, PAGE 96
2)		 IFNSK.
2)		  CAIN T1,SCSNEC	;NOT ENOUGH CREDIT?
2)		  IFNSK.		;If so...
2)		   MOVE T1,SCBUFF	;YES.
2)		   MOVE T2,SCHOST	;RESTORE ARGS
2)		   PIOFF
2)		   TMNE STCRA,(T2)	;Did credit arrive while we weren't looking?
2)		   IFNSK.		;If so
2)		    PION
2)		    LOOP.
2)		   ENDIF.
2)		   CALL SENDQ		;Queue it up
2)		   PION
2)		  ELSE.
2)		   MOVE T3,SCBUFF	;Reuturn buffer address in T3
2)		   RETBAD()		;Didn't send it
2)		  ENDIF.
2)		 ENDIF.
2)		ENDDO.


; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 13



LINE 16, PAGE 101
1)	Cause:	The call to SC.LIS to set up the dump listener failed.  This system
1)		will not participate in any cluster dump.
1)	
1)	Action:	If this problem is reproducible, set this BUGINF dumpable and submit an
1)		SPR along with the dump and instructions on reproducing the problem.
1)	
1)	Data:	ERR - Error code returned by SC.LIS
LINE 16, PAGE 101
2)	Cause:	The call to SC.LIS to set up the dump listener failed.
2)	
2)	Data:	ERR - Error code returned by SC.LIS


LINE 25, PAGE 102
1)	Cause:	The call to SC.LIS failed in CFSLSN.  This indicates a possible problem
1)		with SCAMPI.
1)	
1)	Data:	ERR - Error code returned by SC.LIS
LINE 25, PAGE 102
2)	Cause:	The call to SC.LIS failed.
2)	
2)	Data:	ERR - Error code returned by SC.LIS


LINE 15, PAGE 105
1)		    CAME T2,P4		;[8960] Is it what we want?
1)		    IFSKP.		;[8960] If so
1)		      MOVE P3,P2	;Save the index
LINE 14, PAGE 105
2)		  CAMN T2,P4		;Is it what we want?
2)		  IFNSK.		;If so
2)		   MOVE P3,P2		;Save the index


LINE 15, PAGE 107
1)		  SKIPL T3,0(T2)	;[8960] Delay?
1)		  IFSKP.		;[8960] If so
1)		    TXZ T3,1B0		;Turn off bit
LINE 15, PAGE 107
2)		 SKIPGE T3,0(T2)	;Delay?
2)		 IFNSK.			;If so
2)		  TXZ T3,1B0		;Turn off bit


; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 14



LINE 20, PAGE 110
1)	Action:	If this problem is reproducible, set this BUGINF dumpable and submit an
1)		SPR along with the dump and instructions on reproducing the problem.
1)	>)
LINE 19, PAGE 110
2)	>)


LINE 27, PAGE 111
1)	>)
LINE 28, PAGE 111
2)	Action:	Find the caller in the dump and try to determine why it passed a
2)		bad function code to CFSDAU.
2)	
2)	>)


LINE 24, PAGE 112
1)		TMNN <HSHTWF,HSHWVT,HSHUGD>,(T1) ;[8960] Anybody else doing this?
1)		IFSKP.			;[8960] If so
1)		  MOVE T2,T1		;Copy address
LINE 24, PAGE 112
2)		TMNE <HSHTWF,HSHWVT,HSHUGD>,(T1) ;Anybody else doing this?
2)		IFNSK.			;If so
2)		 MOVE T2,T1		;Copy address


LINE 2, PAGE 113
1)		CAML T2,Q3		;[8960] Is it all set for us?
1)		IFSKP.			;[8960] If not
1)	
1)	;Here when the access is not correct
LINE 33, PAGE 112
2)		CAMGE T2,Q3		;Is it all set for us?
2)		IFNSK.			;If not
   {Skipped 1 page and 1 line}
2)	;Here when the access is not correct


LINE 32, PAGE 114
1)	Cause:	An allocation entry has just been created and CFSSRV can't find it in
1)		the hash table.
1)	>)
LINE 32, PAGE 114
2)	Cause:	An allocation entry has just been created and CFSSRV can't find
2)		it in the hash table.
2)	>)


; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 15



LINE 5, PAGE 115
1)		SKIPN T3,HSHOP1(T1)	;[8960] Anything in here?
1)		IFSKP.			;[8960] If so
1)		  MOVE T2,T1		;Get resource address
LINE 5, PAGE 115
2)		SKIPE T3,HSHOP1(T1)	;Anything in here?
2)		IFNSK.			;If so
2)		 MOVE T2,T1		;Get resource address


LINE 9, PAGE 116
1)	Cause:	The caller wanted to update a directory allocation entry, and no such
1)		entry could be found.
1)	>)
LINE 9, PAGE 116
2)	Cause:	The caller wanted to update a directory allocation entry, and
2)		no such entry could be found
2)	>)


LINE 1, PAGE 125
1)		CALL CFSSPC		;Get some space
1)		IFNSK.			;Error
1)		  MOVEI T1,^D30000	;Pick up stale resources
1)		  MOVEI T2,10		;Just do some
1)		  CALL CFSRSX		;Free up some
1)		  CALL CFSSPC		;Try again
1)		   RETBAD()		;Nope
1)		ENDIF.
LINE 1, PAGE 125
2)		CALL CFSSPC		;GET SOME SPACE
2)		IFNSK.
2)			MOVEI T1,^D30000 ;PICK UP STALE RESOURCES
2)			MOVEI T2,10	;JUST DO SOME
2)			CALL CFSRSX	;FREE UP SOME
2)			CALL CFSSPC	;TRY AGAIN
2)			 RETBAD()	;NOPE
2)		ENDIF.


LINE 18, PAGE 128
1)		CALL CFSSPC		;Get a block
1)		IFNSK.			;If error
1)		  SETZM T1
1)		  MOVEI T2,10		;Just do some space
1)		  CALL CFSRSX		;Failed.  Free up space then
1)		  CALL CFSSPC		;Try again
1)		    RETBAD()		;Failed.  No space
1)		ENDIF.

; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 16


LINE 18, PAGE 128
2)		CALL CFSSPC		;GET A BLOCK
2)		IFNSK.
2)			SETZM T1
2)			MOVEI T2,10	;JUST DO SOME
2)			CALL CFSRSX	;FAILED. FREE UP SPACE THEN
2)			CALL CFSSPC	;TRY AGAIN
2)			 RETBAD()	;FAILED. NO SPACE
2)		ENDIF.


LINE 21, PAGE 134
1)	Cause:	CFSAWT or CFSAWP has been called with an invalid OFN number.  These
1)		routines expect the OFN number to be in the right half of T1 and to be
1)		in the expected range of values.  The caller in the dump should be
1)		examined to determine why it passed a bad OFN number.
1)	>)				;[7247] No, report error
LINE 21, PAGE 134
2)	Cause:	CFSAWT or CFSAWP has been called with an invalid OFN number.
2)		These routines expect the OFN number to be in the right half
2)		of T1 and to be in the expected range of values.
2)	
2)	Action:	Find the caller in the dump and try to determine why it
2)		passed a bad OFN number.
2)	>)				;[7247] No, report error


LINE 29, PAGE 135
1)	Cause:	CFSAWT has been called to acquire an access token for an OFN.  The OFN
1)		access token already exists on this system and the block address is in
1)		CFSOFN.  But the OFN recorded in the block does not match the one
1)		passed into CFSAWT.
1)	>)
1)	   >	;IFN DEBUG
1)		SKIPLE HSHPST(T1)	;[8960][7247] This one in use and good?
1)		IFSKP.			;[8960] If not
1)		  XMOVEI T2,CFSDWT	;Where to do it
LINE 29, PAGE 135
2)	Cause:	CFSAWT has been called to acquire an access token for an OFN.
2)		The OFN access token already exists on this system and the 
2)		block address is in CFSOFN.  But the OFN recorded in the 
2)		block does not match the one passed into CFSAWT.
2)	>)
2)	   >	;IFN DEBUG
2)		SKIPG HSHPST(T1)	;[7247] This one in use and good?
2)		IFNSK.			;If not
2)		 XMOVEI T2,CFSDWT	;Where to do it


; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 17



LINE 1, PAGE 136
1)	CFSUGX:	TMNN <HSHTWF,HSHUGD,HSHWVT>,(P5) ;[8960] Waiting for it somewhere else?
1)		IFSKP.			;[8960] If any of the above
1)		  CFSULK
LINE 1, PAGE 136
2)	CFSUGX:	TMNE <HSHTWF,HSHUGD,HSHWVT>,(P5) ;Waiting for it somewhere else?
2)		IFNSK.
2)		 CFSULK


LINE 11, PAGE 136
1)		TMNN STEXL,(T1)		;[8960] Is this exclusive?
1)		IFSKP.			;[8960] If so
1)		 MOVEI T3,.HTOEX	;Upgrade it now to the maximum
1)		 STOR T3,HSHTYP,(P5)	;And store it
1)		ENDIF.
1)		CAIE T3,.HTOEX		;[8960] Do we hold exclusive rights?
1)		IFSKP.			;[8960] If so
1)	   REPEAT 0,<			;Not using anti-hog device now
LINE 11, PAGE 136
2)		TMNE STEXL,(T1)		;Is this exclusive?
2)		IFNSK.			;If so
2)		 MOVEI T3,.HTOEX	;Upgrade it now to the maximum
2)		 STOR T3,HSHTYP,(P5)	;And store it
2)		ENDIF.
2)		CAIN T3,.HTOEX		;Do we hold exclusive rights?
2)		IFNSK.			;If so
2)	   REPEAT 0,<			;Not using anti-hog device now


LINE 29, PAGE 137
1)		 TMNN HSHODA,(P5)	;[8960] Any optional data?
1)		 IFSKP.			;[8960] If so,
1)		   MOVE T2,HSHOPT(P5)	;Get it
LINE 29, PAGE 137
2)		 TMNE HSHODA,(P5)	;Any optional data?
2)		 IFNSK.			;If so,
2)		  MOVE T2,HSHOPT(P5)	;Get it


LINE 4, PAGE 138
1)		SKIPN T2,HSHWTM(P5)	;[8960] gave us a time to wait?
1)		IFSKP.			;[8960] If so
1)		  CAIGE T2,^D20		;Wait at least this long
1)		  MOVEI T2,^D20		;""
1)		  JRST CFSUGT		;[8960] Enter below
1)		ENDIF.
LINE 4, PAGE 138
2)		SKIPE T2,HSHWTM(P5)	;gave us a time to wait?

; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 18


2)		IFNSK.			;If so
2)		 CAIGE T2,^D20		;Wait at least this long
2)		 MOVEI T2,^D20		;""
2)		 SKIPA
2)		ENDIF.


LINE 15, PAGE 138
1)	CFSUGT:	ADD T2,TODCLK		;[8960] Wait time
1)		MOVEM T2,HSHTIM(P5)
LINE 15, PAGE 138
2)		ADD T2,TODCLK		;Wait time
2)		MOVEM T2,HSHTIM(P5)


LINE 20, PAGE 138
1)		SKIPE WTFLAG		;[8960] Did we set the wait flag?
1)		IFSKP.			;[8960] If so
1)		  SETZRO HSHTWF,(P5)
1)		ENDIF.
1)		SKIPG HSHPST(P5)	;[8960][7247] Has it been released or uncached?
1)		IFSKP.			;[8960] If not
1)		  SETZRO <HSHRTY,HSHVRS>,(P5)
LINE 20, PAGE 138
2)		SKIPN WTFLAG		;Did we set the wait flag?
2)		IFNSK.			;If so
2)		 SETZRO HSHTWF,(P5)
2)		ENDIF.
2)		SKIPLE HSHPST(P5)	;[7247] Has it been released or uncached?
2)		IFNSK.			;If not
2)		 SETZRO <HSHRTY,HSHVRS>,(P5)


LINE 32, PAGE 138
1)		SOJE T1,CFSUGL		;[8960] Decrement lock value, are we the last?
1)		STOR T1,HSHLKF,(P5)	;We are not the last, replace new count
1)		JRST CFSFAL		;Unlock and return
   {Skipped 1 page and 1 line}
1)	;[8960] Here when we are the last (HSKLKF=1)
1)	
1)	CFSUGL:	MOVE T1,HSHCOD(P5)	;[8960] Get the OFN
1)		ADD T1,CFSOFN		;Point to OFN table entry
LINE 32, PAGE 138
2)		SOSE T1			;Are we the last?
2)		IFNSK.			;If not
2)		 STOR T1,HSHLKF,(P5)	;Replace it
2)		 JRST CFSFAL
2)		ENDIF.
2)		MOVE T1,HSHCOD(P5)	;Get the OFN
2)		ADD T1,CFSOFN		;Point to OFN table entry


; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 19



LINE 10, PAGE 140
1)	Cause:	A call was made to create an OFN access token but SPTH for the OFN is
1)		not set up.
1)	>)
LINE 10, PAGE 140
2)	Cause:	A call was made to create an OFN access token but SPTH for the
2)		OFN is not set up.
2)	>)


LINE 22, PAGE 140
1)	Cause:	A cached access token is being requested.  As expected, it is in the
1)		hash table and not in CFSOFN.  But HSHTAM is not set as expected.
1)	>)				;[7247] No, report error
1)		  CAME P1,HSHCOD(T1)	;[7247] Is this the same OFN?
1)	          BUG.(HLT,CFAOFM,CFSSRV,SOFT,<CFSSRV - OFN mismatch in cached token>,,<
1)	
1)	Cause:	A cached access token has been found for a certain OFN but the OFN
1)		stored in the hash block does not agree.
1)	>)				;[7247] No, report error
LINE 22, PAGE 140
2)	Cause:	A cached access token is being requested.  As expected, it
2)		is in the hash table and not in CFSOFN.  But HSHTAM is not
2)		set as expected.
2)	>)				;[7247] No, report error
2)		  CAME P1,HSHCOD(T1)	;[7247] Is this the same OFN?
2)	          BUG.(HLT,CFAOFM,CFSSRV,SOFT,<CFSSRV - OFN mismatch in cached token>,,<
2)	
2)	Cause:	A cached access token has been found for a certain OFN
2)		but the OFN stored in the hash block does not agree.
2)	>)				;[7247] No, report error


LINE 25, PAGE 142
1)		TMNN HSHODA,(P5)	;[8960] Any optional data?
1)		IFSKP.			;[8960] If so,
1)		  MOVE T2,HSHOPT(P5)	;Get it
LINE 25, PAGE 142
2)		TMNE HSHODA,(P5)	;Any optional data?
2)		IFNSK.			;If so,
2)		 MOVE T2,HSHOPT(P5)	;Get it


; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 20



LINE 13, PAGE 143
1)	Cause:	CFSAWT/CFSAWP was called to get a CFS resource block for a token. This
1)		routine ALWAYS sets the HSHKPH bit when it obtains this token. This
1)		BUGHLT was arrived at when the routine was returning to its caller and
1)		the keep bit was not set.  The dump should reveal how the keep bit got
1)		cleared or who cleared it.
1)	>)				;[7.1029] Keep bit not set?????
LINE 13, PAGE 143
2)	Cause:	CFSAWT/CFSAWP was called to get a CFS resource block for
2)		a token. This routine ALWAYS sets the HSHKPH bit when it
2)		obtains this token. This BUGHLT was arrived at when the
2)		routine was returning to its caller and the keep bit was
2)		not set.
2)	>)				;[7.1029] Keep bit not set?????


LINE 30, PAGE 148
1)	Cause:	CFSFWT was called to free the file access token for an OFN and the OFN
1)		is cached.  But the call to HSHLOK did not find the resource block for
1)		the file access token.  One should be there.
1)	>)				;[7247] Yes so it should be in hash table!
LINE 30, PAGE 148
2)	Cause:	CFSFWT was called to free the file access token for an OFN and the 
2)		OFN is cached.  But the call to HSHLOK did not find the resource
2)		block for the file access token.  One should be there.
2)	>)				;[7247] Yes so it should be in hash table!


LINE 36, PAGE 151
1)		TMNN SPTFR,(T2)		;[8960] Someone waiting for us?
1)		IFSKP.			;[8960] If so
1)		  CFSULK
LINE 36, PAGE 151
2)		TMNE SPTFR,(T2)		;Someone waiting for us?
2)		IFNSK.			;If so
2)		 CFSULK


LINE 4, PAGE 152
1)		TMNN HSHLKF,(T1)	;[8960] Now interlocked?
1)		IFSKP.			;[8960] If so
1)		  SETZRO <HSHTYP,HSHCNT>,(T1) ;[7247] Clear type and count but not KEEP
LINE 4, PAGE 152
2)		TMNE HSHLKF,(T1)	;Now interlocked?
2)		IFNSK.			;If so
2)		 SETZRO <HSHTYP,HSHCNT>,(T1)  ;[7247] Clear type and count but not KEEP


; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 21



LINE 16, PAGE 152
1)	Cause:	CFSSRV is trying to remove a file access token and has found the token
1)		in the hash table but not in the OFN token table. This indicates that
1)		one of the data bases is incorrect.
1)	>)
LINE 16, PAGE 152
2)	Cause:	CFSSRV is trying to remove a file access token and has found the
2)		token in the hash table but not in the OFN token table. This indicates
2)		that one of the data bases is incorrect.
2)	>)


LINE 26, PAGE 153
1)		before an OFN is released. This BUGHLT indicates that the token has not
1)		been deleted or cached.
1)	
1)	>)				;[7247] Found but not cached - error!
LINE 26, PAGE 153
2)		before an OFN is released. This BUGHLT indicates that the token has
2)		not been deleted or cached.
2)	
2)	>)				;[7247] Found but not cached - error!


LINE 24, PAGE 154
1)	Cause:	CFSUNC has been called to uncache the token for a certain OFN.  The
1)		file access token should have been cached and in the hash table but it
1)		was not found.  To diagnose the problem, attempt to locate the token in
1)		question and find out where it is (probably on the free list).  It will
1)		not be easy to determine how the token got there.
1)	>)				;[7247] Not found - error!!
   {Skipped 1 page and 1 line}
1)		TMNN HSHLKF,(T1)	;[8960][7247] Now interlocked?
1)		IFSKP.			;[8960][7247] If so
1)		  SETZRO <HSHTYP,HSHCNT>,(T1)  ;[7247] Clear status bits but not KEEP
LINE 24, PAGE 154
2)	Cause:	CFSUNC has been called to uncache the token for a certain OFN.
2)		The file access token should have been cached and in the hash
2)		table but it was not found.
2)	>)				;[7247] Not found - error!!
   {Skipped 1 page and 1 line}
2)		TMNE HSHLKF,(T1)	;[7247] Now interlocked?
2)		IFNSK.			;[7247] If so
2)		  SETZRO <HSHTYP,HSHCNT>,(T1)  ;[7247] Clear status bits but not KEEP


; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 22



LINE 11, PAGE 155
1)	Cause:	CFSUNC has been called to uncache the token for a certain OFN.  We
1)		found the access token for the OFN but it is not cached.
1)	>)				;[7247] No, error
LINE 11, PAGE 155
2)	Cause:	CFSUNC has been called to uncache the token for a certain OFN.
2)		We found the access token for the OFN but it is not cached.
2)	>)				;[7247] No, error


LINE 18, PAGE 155
1)	Cause:	CFSUNC has been called to uncache the token for a certain OFN.  We
1)		found the access token for the OFN but the OFN stored in the resource
1)		block does not match the one we should be uncaching.
1)	>)				;[7247] No - error
LINE 18, PAGE 155
2)	Cause:	CFSUNC has been called to uncache the token for a certain OFN.
2)		We found the access token for the OFN but the OFN stored in the
2)		resource block does not match the one we should be uncaching.
2)	>)				;[7247] No - error


LINE 13, PAGE 158
1)	Cause:	CFSBEF was called to broadcast the EOF pointer for an OFN.  This OFN
1)		does not have an entry in the CFSOFN table.
1)	>)				;Report error
LINE 13, PAGE 158
2)	Cause:	CFSBEF was called to broadcast the EOF pointer for an OFN.  This
2)		OFN does not have an entry in the CFSOFN table.
2)	>)				;Report error


LINE 13, PAGE 160
1)		complete. However, as this is not a real CFS monitor, DDMP should never
1)		have been requested to do this.  This was probably caused by a bad
1)		monitor build.
1)	>)
LINE 13, PAGE 160
2)		complete. However, as this is not a real CFS monitor, DDMP should
2)		never have been requested to do this.
2)	>)


; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 23



LINE 10, PAGE 162
1)		TMNE SPTSR,(Q2)		;[8960] Exclusive?
1)		IFSKP.			;[8960] If not
1)		  DMOVE T1,[EXP .HTOAD,.SPSRD] ;Share it
1)		ELSE.
LINE 10, PAGE 162
2)		TMNN SPTSR,(Q2)		;Exclusive?
2)		IFNSK.			;If not
2)		 DMOVE T1,[.HTOAD	;Share it
2)			   .SPSRD]
2)		ELSE.


LINE 11, PAGE 168
1)	Cause:	In routine CFMDSN, CFSGET has granted us access to an already existing
1)		DSN token.  But when we tried to look up token in the CFS data base, it
1)		could not be found.  Examination of the dump should try to determine
1)		how the DSN token was released.  The only way a DSN token can be
1)		released is by dismounting the structure to which it belongs.  This
1)		should not happen because we have the device tables locked while we are
1)		in CFMDSN.
LINE 11, PAGE 168
2)	Cause:	In routine CFMDSN, CFSGET has granted us access to an already
2)		existing DSN token. But when we tried to look up token in the
2)		CFS data base, it could not be found.
2)	
2)	Action:	Examine the dump and try to determine how the DSN token was
2)		released. The only way a DSN token can be released is by
2)		dismounting the structure to which it belongs. This should not
2)		happen because we have the device tables locked while we are
2)		in CFMDSN.


LINE 27, PAGE 168
1)	Cause:	Routine CFMDSN was called to register a DSN for a disk mount.  However,
1)		the DSN supplied was already is use by a structure of another name.
1)		The most likely cause of this BUGCHK is that there is more than one
1)		drive with the same serial number available to the system.
1)	
1)	Action:	Contact Field Service and have them change the serial number on one of
1)		the drives.
1)	
1)	Data:	HSHDSN  - High order disk serial number
LINE 29, PAGE 168
2)	Cause:	Routine CFMDSN was called to register a DSN for a disk mount.
2)		However, the DSN supplied was already is use by a structure of
2)		another name. The most likely cause of this BUGCHK is that
2)		there is more than one drive with the same serial number
2)		available to the system.

; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 24


2)	
2)	Action:	Contact Field Service and have them change the serial number
2)		on one of the drives.
2)	
2)	Data:	HSHDSN  - High order disk serial number


LINE 33, PAGE 171
1)	Cause:	A request was made to change the mount type of a structure, and the CFS
1)		data base has no record of the structure being mounted.
1)	>)
LINE 33, PAGE 171
2)	Cause:	A request was made to change the mount type of a structure, and the
2)		CFS data base has no record of the structure being mounted.
2)	>)


LINE 12, PAGE 178
1)	Cause:	CFS could not verify an existing structure resource during the join
1)		operation.  This probably means there is a structure naming conflict.
1)	
1)		There is one known scenario for this BUGHLT.  If the CFS joining
1)		process did not complete properly, then this system may have acquired
1)		some of the resources exclusively when they were also held on other
1)		nodes.  By the time STRVVT is called to verify the structure access,
1)		all the CFS connections have completed.  So, the verification of
1)		exclusive access has failed now that all the other cluster systems are
1)		voted with.
1)	
1)	Action:	Insure that there is no naming conflict or drive serial number conflict
1)		with the structures.  Insure that the BS: and PS: are not mounted
1)		exclusively by any other system in the cluster.  If the structures all
1)		appear to be in order, submit an SPR with the dump and a copy of
1)		MONITR.EXE.
1)	>)
LINE 12, PAGE 178
2)	Cause:	CFS could not verify an existing structure resource during
2)		the join operation. This probably means there is a structure
2)		naming conflict.
2)	>)


LINE 24, PAGE 180
1)		which was passed has been released.  Now, we are attempting to find the
1)		original block and this has failed.  To diagnose this problem, look in
1)		CFS free space to try to find the remains of the original block.  Try
1)		to determine how the block could have been released even though this
1)		routine acquired it.
1)	>)				;[7348] Error!
LINE 24, PAGE 180
2)		which was passed has been released.  Now, we are attempting to find

; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 25


2)		the original block and this has failed.
2)	
2)	Action: Look in CFS free space to try to find the remains of the original 
2)		block.  Try to determine how the block could have been released even 
2)		though this routine acquired it.
2)	>)				;[7348] Error!


LINE 13, PAGE 182
1)		for a certain OFN.  This OFN was dismounted so the routine must look in
1)		the JFN block for the structure name because the STRTAB entry is zero.
1)		However, the conversion from OFN to JFN failed.  To diagnose this
1)		problem, investigate the dump to try to determine why the call to
1)		OFNJFN failed.
1)	>)				;[7315] Error!
LINE 13, PAGE 182
2)		for a certain OFN.  This OFN was dismounted so the routine must look
2)		in the JFN block for the structure name because the STRTAB entry is 
2)		zero.  However, the conversion from OFN to JFN failed.
2)	
2)	Action:	Investigate the dump to try to determine why the call to OFNJFN failed.
2)	>)				;[7315] Error!


LINE 26, PAGE 185
1)	Action:	If this problem is reproducible, set this BUGCHK dumpable and submit an
1)		SPR along with the dump and instructions on reproducing the problem.
1)	>)
LINE 25, PAGE 185
2)	>)


LINE 7, PAGE 187
1)	Cause:	This system has detected an illegal configuration.  There may be too
1)		many nodes in the network.  The caller of this routine should be
1)		examined for more details.
1)	>)
LINE 7, PAGE 187
2)	Cause:	This system has detected an illegal configuration. There may be 
2)		too many nodes in the network. The caller of this routine should 
2)		be examined for more details.
2)	>)


; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 26



LINE 17, PAGE 191
1)	Cause:	A pack of a mounted structure has been moved to a new unit and the new
1)		CFS mount resource already exists for the new drive.  Or, a drive on
1)		which there is a pack of a mounted structure has been given a new drive
1)		serial number and the new CFS mount resource already exists for the new
1)		drive.  This indicates either the CFS database is wrong, or PHYSIO's
1)		database is wrong.
LINE 17, PAGE 191
2)	Cause:	A pack of a mounted structure has been moved to a new unit and
2)		the new CFS mount resource already exists for the new drive.
2)	      	Or, a drive on which there is a pack of a mounted structure has
2)		been given a new drive serial number and the new CFS mount 
2)		resource already exists for the new drive.
2)		This indicates either the CFS data base is wrong, or PHYSIO's
2)		data base is wrong.


LINE 10, PAGE 194
1)	Cause:	An attempt to connect to the cluster dump listener on another node has
1)		failed.  This means that, most likely, when this node crashes, the
1)		remote node will not.  Chances are, this BUGINF will not appear on the
1)		CTY or in ERROR.SYS but it should be queued in the dump.
1)	
1)	Action:	If this problem is reproducible, set this BUGCHK dumpable and submit an
1)		SPR along with the dump and instructions on reproducing the problem.
1)	
1)	Data:	NODE - CI node number of remote system
LINE 10, PAGE 194
2)	Cause:	An attempt to connect to the cluster dump listener on another node
2)		has failed.  This means that, most likely, when this node crashes,
2)		the remote node will not.  Chances are, this BUGINF will not appear
2)		on the CTY or in ERROR.SYS but it should be queued in the dump.
2)	
2)	Data:	NODE - CI node number of remote system


LINE 28, PAGE 194
1)	Cause:	A call was made to CFSDMP to force a cluster dump.  The other systems
1)		in the cluster should have crashed with a KLPDMP BUGHLT.  This occurs
1)		when location 67 has a non-zero value or it the code actually calls
1)		into CFSDMP directly.
1)	
1)	Action:	If the cluster dump was not performed legitimately, then it is possible
1)		that the monitor mistakenly trashed location 67 causing the cluster
1)		dump.  In this case, an SPR should be submitted along with the dump(s)
1)		from the systems and any insturctions on reproducing the problem.
1)	>)
LINE 25, PAGE 194
2)	Cause:	A call was made to CFSDMP to force a cluster dump.  The other 

; CFSSRV.NEW.1 & <MONITOR>CFSSRV.MAC.1 31-Mar-89 2319	PAGE 27


2)		systems in the cluster should have crashed with a KLPDMP BUGHLT.
2)	>)


LINE 14, PAGE 196
1)	Action:	Have field service check out the system's CI20.
1)	>)
1)	
1)	CFNCNT:	BUG.(HLT,CFZCNT,CFSSRV,SOFT,<CFSSRV - Zero HSHCNT before decrement>,,<
1)	
1)	Cause:	A routine wants to decrement the resource share count but the count is
1)		already zero.
1)	>)
LINE 13, PAGE 196
2)	>)
2)	
2)	CFNCNT:	BUG. (HLT,CFZCNT,CFSSRV,SOFT,<CFSSRV - Zero HSHCNT before decrement>,,<
2)	
2)	Cause:	A routine wants to decrement the resource share count but the
2)		count is already zero.
2)	>)


LINE 13, PAGE 197
1)	Cause:	A CFS connection has been received from another node on the CI20.
1)	
1)	Data:	NODE - Number of connecting node
LINE 13, PAGE 197
2)	Cause:	A CFS connection has been received from another node on the CI-20.
2)	
2)	Data:	NODE - Number of connecting node


LINE 13, PAGE 198
1)	Cause:	A CFS disconnect request has been received from a remote node on the
1)		CI20.
1)	
1)	Data:	NODE - Remote node number
LINE 13, PAGE 198
2)	Cause:	A CFS disconnect request has been received from a remote node on
2)		the CI-20.
2)	
2)	Data:	NODE - Remote node number
