

; IMPDV.MAC.1 & <MONITOR>IMPDV.MAC.1 24-Feb-89 1720	PAGE 1



LINE 1, PAGE 1
1)	;[MACBETH]SRC:<7.FT2.MONITOR.STANFORD>IMPDV.MAC.2,  5-Apr-88 11:20:12, Edit by A.APPLEHACKS
1)	; FT7.2 Merge
1)	;[MACBETH]SRC:<7.FT1.MONITOR.STANFORD>IMPDV.MAC.2, 22-Jan-88 18:48:52, Edit by A.APPLEHACKS
1)	; FT7 Merge
1)	;;PS:<6-1-MONITOR>IMPDV.MAC.8, 20-Sep-85 19:58:09, Edit by BILLW
1)	;; replace XNENT in supposedly resident code with XRENT
1)	;;<6-1-MONITOR>IMPDV.MAC.7, 28-Apr-85 14:46:05, Edit by LOUGHEED
1)	;;<6-1-MONITOR.FT6>IMPDV.MAC.2, 12-Aug-85 18:15:24, Edit by WHP4
1)	;;Stanford changes:
1)	;; To co-exist with MEIS, fix assumptions that MAXLDR =4
1)	;; Fix off-by-one errors in SNDIM% and RCVIM%
1)	;; Allow WOPR's to do ASNSQ% functions
1)	;; No more IMPINC buginfs to clutter up SPEAR log
1)	;
1)	; UPD ID= 8698, RIP:<7.MONITOR>IMPDV.MAC.9,  13-Apr-88 20:52:09 by RASPUZZI
1)	;TCO 7.1274 - Put code back that TCO 7.1264 took out. What was I thinking?
1)	; UPD ID= 8691, RIP:<7.MONITOR>IMPDV.MAC.8,  29-Mar-88 14:44:50 by RASPUZZI
1)	;TCO 7.1264 - Prevent SKDPF1s and PITRAPs by removing code that it appears
1)	;	      the Internet fork does.
1)	; UPD ID= 8526, RIP:<7.MONITOR>IMPDV.MAC.7,   9-Feb-88 16:15:07 by GSCOTT
1)	;TCO 7.1218 - Update copyright date.
1)	; UPD ID= 8415, RIP:<7.MONITOR>IMPDV.MAC.6,   4-Feb-88 12:11:05 by GSCOTT
1)	;TCO 7.1210 - Set IMPHNW and IMPINC normally not dumpable.
1)	; UPD ID= 143, RIP:<7.MONITOR>IMPDV.MAC.5,  28-Sep-87 10:09:17 by GSCOTT
1)	; More of TCO 7.1058, SPR 21636, used P2 rather than T2 at ANA2IP+3
1)	; UPD ID= 116, RIP:<7.MONITOR>IMPDV.MAC.4,  17-Sep-87 14:40:55 by GSCOTT
1)	; TCO 7.1058 - Support class B and C networks, add table of contents
1)	; *** Edit 7419 to IMPDV.MAC by RASPUZZI on 26-Feb-87
1)	; Prevent SKDPF1's and maybe PITRAP's by moving PI level code and scheduler
1)	; routines from XNCOD to XRCOD. This happened because of a programmer slip when
1)	; using the .XNENT macro.
1)	; UPD ID= 2083, SNARK:<6.1.MONITOR>IMPDV.MAC.7,   3-Jun-85 14:42:48 by MCCOLLUM
1)	;TCO 6.1.1406  - Update copyright notice.
1)	; UPD ID= 1600, SNARK:<6.1.MONITOR>IMPDV.MAC.6,   7-Mar-85 15:50:20 by PAETZOLD
LINE 1, PAGE 1
2)	;[SRI-NIC]SRC:<6-1-MONITOR>IMPDV.MAC.6, 21-Jan-88 21:56:30, Edit by MKL
2)	; fix bug in stats
2)	;[SRI-NIC]SRC:<6-1-MONITOR>IMPDV.MAC.4, 10-Nov-87 16:52:40, Edit by MKL
2)	; add statistics
2)	;SRC:<6-1-MONITOR>IMPDV.MAC.2, 19-Feb-87 09:56:05, Edit by KNIGHT
2)	; Enable IMPINC BUGINFs.  
2)	;PS:<6-1-MONITOR>IMPDV.MAC.8, 20-Sep-85 19:58:09, Edit by BILLW
2)	; replace XNENT in supposedly resident code with XRENT
2)	;<6-1-MONITOR>IMPDV.MAC.7, 28-Apr-85 14:46:05, Edit by LOUGHEED
2)	;<6-1-MONITOR.FT6>IMPDV.MAC.2, 12-Aug-85 18:15:24, Edit by WHP4
2)	;Stanford changes:
2)	; To co-exist with MEIS, fix assumptions that MAXLDR =4
2)	; Fix off-by-one errors in SNDIM% and RCVIM%

; IMPDV.MAC.1 & <MONITOR>IMPDV.MAC.1 24-Feb-89 1720	PAGE 2


2)	; Allow WOPR's to do ASNSQ% functions
2)	; No more IMPINC buginfs to clutter up SPEAR log
2)	;
2)	; UPD ID= 1600, SNARK:<6.1.MONITOR>IMPDV.MAC.6,   7-Mar-85 15:50:20 by PAETZOLD


LINE 39, PAGE 1
1)	;TCO 6.1.1041 - Move ARPANET to XCDSEC
1)	; UPD ID= 314, SNARK:<TCPIP.5.4.MONITOR>IMPDV.MAC.11,  18-Oct-84 15:41:59 by PAETZOLD
LINE 22, PAGE 1
2)	;TCO 6.1041 - Move ARPANET to XCDSEC
2)	; UPD ID= 314, SNARK:<TCPIP.5.4.MONITOR>IMPDV.MAC.11,  18-Oct-84 15:41:59 by PAETZOLD


LINE 84, PAGE 1
1)	;	COPYRIGHT (c) DIGITAL EQUIPMENT CORPORATION 1976, 1988.
1)	;	ALL RIGHTS RESERVED.
1)	;
1)	;	THIS SOFTWARE IS FURNISHED UNDER A  LICENSE AND MAY BE USED AND  COPIED
1)	;	ONLY IN  ACCORDANCE  WITH  THE  TERMS OF  SUCH  LICENSE  AND  WITH  THE
1)	;	INCLUSION OF THE ABOVE  COPYRIGHT NOTICE.  THIS  SOFTWARE OR ANY  OTHER
1)	;	COPIES THEREOF MAY NOT BE PROVIDED  OR OTHERWISE MADE AVAILABLE TO  ANY
1)	;	OTHER PERSON.  NO  TITLE TO  AND OWNERSHIP  OF THE  SOFTWARE IS  HEREBY
1)	;	TRANSFERRED.
1)	;
1)	;	THE INFORMATION IN THIS  SOFTWARE IS SUBJECT  TO CHANGE WITHOUT  NOTICE
1)	;	AND SHOULD  NOT  BE CONSTRUED  AS  A COMMITMENT  BY  DIGITAL  EQUIPMENT
1)	;	CORPORATION.
1)	;
1)	;	DIGITAL ASSUMES NO  RESPONSIBILITY FOR  THE USE OR  RELIABILITY OF  ITS
1)	;	SOFTWARE ON EQUIPMENT THAT IS NOT SUPPLIED BY DIGITAL.
1)	
1)	
1)		SEARCH ANAUNV,PROLOG
1)		TTITLE	(IMPDV,IMPDV,< - ARPANET 1822 Host IMP Communication>)
1)	
1)	SIQTM0==^D30000			;SPECIAL QUEUE TIME-OUT INTERVAL
1)	^L	Subttl	Table of Contents
1)	
1)	;		     Table of Contents for IMPDV
1)	;
1)	;				  Section		      Page
1)	;
1)	;
1)	;    1. IMP Going Down Message Notification Handling . . . . .   3
1)	;    2. DBGIM JSYS . . . . . . . . . . . . . . . . . . . . . .   4
1)	;    3. 1822 Input Processing  . . . . . . . . . . . . . . . .   7
1)	;    4. Irregular 1822 IMP to Host Message Handling  . . . . .   8
1)	;    5. Irregular 1822 Message Processors  . . . . . . . . . .   9
1)	;    6. 1822 to IP Address Translation . . . . . . . . . . . .  12
1)	;    7. Output Done Handling - Queue for Retransmission  . . .  13

; IMPDV.MAC.1 & <MONITOR>IMPDV.MAC.1 24-Feb-89 1720	PAGE 3


1)	;    8. IMPHDR - Create Arpanet local leader from Internet V4   14
1)	;    9. IMPEIN - End of Input Handling . . . . . . . . . . . .  16
1)	;   10. 1822 Buffer Handling Routines  . . . . . . . . . . . .  18
1)	;   11. More 1822 Buffer Handling Routines . . . . . . . . . .  19
1)	;   12. IMPCLQ - Clear IMP Queues  . . . . . . . . . . . . . .  20
1)	;   13. 1822 Buffer Unlocking and Locking  . . . . . . . . . .  21
1)	;   14. 1822 Interface State Handling  . . . . . . . . . . . .  22
1)	;   15. IMPDWN - Down Sequence in Progress . . . . . . . . . .  24
1)	;   16. Start input and Initialization . . . . . . . . . . . .  25
1)	;   17. IMPHLT - Take network down . . . . . . . . . . . . . .  26
1)	;   18. IMP Special Queue Stuff - ASNSQ% JSYS  . . . . . . . .  27
1)	;   19. RELSQ% JSYS - Release Special Q  . . . . . . . . . . .  31
1)	;   20. RCVIM% JSYS - Receive Raw Message  . . . . . . . . . .  32
1)	;   21. SNDIM% JSYS - Send Special Message . . . . . . . . . .  35
1)	;   22. Special Queues Random Routines . . . . . . . . . . . .  39
1)	;   23. SIQCHK - Check for unclaimed messages  . . . . . . . .  40
1)	;   24. End of IMPDV . . . . . . . . . . . . . . . . . . . . .  41
1)	^L	SUBTTL IMP Going Down Message Notification Handling
LINE 1, PAGE 2
2)	;THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY  BE  USED
2)	;OR COPIED ONLY IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
2)	;
2)	;COPYRIGHT  (C)  DIGITAL  EQUIPMENT  CORPORATION  1978, 1984.
2)	;ALL RIGHTS RESERVED.
2)	
2)	
2)		SEARCH ANAUNV,PROLOG
2)		TTITLE	(IMPDV,IMPDV,< - ARPANET 1822 Host IMP Communication>)
2)	IFN NICSW,<
2)		extern .nct0,.nct1
2)	>
2)	
2)	IFNDEF REL6,<REL6==1>
2)	SIQTM0==^D30000			;SPECIAL QUEUE TIME-OUT INTERVAL
2)	
2)	^L	SUBTTL IMP Going Down Message Notification Handling


LINE 10, PAGE 3
1)		XSWAPCD
1)	CHKI7::
LINE 10, PAGE 3
2)	IFE REL6,<SWAPCD>
2)	IFN REL6,<XSWAPCD>
2)	
2)	CHKI7::


; IMPDV.MAC.1 & <MONITOR>IMPDV.MAC.1 24-Feb-89 1720	PAGE 4



LINE 15, PAGE 3
1)	[From SYSTEM: ARPANET IMP going down for /]
1)		SETZ T3,
LINE 17, PAGE 3
2)	[From SYSTEM: IMP going down for /]
2)		SETZ T3,


LINE 3, PAGE 4
1)	IFN IPPDSW,<
LINE 3, PAGE 4
2)	IFE REL6,<RESCD>		; THIS CODE IS RESIDENT
2)	IFN REL6,<XRESCD>		; THIS CODE IS RESIDENT
2)	
2)	IFN IPPDSW,<


LINE 15, PAGE 4
1)	IFE STANSW,<
1)		XNENT (.DBGIM,G)
1)	>;IFE STANSW
1)	IFN STANSW,<	; XNENT does its own XSWAPCD, and this should be resident
1)		XRENT (.DBGIM,G)
1)	>;IFN STANSW
LINE 18, PAGE 4
2)	IFE REL6,<.DBGIM::>
2)	IFE STANSW,<
2)	IFN REL6,<XNENT .DBGIM,G>
2)	>;IFE STANSW
2)	IFN STANSW,<	; XNENT does its own XSWAPCD, and this should be resident
2)	IFN REL6,<XRENT .DBGIM,G>
2)	>;IFN STANSW


LINE 7, PAGE 7
1)	IFE STANSW,<
1)		XNENT (IMICHK,G)
1)	>;IFE STANSW
1)	IFN STANSW,<
1)		XRENT (IMICHK,G)
1)	>;IFN STANSW	 ;XNENT does its own XSWAPCD, and this should be resident
1)	
1)	IMPCHK::
LINE 7, PAGE 7
2)	IFE REL6,<IMICHK::>
2)	IFE STANSW,<
2)	IFN REL6,<XNENT IMICHK,G>
2)	>;IFE STANSW
2)	IFN STANSW,<	; XNENT does its own XSWAPCD, and this should be resident

; IMPDV.MAC.1 & <MONITOR>IMPDV.MAC.1 24-Feb-89 1720	PAGE 5


2)	IFN REL6,<XRENT IMICHK,G>
2)	>;IFN STANSW
2)	
2)	IMPCHK::


LINE 6, PAGE 8
1)		XRESCD			;[7419] This code is resident
1)	
1)	IMP8XQ:	AOS T3,IMP8XI		;INCREMENT INPUT INDEX
LINE 6, PAGE 8
2)	IMP8XQ:	AOS T3,IMP8XI		;INCREMENT INPUT INDEX


LINE 31, PAGE 9
1)	IMPEC4:	CALL ANA2IP		;[7.1058](T1/T1) Convert 1822 addr to IP addr
1)		CALL LCLHST 		;SEE IF ITS ONE OF ME
1)		BUG.(INF,IMPHNW,IMPDV,SOFT,<IMPDV: LHOSTN disagrees with the IMP>,,<
LINE 31, PAGE 9
2)	IMPEC4: CALL LCLHST 		;SEE IF ITS ONE OF ME
2)		BUG.(INF,IMPHNW,IMPDV,SOFT,<IMPDV: LHOSTN disagrees with the IMP>,,<


LINE 41, PAGE 9
1)	>,,<DB%NND>)			;[7.1210] 
1)		RET			;DONE WITH THE NOP
1)	
1)	IMPEC5:	RET			;RFNM RECEIVED
   {Skipped 1 page and 1 line}
1)	;Dead host status (type 6)
1)	
1)	IMPEC6:	CALL ANA2IP		;[7.1058](T1/T1) Convert 1822 addr to IP addr
1)		CALL HSTHSH		;GET TABLE INDEX FOR HOST NUMBER
1)		 JUMPL T2,R		;NO ROOM, IF JUMP. ELSE NEW.
LINE 40, PAGE 9
2)	>)
2)		RET			;DONE WITH THE NOP
2)	
2)	IMPEC5:	RET			;RFNM RECEIVED
   {Skipped 1 page and 2 lines}
2)	;Dead host status (type 6)
2)	
2)	IMPEC6:	CALL HSTHSH		;GET TABLE INDEX FOR HOST NUMBER
2)		 JUMPL T2,R		;NO ROOM, IF JUMP. ELSE NEW.


; IMPDV.MAC.1 & <MONITOR>IMPDV.MAC.1 24-Feb-89 1720	PAGE 6



LINE 19, PAGE 10
1)	HSTDED:	CALL ANA2IP		;[7.1058](T1/T1) Convert 1822 addr to IP addr
1)		CALL HSTHSH		;FIND HASH INDEX FOR HOST IN T1
1)		 JUMPL T2,HSTDD1	;IF NO ROOM, JUMP AROUND
LINE 19, PAGE 10
2)	HSTDED:	CALL HSTHSH		;FIND HASH INDEX FOR HOST IN T1
2)		 JUMPL T2,HSTDD1	;IF NO ROOM, JUMP AROUND


LINE 13, PAGE 11
1)	IMPEC9:				;INCOMPLETE TRANSMISSION
1)	IFE STANSW,<		;;We get too many of these at Stanford
1)		BUG.(INF,IMPINC,IMPDV,SOFT,<IMPDV: Received incomplete transmission message>,<<T1,HOST>,<T2,LINK>,<T3,TYPE>,<T4,SUBTYP>>,<
LINE 38, PAGE 10
2)	IMPEC9:	ret			;INCOMPLETE TRANSMISSION
2)		BUG.(INF,IMPINC,IMPDV,SOFT,<IMPDV: Received incomplete transmission message>,<<T1,HOST>,<T2,LINK>,<T3,TYPE>,<T4,SUBTYP>>,<


LINE 35, PAGE 11
1)	>,,<DB%NND>)			;[7.1210] 
1)	>;IFE STANSW
1)		RET
LINE 59, PAGE 10
2)	>)
2)		RET


LINE 1, PAGE 12
1)	^L	SUBTTL 1822 to IP Address Translation
1)	
1)	;[7.1058] Routine to convert an 1822 address to an IP address.  The first octet
1)	;[7.1058] has the NCT index for the interface; the remaining three octets are
1)	;[7.1058] the 1822 address.  The 1822 "source network" byte isn't used.  This
1)	;[7.1058] routine must be resident since it can be called at interrupt level.
1)	;[7.1058] 
1)	;[7.1058] Accepts in T1/ 1822 address, preserves all acs
1)	;[7.1058] 	CALL ANA2IP
1)	;[7.1058] Returns: +1 always, T1/ IP address
1)	
1)	ANA2IP:	SAVEAC <T2,T3,P1>	;[7.1058] Preserve some ACs today
1)		LDB T2,[POINT 8,T1,11]	;[7.1058] Get "net number" (NCT index) 
1)		MOVE P1,NCTVT(T2)	;[7.1058] Get NCT
1)		MOVE T2,NTNET(P1)	;[7.1058] Get network
1)		MOVE T3,NTLADR(P1)	;[7.1058]  and internet address from NCT
1)		IFXE. T3,.NETCA		;[7.1058] Class A or class B/C?
1)		  DPB T2,[POINT 8,T1,11] ;[7.1058] Class A, network in first octet
1)		ELSE.			;[7.1058] Class was B or C
1)		  LDB T3,[POINT 8,T1,19] ;[7.1058] Get host number in 2nd octet
1)		  IFXE. T1,.NETCB	;[7.1058] Class B or Class C?

; IMPDV.MAC.1 & <MONITOR>IMPDV.MAC.1 24-Feb-89 1720	PAGE 7


1)		    DPB T3,[POINT 8,T1,27] ;[7.1058] Store host in 3rd octet
1)		    DPB T2,[POINT 16,T1,19] ;[7.1058] Store network in first two octets
1)		  ELSE.			;[7.1058] Class C
1)		    DPB T3,[POINT 2,T1,29] ;[7.1058] Store host in hi 2 bits 4th octet
1)		    DPB T2,[POINT 24,T1,27] ;[7.1058] Store net in first three octets
1)		  ENDIF.		;[7.1058] 
1)		ENDIF.			;[7.1058] 
1)		RET			;[7.1058] Return T1/ IP address
1)	^L	SUBTTL Output Done Handling - Queue for Retransmission
LINE 1, PAGE 11
2)	^L	SUBTTL Output Done Handling - Queue for Retransmission


LINE 9, PAGE 14
1)	IMODUN::MOVE T1,NTOB(P1)	; Get buffer location
1)		HRRE T2,NTBFFL(P1)	; Find out who owns IMPOB
LINE 9, PAGE 12
2)	IMODUN::
2)	IFN NICSW,<
2)		CAMN P1,[6,,.NCT0]	;milnet?
2)		 AOS IS.IMI
2)		CAMN P1,[6,,.NCT1]	;arpanet?
2)		 AOS IS.IAR
2)	>
2)		MOVE T1,NTOB(P1)	; Get buffer location
2)		HRRE T2,NTBFFL(P1)	; Find out who owns IMPOB


LINE 36, PAGE 14
1)		CALL ANA2IP		;[7.1058](T1/T1) Convert 1822 addr to IP addr
1)		CALL @T3		; Put on proper Q
LINE 43, PAGE 12
2)		CALL @T3		; Put on proper Q


LINE 32, PAGE 15
1)	;[7.1058] Class A networks the address format is <net>.<host>.<lclprt>.<IMP>
1)	;[7.1058] and the last three octets correspond to IHADR in the 1822 header.
1)	;[7.1058] Class B networks the address format <128>.<net>.<host>.<IMP>
1)	;[7.1058] with no local port.
1)	;[7.1058] Class C networks the address format <192>.<net1>.<net2>.<host/IMP>
1)	;[7.1058] where the host is the high order 2 bits of the host/IMP byte.
1)	
1)		IFXE. T1,.NETCA		;[7.1058] Class A or B/C?
1)		  TDZ T1,NTNLHM(P1)	;[7.1058] Class A, clear logical host bits
1)		ELSE.			;[7.1058] 
1)		  IFXE. T1,.NETCB	;[7.1058] Class B or C?
1)		    LDB T3,[POINT 8,T1,27] ;[7.1058] Class B. Get host (3rd octet)
1)		    ANDX T1,377		;[7.1058] Isolate IMP number in 4th octet
1)		    DPB T3,[POINT 8,T1,19] ;[7.1058] Store host number in 2nd octet
1)		  ELSE.			;[7.1058] Class C

; IMPDV.MAC.1 & <MONITOR>IMPDV.MAC.1 24-Feb-89 1720	PAGE 8


1)		    LDB T3,[POINT 2,T1,29] ;[7.1058] Get host from high 2 bits 4th oct
1)		    ANDX T1,77		;[7.1058] Isolate IMP number in low order 6 bit
1)		    DPB T3,[POINT 8,T1,19] ;[7.1058] Store host number in 4th octet
1)		  ENDIF.		;[7.1058] 
1)		ENDIF.			;[7.1058] 
1)		STOR T1,IHADR,(T2)	; Store destination address
LINE 31, PAGE 13
2)		TDZ T1,NTNLHM(P1)	; Clear logical host bits from destination
2)		STOR T1,IHADR,(T2)	; Store destination address


LINE 19, PAGE 17
1)		LOAD T2,NTNUM,(P1)	;[7.1058] "Network number" is NCT index
1)		STOR T2,IHNET,(T1)	; Stick it into buffer header
LINE 19, PAGE 14
2)		MOVE T2,NTNET(P1)	; get network number from NCT
2)		STOR T2,IHNET,(T1)	; Stick it into buffer header


LINE 26, PAGE 17
1)		SKIPL NTBFFL(P1)	; Skip if Internet owns IMIB
LINE 26, PAGE 14
2)	IFN NICSW,<
2)		CAMN P1,[6,,.NCT0]	;milnet?
2)		 AOS IS.IMI+1
2)		CAMN P1,[6,,.NCT1]	;arpanet?
2)		 AOS IS.IAR+1
2)	>
2)		SKIPL NTBFFL(P1)	; Skip if Internet owns IMIB


LINE 12, PAGE 18
1)	REPEAT 1,<			;[7.1274] May not want this code but will keep for now
1)		LOAD T2,IHNET,(T1)	; GET NET
LINE 12, PAGE 15
2)	REPEAT 1,<			; MAY NOT WANT THIS CODE
2)		LOAD T2,IHNET,(T1)	; GET NET


LINE 17, PAGE 18
1)		CALL ANA2IP		;[7.1058](T1/T1) Convert 1822 addr to IP addr
1)		CALL HSTHSH		; FIND HASH INDEX FOR HOST IN T1
LINE 17, PAGE 15
2)		CALL HSTHSH		; FIND HASH INDEX FOR HOST IN T1


; IMPDV.MAC.1 & <MONITOR>IMPDV.MAC.1 24-Feb-89 1720	PAGE 9



LINE 35, PAGE 22
1)		CALLX (MSEC1,MULKSP)	; unlock the first part of the buffer
1)		MOVE T1,IULKB		; get the buffer address
1)		ADD T1,IULIM		; add in the length
1)		SUBI T1,1		; determine last word of the buffer
1)		CALLX (MSEC1,MULKSP)	; unlock the last part of the buffer
1)		MOVE T2,IULKB		; Get back buffer address
LINE 35, PAGE 19
2)		IFE REL6,<CALL MULKSP>	; unlock the first part of the buffer
2)		IFN REL6,<CALLX (MSEC1,MULKSP)> ; unlock the first part of the buffer
2)		MOVE T1,IULKB		; get the buffer address
2)		ADD T1,IULIM		; add in the length
2)		SUBI T1,1		; determine last word of the buffer
2)		IFE REL6,<CALL MULKSP>	; unlock the last part of the buffer
2)		IFN REL6,<CALLX (MSEC1,MULKSP)> ; unlock the last part of the buffer
2)		MOVE T2,IULKB		; Get back buffer address


LINE 3, PAGE 28
1)		XSWAPCD
1)	
1)		XNENT (.ASNSQ,G)
1)		MCENT			; Assign a special message queue
LINE 3, PAGE 25
2)	IFE REL6,<SWAPCD>
2)	IFN REL6,<XSWAPCD>
2)	
2)	IFE REL6,<.ASNSQ::>
2)	IFN REL6,<XNENT .ASNSQ,G>
2)		MCENT			; Assign a special message queue


LINE 5, PAGE 32
1)		XNENT (.RELSQ,G)
1)		MCENT			; Enter monitor context
LINE 5, PAGE 29
2)	IFE REL6,<.RELSQ::>
2)	IFN REL6,<XNENT .RELSQ,G>
2)		MCENT			; Enter monitor context


; IMPDV.MAC.1 & <MONITOR>IMPDV.MAC.1 24-Feb-89 1720	PAGE 10



LINE 15, PAGE 33
1)		SWAPCD
1)	
1)	.RCVIM::XCALLRET (XCDSEC,RCVIMM)
1)	
1)		XSWAPCD
1)	RCVIMM:
1)		MCENT			; Standard JSYS entry
LINE 15, PAGE 30
2)	IFN REL6,<
2)		SWAPCD
2)	.RCVIM::XCALLRET (XCDSEC,RCVIMM)
2)		XSWAPCD
2)	RCVIMM:>       			; END OF IFN REL6
2)	IFE REL6,<.RCVIM::>
2)		MCENT			; Standard JSYS entry


LINE 12, PAGE 35
1)		XRESCD			; THIS CODE IS RESIDENT
1)	
1)	SIQGET:	MOVE T2,TODCLK		; Update time to discard msgs
LINE 12, PAGE 32
2)	IFE REL6,<RESCD>		; THIS CODE IS RESIDENT
2)	IFN REL6,<XRESCD>		; THIS CODE IS RESIDENT
2)	
2)	SIQGET:	MOVE T2,TODCLK		; Update time to discard msgs


LINE 6, PAGE 36
1)		SWAPCD
1)	
1)	.SNDIM::XCALLRET (XCDSEC,SNDIMM)
1)	
1)		XSWAPCD
1)	
1)	SNDIMM:
1)		MCENT
LINE 6, PAGE 33
2)	IFE REL6,<SWAPCD>
2)	
2)	IFN REL6,<
2)		SWAPCD
2)	.SNDIM::XCALLRET (XCDSEC,SNDIMM)
2)		XSWAPCD
2)	SNDIMM:>       			; END OF IFN REL6
2)	IFE REL6,<.SNDIM::>
2)		MCENT


; IMPDV.MAC.1 & <MONITOR>IMPDV.MAC.1 24-Feb-89 1720	PAGE 11



LINE 51, PAGE 40
1)		XSWAPCD
1)	
1)		XNENT (NETLGO,G)
1)		SETO T1,0		;Release all special queues
1)		RELSQ%
1)		RET			;That's all
1)	
1)	^L	SUBTTL SIQCHK - Check for unclaimed messages
1)	
1)	; Called from NCPFRK with TODCLK in T1
LINE 51, PAGE 37
2)	IFE REL6,<SWAPCD>
2)	IFN REL6,<XSWAPCD>
2)	
2)	IFE REL6,<NETLGO::>
2)	IFN REL6,<XNENT NETLGO,G>
2)		SETO T1,0		;Release all special queues
2)		RELSQ%
2)		RET			;That's all
2)	
2)	^L	SUBTTL SIQCHK - SIQCHK - check for unclaimed messages
2)	
2)	; Called from NCPFRK with TODCLK in T1


LINE 1, PAGE 42
1)	^L	SUBTTL End of IMPDV
1)		TNXEND
LINE 25, PAGE 38
2)		TNXEND
