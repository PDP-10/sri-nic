

; LINEPR.MAC.1 & <MONITOR>LINEPR.MAC.1 24-Feb-89 1728	PAGE 1



LINE 1, PAGE 1
1)	;[MACBETH.STANFORD.EDU]SRC:<7.FT2.MONITOR.STANFORD>LINEPR.MAC.2,  6-Apr-88 03:22:31, Edit by A.APPLEHACKS
1)	; FT7.2 Merge
1)	; UPD ID= 8541, RIP:<7.MONITOR>LINEPR.MAC.3,   9-Feb-88 17:04:01 by GSCOTT
1)	;TCO 7.1218 - Update copyright date.
1)	;[MACBETH.STANFORD.EDU]SRC:<7.FT1.MONITOR.STANFORD>LINEPR.MAC.3, 16-Feb-88 07:12:49, Edit by A.ALDERSON
1)	; Add ";" to comment (lost in merge)
1)	;[MACBETH.STANFORD.EDU]SRC:<7.FT1.MONITOR.STANFORD>LINEPR.MAC.2, 23-Jan-88 20:31:45, Edit by A.APPLEHACKS
1)	; FT7 Merge
1)	;
1)	;------------------------- Autopatch Tape # 13 -------------------------
1)	;------------------------- Autopatch Tape # 12 -------------------------
1)	; *** Edit 7193 to LINEPR.MAC by WONG on 14-Nov-85
1)	; Fix undefined symbol (LPTTIM) when LPTN=0
1)	;<6-1-MONITOR.FT6>LINEPR.MAC.2, 12-Aug-85 17:09:43, Edit by WHP4
1)	;Stanford changes:
1)	;SUMEX changes:
1)	; Add support for LP10/BA10 printer (thru DIB20)
1)	;
1)	; UPD ID= 2098, SNARK:<6.1.MONITOR>LINEPR.MAC.11,   3-Jun-85 15:41:45 by MCCOLLUM
LINE 1, PAGE 1
2)	; UPD ID= 8541, RIP:<7.MONITOR>LINEPR.MAC.3,   9-Feb-88 17:04:01 by GSCOTT
2)	;TCO 7.1218 - Update copyright date.
2)	; *** Edit 7193 to LINEPR.MAC by WONG on 14-Nov-85
2)	; Fix undefined symbol (LPTTIM) when LPTN=0
2)	; UPD ID= 2098, SNARK:<6.1.MONITOR>LINEPR.MAC.11,   3-Jun-85 15:41:45 by MCCOLLUM


LINE 6, PAGE 6
1)	IFE STANSW&SUMXSW,<
1)		MOVEI U,FELPTN		;GET THE NUMBER OF FE LPT'S
LINE 6, PAGE 6
2)		MOVEI U,FELPTN		;GET THE NUMBER OF FE LPT'S


LINE 20, PAGE 6
1)	>;IFE STANSW&SUMXSW
1)	IFN STANSW&SUMXSW,<
1)		MOVEI U,LPTN		;ASSUME NO LP10/BA10S
1)		DO.
1)		  SETOM LPBAUN-1(U)
1)		  SOJG U,TOP.
1)		ENDDO.
1)		HRLI U,-FELPTN		;INIT FE LP20 UNITS
1)		IFL. U			;ONLY IF ANY
1)		  MOVEI B,FELPVT	;FE LP20 VECTOR TABLE ADDR
1)		  CALL @SNDINI(B)	;INITIALIZE ALL FE LP20 UNITS
1)		  DO.
1)		    STOR B,LPDEVT,(U)	;SAVE VECTOR TABLE ADDR FOR THIS UNIT

; LINEPR.MAC.1 & <MONITOR>LINEPR.MAC.1 24-Feb-89 1728	PAGE 2


1)		    AOBJN U,TOP.	;LOOP THRU ALL FE LP20S
1)		  ENDDO.
1)		ENDIF.
1)		HRLI U,-KSLPTN		;INIT KS LP20 UNITS
1)		IFL. U			;ONLY IF ANY
1)		  MOVEI B,FELPVT	;KS LP20 VECTOR TABLE ADDR
1)		  CALL @SNDINI(B)	;INITIALIZE ALL KS LP20 UNITS
1)		  DO.
1)		    STOR B,LPDEVT,(U)	;SAVE VECTOR TABLE ADDR FOR THIS UNIT
1)		    AOBJN U,TOP.	;LOOP THRU ALL KS LP20S
1)		  ENDDO.
1)		ENDIF.
1)		HRLI U,-BALPTN		;INIT BA10 UNITS
1)		IFL. U			;ONLY IF ANY
1)		  MOVEI B,BALPVT	;BA10 VECTOR TABLE ADDR
1)		  DO.
1)		    STOR B,LPDEVT,(U)	;SAVE VECTOR TABLE ADDR FOR THIS UNIT
1)		    CALL @SNDINI(B)	;INITIALIZE EACH BA10 UNIT
1)		    AOBJN U,TOP.	;LOOP THRU ALL LP10/BA10S
1)		  ENDDO.
1)		ENDIF.
1)	>;IFN STANSW&SUMXSW
1)		MOVSI U,-LPTN		;INIT ALL UNITS
LINE 19, PAGE 6
2)		MOVSI U,-LPTN		;INIT ALL UNITS


LINE 37, PAGE 9
1)	IFN STANSW&SUMXSW,<
1)		SKIPL LPBAUN(U)		;IS THIS AN BA10/LP10?
1)		 CONO LPT,LPTCLR	;YES, CLEAR IT
1)	>;IFN STANSW&SUMXSW
1)		UNLOCK LPTLCK(U)	;RELEASE THE LPT LOCK
LINE 37, PAGE 9
2)		UNLOCK LPTLCK(U)	;RELEASE THE LPT LOCK


LINE 48, PAGE 9
1)	IFN STANSW&SUMXSW,<
1)		SKIPL LPBAUN(A)		;IS THIS UNIT A BA10/LP10?
1)		 CONSZ LPT,77		;YES, DOES IT HAVE A PIA?
1)		  CAIA			;NOT A BA10 OR HAS A PIA
1)		   JRST 1(4)		;BA10 W/O PIA, RETURN NOW (OR NEVER)
1)	>;IFN STANSW&SUMXSW
1)		OPSTR <SKIPN>,LPTFE,(A)	;BYTES STILL IN FE?
LINE 44, PAGE 9
2)		OPSTR <SKIPN>,LPTFE,(A)	;BYTES STILL IN FE?


; LINEPR.MAC.1 & <MONITOR>LINEPR.MAC.1 24-Feb-89 1728	PAGE 3



LINE 44, PAGE 14
1)	IFE STANSW&SUMXSW,<
1)		CAILE U,LPTN		; BETWEEN 0 AND LPTN
1)	>;IFE STANSW&SUMXSW
1)	IFN STANSW&SUMXSW,<
1)		CAIL U,LPTN		; BETWEEN 0 AND LPTN-1
1)	>;IFN STANSW&SUMXSW
1)		ITERR (LPINX1)		;INVALID UNIT NUMBER
LINE 44, PAGE 14
2)		CAILE U,LPTN		; BETWEEN 0 AND LPTN
2)		ITERR (LPINX1)		;INVALID UNIT NUMBER


LINE 6, PAGE 23
1)	IFN STANSW&SUMXSW,<
1)		SKIPL LPBAUN(U)		;IS THIS UNIT A BA10?
1)		 RETBAD (DESX9)		;YES, INVALID OPERATION (NO VFU/RAM)
1)	>;IFN STANSW&SUMXSW
1)		STKVAR <REDCNT,REDIPT,REDOPT> ;ALLOCATE SPACE FOR COUNT AND POINTERS
LINE 6, PAGE 23
2)		STKVAR <REDCNT,REDIPT,REDOPT> ;ALLOCATE SPACE FOR COUNT AND POINTERS


LINE 13, PAGE 25
1)	LODLPT:	
1)	IFN STANSW&SUMXSW,<
1)		SKIPL LPBAUN(U)		;IS THIS UNIT A BA10?
1)		 RETSKP			;YES, RETURN +2 (NO VFU/RAM)
1)	>;IFN STANSW&SUMXSW
1)		STKVAR <LODFCN,LODJFN,SVFDB>	;ALLOCATE STORAGE FOR FUNCTION CODE AND JFN
1)		MOVEM A,LODJFN		;SAVE JFN OF FILE
LINE 13, PAGE 25
2)	LODLPT:	STKVAR <LODFCN,LODJFN,SVFDB>	;ALLOCATE STORAGE FOR FUNCTION CODE AND JFN
2)		MOVEM A,LODJFN		;SAVE JFN OF FILE


LINE 33, PAGE 30
1)	IFN STANSW&SUMXSW,<
1)		SKIPL LPBAUN(U)		;IS THIS UNIT A BA10?
1)		 SETOM LPTCNT(U)	;YES, CATCH OVER DECREMENTING
1)	>;IFN STANSW&SUMXSW
1)		JE LPNOE,(U),LPTN10	;NOTING OCCURRANCE OF EOF ?
LINE 33, PAGE 30
2)		JE LPNOE,(U),LPTN10	;NOTING OCCURRANCE OF EOF ?


; LINEPR.MAC.1 & <MONITOR>LINEPR.MAC.1 24-Feb-89 1728	PAGE 4



LINE 8, PAGE 33
1)	IFN STANSW&SUMXSW,<
1)		SKIPL LPBAUN(B)		;IS THIS A BA10?
1)		  RET			;YES, JUST RETURN
1)	>;IFN STANSW&SUMXSW
1)		STKVAR <TLSPSI,TLSCNT,TLSSST,TLSMSG>	;ALLOCATE STORAGE
LINE 8, PAGE 33
2)		STKVAR <TLSPSI,TLSCNT,TLSSST,TLSMSG>	;ALLOCATE STORAGE


LINE 30, PAGE 34
1)	IFE STANSW&SUMXSW,<
1)		CAMLE C,TLSCNT		;GOT ENOUGH BYTES FROM -11 ?
1)	>;IFE STANSW&SUMXSW
1)	IFN STANSW&SUMXSW,<
1)		CAMLE A,TLSCNT		;GOT ENOUGH BYTES FROM -11 ?
1)	>;IFN STANSW&SUMXSW
1)		JRST LPTS50		;NO, DO NOT TRY TO GET PAGE COUNTER
LINE 30, PAGE 34
2)		CAMLE C,TLSCNT		;GOT ENOUGH BYTES FROM -11 ?
2)		JRST LPTS50		;NO, DO NOT TRY TO GET PAGE COUNTER
