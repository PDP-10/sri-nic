

; GTJFN.MAC.1 & <MONITOR>GTJFN.MAC.2 24-Feb-89 1719	PAGE 1



LINE 1, PAGE 1
1)	;[MACBETH]SRC:<7.FT2.MONITOR.STANFORD>GTJFN.MAC.2,  5-Apr-88 10:22:10, Edit by A.APPLEHACKS
1)	; FT7.2 Merge
1)	; UPD ID= 8524, RIP:<7.MONITOR>GTJFN.MAC.11,   9-Feb-88 15:52:44 by GSCOTT
LINE 1, PAGE 1
2)	;[SRI-NIC]SRC:<MONITOR>GTJFN.MAC.2, 11-Nov-88 00:01:36, Edit by MKL
2)	; v7 merge 
2)	;   comment out RELRNG kludge below to see if it still happens
2)	;[SRI-NIC]SRC:<6-1-MONITOR>GTJFN.MAC.4, 19-Apr-88 13:06:35, Edit by MKL
2)	; add GXJFN% from CMU
2)	;[SRI-NIC]SRC:<6-1-MONITOR>GTJFN.MAC.2, 15-Mar-87 02:17:48, Edit by MKL
2)	; add kludge to stop RELRNG until bug is found (just before RELJF1)
2)	;[SRI-NIC]XS:<SU-61SU>GTJFN.MAC.2,  5-Dec-86 14:07:40, Edit by MKL
2)	;;SS:<6-1-MONITOR>GTJFN.MAC.3, 28-Oct-85 16:46:01, Edit by KNIGHT
2)	;; Up MAXINP to 10000.
2)	;<6-1-MONITOR.FT6>GTJFN.MAC.2, 11-Aug-85 19:34:51, Edit by WHP4
2)	;Stanford changes:
2)	; Changes for CWR's attribute lookup code
2)	
2)	; Edit= 8801 to GTJFN.MAC on 17-Mar-88 by RASPUZZI
2)	;Prevent ILMNRFs or RELBADs by having GNJFN% and JFNS% use the JFNLCK when
2)	;dealing with important information in the JFN block. 
2)	; UPD ID= 8524, RIP:<7.MONITOR>GTJFN.MAC.11,   9-Feb-88 15:52:44 by GSCOTT


LINE 14, PAGE 1
1)	;[MACBETH]SRC:<7.FT1.MONITOR.STANFORD>GTJFN.MAC.2,  6-Feb-88 12:46:23, Edit by A.APPLEHACKS
1)	; FT7 Merge - esp. SUMEX GTJFN support (taken back into V7)
1)	;	    - re-added GSIBE to DEC version
1)	;
1)	;[SIERRA.STANFORD.EDU]SRC:<6.1.MONITOR.STANFORD>GTJFN.MAC.4, 19-Mar-87 10:17:54, Edit by ALDERSON
1)	; Make RELJF3 go NOINT since it calls RELFRE
1)	;
1)	; UPD ID= 223, RIP:<7.MONITOR>GTJFN.MAC.7,  28-Oct-87 14:14:09 by MCCOLLUM
LINE 29, PAGE 1
2)	; UPD ID= 223, RIP:<7.MONITOR>GTJFN.MAC.7,  28-Oct-87 14:14:09 by MCCOLLUM


LINE 73, PAGE 1
1)	;------------------------- Autopatch Tape # 13 -------------------------
1)	; *** Edit 7206 to GTJFN.MAC by WAGNER on 4-Dec-85, for SPR #20941
1)	; Fix RELRNG bughlts caused by trying to release non-existant temp storage.
1)	; There is no temp storage when a JFN is transitional. 
1)	;------------------------- Autopatch Tape # 12 -------------------------
1)	; *** Edit 7194 to GTJFN.MAC by LOMARTIRE on 15-Nov-85 (TCO none)
LINE 81, PAGE 1
2)	; *** Edit 7206 to GTJFN.MAC by WAGNER on 4-Dec-85, for SPR #20941
2)	; Fix RELRNG bughlts caused by trying to release non-existant temp storage.
2)	; There is no temp storage when a JFN is transitional. 

; GTJFN.MAC.1 & <MONITOR>GTJFN.MAC.2 24-Feb-89 1719	PAGE 2


2)	; *** Edit 7194 to GTJFN.MAC by LOMARTIRE on 15-Nov-85 (TCO none)


LINE 82, PAGE 1
1)	;<6-1-MONITOR.FT6>GTJFN.MAC.2, 11-Aug-85 19:34:51, Edit by WHP4
1)	;Stanford changes:
1)	; Add ? handling (see lines marked with SMXGTJ)
1)	; Partial recognition for filenames
1)	; Changes for CWR's attribute lookup code
1)	; Fix random punctuation
1)	;
1)	; UPD ID= 2263, SNARK:<6.1.MONITOR>GTJFN.MAC.59,  21-Jun-85 12:20:23 by LOMARTIRE
LINE 88, PAGE 1
2)	; UPD ID= 2263, SNARK:<6.1.MONITOR>GTJFN.MAC.59,  21-Jun-85 12:20:23 by LOMARTIRE


LINE 39, PAGE 2
1)	MAXINP==<^D120-VARC>*5		;MAX WORDS TO GET FOR TEXTI
1)	DEFINP==MAXINP			;DEFAULT SIZE OF RDTXT BUFFER
LINE 39, PAGE 2
2)	IFE NICSW,<
2)	MAXINP==<^D120-VARC>*5		;MAX WORDS TO GET FOR TEXTI
2)	>;IFE NICSW
2)	IFN NICSW,<
2)	MAXINP==:^D10000		;Maximum chars to get for TEXTI%
2)	>;IFN NICSW
2)	DEFINP==MAXINP			;DEFAULT SIZE OF RDTXT BUFFER


LINE 11, PAGE 90
1)	IFE STANSW,<
1)		  MOVEI B,ACCTSR-1 	;POINT TO ACCOUNT STRING
1)		  MOVN A,ACCTSL
1)	>;IFE STANSW
1)	IFN STANSW,<		;;FOR SOME REASON, ALTHOUGH IN GLOBS, THIS SYMBOL IS
1)				;; UNDEFINED.  MACRO BUG?  -KSL 27-APR-85 
1)		  MOVEI B,ACCTSR##-1 	;POINT TO ACCOUNT STRING
1)		  MOVN A,ACCTSL##
1)	>;IFN STANSW
1)		  HRLI B,2(A)		;LOOKUP POINTER TO ACCOUNT
LINE 11, PAGE 90
2)		  MOVEI B,ACCTSR-1 	;POINT TO ACCOUNT STRING
2)		  MOVN A,ACCTSL
2)		  HRLI B,2(A)		;LOOKUP POINTER TO ACCOUNT


; GTJFN.MAC.1 & <MONITOR>GTJFN.MAC.2 24-Feb-89 1719	PAGE 3



LINE 49, PAGE 95
1)	IFE STANSW,<
1)		JRST QUEST3		;Must be in STR or DIR field, no help
1)	>;IFE STANSW
1)	IFN STANSW,<
1)	;	JRST QUEST0
   {Skipped 1 page and 1 line}
1)	QUEST0:	CALL GSIBE		; Anything typed?
1)		 SKIPA			; Yes, eat it
1)		JRST QUEST3		; No, just retype and return
1)	
1)	QUEST1:	HRRZ D,E
1)		XCTU [HRRZ A,1(D)]	; Something was typed to stop output
1)		CFOBF%			; Clear output buffer
1)		XCTU [HLRZ A,1(D)]	; Something was typed to stop output
1)		BIN%			; Get the input and throw it away
1)	
1)	>;IFN STANSW
1)	
1)	QUEST2:	CALL DING		;(/) Can't help in any later fields
LINE 49, PAGE 95
2)		JRST QUEST3		;Must be in STR or DIR field, no help
   {Skipped 1 page and 1 line}
2)	QUEST2:	CALL DING		;(/) Can't help in any later fields


LINE 20, PAGE 98
1)	IFE STANSW,<
1)		     EXIT.		;No more, retype
1)	>;IFE STANSW
1)	IFN STANSW,<
1)		     JRST QUEST0	; None left, beep and retype
1)		     CALL GSIBE		; Anything input?
1)		      JRST QUEST1	; Yes, quit
1)	>;IFN STANSW
1)		  LOOP.			;Do next candidate
LINE 20, PAGE 98
2)		     EXIT.		;No more, retype
2)		  LOOP.			;Do next candidate


; GTJFN.MAC.1 & <MONITOR>GTJFN.MAC.2 24-Feb-89 1719	PAGE 4



LINE 26, PAGE 99
1)	IFE STANSW,<
1)		     EXIT.		;None left, retype
1)	>;IFE STANSW
1)	IFN STANSW,<
1)		     JRST QUEST0	;None left, beep and retype
1)		    CALL GSIBE		; Anything input?
1)		     JRST QUEST1	; Yes, quit
1)	>;IFN STANSW
1)		  LOOP.			;Do next candidate
LINE 26, PAGE 99
2)		     EXIT.		;None left, retype
2)		  LOOP.			;Do next candidate


LINE 22, PAGE 100
1)	IFE STANSW,<
1)		     EXIT.		;None left, retype
1)	>;IFE STANSW
1)	IFN STANSW,<
1)		     JRST QUEST0	;None left, beep and retype
1)		    CALL GSIBE		; Anything input?
1)		     JRST QUEST1	;  Yes, quit
1)	>;IFN STANSW
1)		  LOOP.			;Do next version
LINE 22, PAGE 100
2)		     EXIT.		;None left, retype
2)		  LOOP.			;Do next version


LINE 1, PAGE 106
1)	IFN STANSW,<
1)	; Routine to skip if input buffer is empty.
1)	; Entry:   From ? routines
1)	; Call:	   CALL GSIBE
1)	; Return:  +1, input not empty or non TTY
1)	;	   +2, TTY input empty
1)	; Clobbers A
1)	
1)	GSIBE:	CALL INFTST		; Check input JFN
1)		 RET			; Nope, return +1
1)		SIBE
1)		 RET
1)		RETSKP
1)	
1)	>;IFN STANSW
1)	
1)	;[7.1014]
LINE 1, PAGE 106

; GTJFN.MAC.1 & <MONITOR>GTJFN.MAC.2 24-Feb-89 1719	PAGE 5


2)	;[7.1014]


LINE 6, PAGE 119
1)		SKIPE B			; IF ANY
LINE 6, PAGE 119
2)	ifn nicsw,<;temp kludge till bug is found
2)	;	cain b,1000		;if this value only (?8-bit pointer?)
2)	;	 setz b,		;then don't try to release it
2)	>;ifn nicsw
2)		SKIPE B			; IF ANY


LINE 1, PAGE 134
1)	; Get next jfn
LINE 1, PAGE 134
2)	IFN NICSW,<
2)	;CS82T-TL11 - Begin Addition
2)	;
2)	; GXJFN%: Support for fast cumulative-incremental dumps and disk scans.
2)	;
2)	; Get next Jfn matching special parameters:
2)	;
2)	; Call: 1/ Indexable File Handle
2)	;	2/ Flags,,Fdb Offset
2)	;	3/ Mask Word (1 = require matching bit, 0 = match not required)
2)	;	4/ Test Word
2)	;
2)	;	This Jsys has 3 cases:
2)	;
2)	;	GX%CUM set in 2:	Cumulative-Incremental Scan: only return
2)	;				Jfns where none of FB%NXF, FB%NEX, FB%DEL,
2)	;				FB%TMP, FB%DIR, FB%NOD is set and where
2)	;				.FBCNT<lh> neq .FBBK0<rh>.  Skip even looking
2)	;				at directories that haven't been marked as
2)	;				written into since the last full dump.
2)	;	GX%FUL set in 2:	Full-Incremental Scan: only returns files
2)	;				where none of the above bits is set, and
2)	;				flags directories scanned as not having
2)	;				been written into since last full dump.
2)	;	Otherwise:		Only return files where word 2<rh> of FDB
2)	;				satisfies the equation:
2)	;
2)	;			(.FDB[.2] and MaskWord) op (TestWord and MaskWord)
2)	;
2)	;				where op is apparent from which of the six
2)	;				other flags is set: GX%EQL, GX%NEQ, GX%LSS,
2)	;				GX%LEQ, GX%GTR, and GX%GEQ.
2)	
2)	.GXJFN::MCENT
2)		STKVAR <OFILUC,GXFLAG,GXFDB> ; OLD STR UNIQUE CODE, TL11

; GTJFN.MAC.1 & <MONITOR>GTJFN.MAC.2 24-Feb-89 1719	PAGE 6


2)		SETOM GXFLAG		;TL11 Indicate came from GXJFN%
2)		JRST GNJFN0		;TL11 Join common code in GNJFN
2)	
2)	;CS82T-TL11 -End Addition
2)	>;IFN NICSW
   {Skipped 1 page and 1 line}
2)	; Get next jfn


LINE 14, PAGE 134
1)		STKVAR <OFILUC,VERNUM>	;[7380] Old STR unique code and version
1)		HRRZ JFN,1
1)		CALL CHKJFN
1)		 RETERR()
1)		 JFCL
1)		 RETERR(DESX4)
1)		TQNE <ASTF>
1)		ERUNLK(DESX7)		; Output stars not allowed
1)		TQNE <OPNF>
1)		ERUNLK(OPNX1)
1)		LOAD JQ1,FLUC,(JFN)	;GET STRUCTURE UNIQUE CODE AT START
LINE 15, PAGE 135
2)	IFE NICSW,<
2)		STKVAR <OFILUC,VERNUM>	;[7380] Old STR unique code and version
2)		HRRZ JFN,1
2)	>
2)	IFN NICSW,<
2)		STKVAR <OFILUC,VERNUM,GXFLAG,GXFDB> ;CS82T-TL11 OLD STR UNIQUE CODE,
2)		SETZM GXFLAG		;CS82T-TL11 Indicate came from GNJFN
2)	GNJFN0:	HRRZ JFN,1		;CS82T-TL11
2)	>;IFN NICSW
2)		NOINT			;[8801] Get the lock with no interruptions
2)		LOCK JFNLCK		;[8801] Can't let anyone in
2)		CALL CHKJFN
2)		 RETERR(,<UNLOCK JFNLCK	;[8801] Done with lock
2)			  OKINT>)	;[8801] Interrupts are fine now
2)		 JFCL
2)		 RETERR(DESX4,<UNLOCK JFNLCK ;[8801] Lock finished
2)			       OKINT>)	;[8801] And interrupts are OK
2)		OKINT			;[8801] CHKJFN made us NOINT 1 too many times
2)		TQNE <ASTF>
2)		ERUNLK(DESX7,<UNLOCK JFNLCK>) ;[8801] Output stars not allowed
2)		TQNE <OPNF>
2)		ERUNLK(OPNX1,<UNLOCK JFNLCK>) ;[8801] And file can't be open
2)		LOAD JQ1,FLUC,(JFN)	;GET STRUCTURE UNIQUE CODE AT START


; GTJFN.MAC.1 & <MONITOR>GTJFN.MAC.2 24-Feb-89 1719	PAGE 7



LINE 33, PAGE 134
1)		   RETERR (GJFX22,<CALL UNLCKF>) ;NOT, AND NO MORE SPACE
1)		  HRLM A,FILNEN(JFN) 	;NEW STRING POINTER
LINE 46, PAGE 135
2)		   RETERR (GJFX22,<UNLOCK JFNLCK ;[8801] Release lock
2)				   CALL UNLCKF>) ;[8801] Block too small, and none left
2)		  HRLM A,FILNEN(JFN) 	;NEW STRING POINTER


LINE 40, PAGE 134
1)		   RETERR (GJFX22,<CALL UNLCKF>) ;NOT BIG ENOUGH AND NO SPACE
1)		  HRRM A,FILNEN(JFN) 	;NEW STRING
LINE 54, PAGE 135
2)		   RETERR (GJFX22,<UNLOCK JFNLCK ;[8801] Release JFN lock
2)				   CALL UNLCKF>) ;[8801] Block too small and no more
2)		  HRRM A,FILNEN(JFN) 	;NEW STRING


LINE 47, PAGE 134
1)		CALL UNLCKF		;DO UNLOCK
LINE 62, PAGE 135
2)		UNLOCK JFNLCK		;[8801] No we have indicated that the JFN is ours
2)		CALL UNLCKF		;DO UNLOCK


LINE 7, PAGE 135
1)		UMOVE A,1		; GET USER FLAGS
LINE 7, PAGE 136
2)	IFN NICSW,<
2)	;CS82T-TL11 *** Begin ***
2)		SKIPN GXFLAG		;TL11 Called from GXJFN%?
2)		IFSKP.			;TL11 Yes
2)		  MOVE B,CAPENB		;TL11 Enabled Capabilities
2)		  TXNN B,SC%WHL!SC%OPR	;TL11 Wheel or Operator?
2)		  IFSKP.		;TL11 Yes
2)		    UMOVE A,2		;TL11 Get User Flag Word
2)		    TXNE A,GX%CUM	;TL11 Cumulative-Incremental Flag?
2)		     TXO F1,TCONF	;TL11 Yes, set TCONF flag for MDDDIR
2)		    TXNE A,GX%FUL	;TL11 Full-Incremental Flag?
2)		     TXO F1,DFSTF	;TL11 Yes, set DFSTF flag for MDDDIR
2)		  ENDIF.		;TL11 End Wheel or Operator
2)		ENDIF.			;TL11
2)	;CS82T-TL11 *** End ***
2)	>;IFN NICSW
2)		UMOVE A,1		; GET USER FLAGS


; GTJFN.MAC.1 & <MONITOR>GTJFN.MAC.2 24-Feb-89 1719	PAGE 8



LINE 8, PAGE 136
1)		PUSH P,A
LINE 8, PAGE 137
2)	IFN NICSW,<
2)		MOVEM A,GXFDB		;CS82T-TL11 Save FDB
2)	>
2)		PUSH P,A


LINE 2, PAGE 137
1)	GNJFN2:	UMOVE B,1
1)		TLNN B,(1B12)
LINE 2, PAGE 138
2)	GNJFN2:
2)	IFN NICSW,<
2)		SKIPN GXFLAG		;TL11 Called from GXJFN%?
2)		IFSKP.			;TL11 Yes
2)		  UMOVE C,2		;TL11 User Flags
2)		  TXNN C,GX%CUM!GX%FUL	;TL11 Cumulative or Full Incremental?
2)		  IFSKP.		;TL11 Yes
2)		    MOVE D,CAPENB	;TL11 Enabled Capabilities
2)		    TXNN D,SC%WHL!SC%OPR ;TL11 Wheel or Operator?
2)		    IFSKP.		;TL11 Yes
2)		      TXNE A,FB%NXF!FB%NEX!FB%DEL!FB%TMP!FB%DIR!FB%NOD ;TL11 Special?
2)		       JRST GNJFN1	;TL11 Yes, do not dump
2)		      TXNN C,GX%CUM	;TL11 Cumulative Incremental?
2)		      IFSKP.		;TL11 Yes
2)			MOVE B,GXFDB	;TL11 FDB address
2)			HLRZ C,.FBCNT(B) ;TL11 Write Count of File
2)			HRRZ D,.FBBK0(B) ;TL11 Backup Write Count of File
2)		        CAMN C,D	;TL11 File has Same Write Count?
2)		         JRST GNJFN1	;TL11 Yes, do not dump
2)		      ENDIF.		;TL11
2)		    ENDIF.		;TL11
2)		  ELSE.			;TL11 Special FDB Match
2)		    MOVE B,GXFDB	;TL11 FDB address
2)		    LOAD D,FBLEN,(B)	;TL11 Length of FDB
2)		    HRRZ C,C		;TL11 Keep just FDB Offset
2)		    CAML C,D		;TL11 FDB Offset too large?
2)		     JRST GNJFN1	;TL11 Can't possibly match then
2)		    ADD B,C		;TL11 Point into correct word of FDB
2)		    UMOVE C,3		;TL11 Mask Word
2)		    UMOVE D,4		;TL11 Test Word
2)		    AND	D,C		;TL11 And with Mask Word
2)		    MOVE B,0(B)		;TL11 Fetch Word from FDB
2)		    AND B,C		;TL11 And with Mask Word
2)		    UMOVE C,2		;TL11 Flag Word
2)		    TXNN C,GX%EQL	;TL11 Equal Test?
2)		    IFSKP.		;TL11 Yes

; GTJFN.MAC.1 & <MONITOR>GTJFN.MAC.2 24-Feb-89 1719	PAGE 9


2)		      CAME B,D		;TL11 Test succeeded?
2)		       JRST GNJFN1	;TL11 No, skip this file
2)		      JRST GXJFN1	;TL11 Yes, include this file
2)		    ENDIF.		;TL11
2)		    TXNN C,GX%NEQ	;TL11 Not Equal Test?
2)		    IFSKP.		;TL11 Yes
2)		      CAMN B,D		;TL11 Test succeeded?
2)		       JRST GNJFN1	;TL11 No, skip this file
2)		      JRST GXJFN1	;TL11 Yes, include this file
2)		    ENDIF.		;TL11
2)		    TXNN C,GX%LSS	;TL11 Less Than Test?
2)		    IFSKP.		;TL11 Yes
2)		      CAML B,D		;TL11 Test succeeded?
2)		       JRST GNJFN1	;TL11 No, skip this file
2)		      JRST GXJFN1	;TL11 Yes, include this file
2)		    ENDIF.		;TL11
2)		    TXNN C,GX%LEQ	;TL11 Less Than or Equal Test?
2)		    IFSKP.		;TL11 Yes
2)		      CAMLE B,D		;TL11 Test succeeded?
2)		       JRST GNJFN1	;TL11 No, skip this file
2)		      JRST GXJFN1	;TL11 Yes, include this file
2)		    ENDIF.		;TL11
2)		    TXNN C,GX%GTR	;TL11 Greater Than Test?
2)		    IFSKP.		;TL11 Yes
2)		      CAMG B,D		;TL11 Test succeeded?
2)		       JRST GNJFN1	;TL11 No, skip this file
2)		      JRST GXJFN1	;TL11 Yes, include this file
2)		    ENDIF.		;TL11
2)		    TXNN C,GX%GEQ	;TL11 Greater Than or Equal Test?
2)		    IFSKP.		;TL11 Yes
2)		      CAMGE B,D		;TL11 Test succeeded?
2)		       JRST GNJFN1	;TL11 No, skip this file
2)		      JRST GXJFN1	;TL11 Yes, include this file
2)		    ENDIF.		;TL11
2)		    JRST GNJFN1		;TL11 No match specified
2)		  ENDIF.		;TL11
2)		ENDIF.			;TL11
2)	GXJFN1:				;CS82T-TL11 *** End ***
2)	>;IFN NICSW
2)		UMOVE B,1
2)		TLNN B,(1B12)
