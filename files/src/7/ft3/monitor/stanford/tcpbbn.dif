

; TCPBBN.MAC.1 & <MONITOR>TCPBBN.MAC.1 24-Feb-89 1913	PAGE 1



LINE 1, PAGE 1
1)	;[MACBETH.STANFORD.EDU]SRC:<7.FT2.MONITOR.STANFORD>TCPBBN.MAC.3, 20-Jun-88 15:32:36, Edit by A.ALDERSON
1)	; V7.0 FT Clock tape
1)	;[MACBETH]SRC:<7.FT2.MONITOR.STANFORD>TCPBBN.MAC.2,  7-Apr-88 14:58:09, Edit by A.APPLEHACKS
1)	; FT7.2 Merge
1)	;[MACBETH]SRC:<7.FT1.MONITOR.STANFORD>TCPBBN.MAC.2, 26-Jan-88 00:34:03, Edit by A.APPLEHACKS
1)	; FT7 Merge
1)	;;PS:<6-1-MONITOR>TCPBBN.MAC.13,  9-Mar-86 17:16:16, Edit by BILLW
1)	;; undo TSOPS bit setting.
1)	;;PS:<6-1-MONITOR>TCPBBN.MAC.11, 24-Oct-85 03:47:00, Edit by BILLW
1)	;; In SEND, set the "a packet has been sent" bit (TSOPS)
1)	;;PS:<6-1-MONITOR>TCPBBN.MAC.10, 23-Oct-85 21:11:45, Edit by BILLW
1)	;; initialize TSMRT time in ACTTCB
1)	;;<6-1-MONITOR.FT6>TCPBBN.MAC.3, 12-Aug-85 18:01:49, Edit by WHP4
1)	;;Stanford changes:
1)	;; Use global job numbers in TOWNR
1)	;
1)	; UPD ID= 8630, RIP:<7.MONITOR>TCPBBN.MAC.3,  11-Feb-88 18:54:52 by GSCOTT
1)	;TCO 7.1218 - Update copyright date.
1)	; UPD ID= 2194, SNARK:<6.1.MONITOR>TCPBBN.MAC.8,   5-Jun-85 11:11:23 by MCCOLLUM
LINE 1, PAGE 1
2)	;PS:<6-1-MONITOR>TCPBBN.MAC.13,  9-Mar-86 17:16:16, Edit by BILLW
2)	; undo TSOPS bit setting.
2)	;PS:<6-1-MONITOR>TCPBBN.MAC.11, 24-Oct-85 03:47:00, Edit by BILLW
2)	; In SEND, set the "a packet has been sent" bit (TSOPS)
2)	;PS:<6-1-MONITOR>TCPBBN.MAC.10, 23-Oct-85 21:11:45, Edit by BILLW
2)	; initialize TSMRT time in ACTTCB
2)	;<6-1-MONITOR.FT6>TCPBBN.MAC.3, 12-Aug-85 18:01:49, Edit by WHP4
2)	;Stanford changes:
2)	; Use global job numbers in TOWNR
2)	;
2)	; UPD ID= 2194, SNARK:<6.1.MONITOR>TCPBBN.MAC.8,   5-Jun-85 11:11:23 by MCCOLLUM


LINE 53, PAGE 1
1)	;	COPYRIGHT (c) DIGITAL EQUIPMENT CORPORATION 1984, 1988.
1)	;	ALL RIGHTS RESERVED.
1)	;
1)	;	THIS SOFTWARE IS FURNISHED UNDER A  LICENSE AND MAY BE USED AND  COPIED
1)	;	ONLY IN  ACCORDANCE  WITH  THE  TERMS OF  SUCH  LICENSE  AND  WITH  THE
1)	;	INCLUSION OF THE ABOVE  COPYRIGHT NOTICE.  THIS  SOFTWARE OR ANY  OTHER
1)	;	COPIES THEREOF MAY NOT BE PROVIDED  OR OTHERWISE MADE AVAILABLE TO  ANY
1)	;	OTHER PERSON.  NO  TITLE TO  AND OWNERSHIP  OF THE  SOFTWARE IS  HEREBY
1)	;	TRANSFERRED.
1)	;
1)	;	THE INFORMATION IN THIS  SOFTWARE IS SUBJECT  TO CHANGE WITHOUT  NOTICE
1)	;	AND SHOULD  NOT  BE CONSTRUED  AS  A COMMITMENT  BY  DIGITAL  EQUIPMENT
1)	;	CORPORATION.
1)	;

; TCPBBN.MAC.1 & <MONITOR>TCPBBN.MAC.1 24-Feb-89 1913	PAGE 2


1)	;	DIGITAL ASSUMES NO  RESPONSIBILITY FOR  THE USE OR  RELIABILITY OF  ITS
1)	;	SOFTWARE ON EQUIPMENT THAT IS NOT SUPPLIED BY DIGITAL.
   {Skipped 1 page and 2 lines}
1)		SEARCH	ANAUNV,PROLOG
1)		TTITLE	(TCPBBN,TCPBBN,< - BBN TCP JSYS Interface Routines>)
1)	
1)	COMMENT	!
LINE 1, PAGE 2
2)	;THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY  BE  USED
2)	;OR COPIED ONLY IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
2)	;
2)	;COPYRIGHT  (C)  DIGITAL  EQUIPMENT  CORPORATION  1976, 1985.
2)	;ALL RIGHTS RESERVED.
2)	
2)	
2)		SEARCH	ANAUNV,PROLOG
2)		TTITLE	(TCPBBN,TCPBBN,< - BBN TCP JSYS Interface Routines>)
2)		IFNDEF REL6,<REL6==1>
2)	
2)	COMMENT	!


LINE 16, PAGE 2
1)		XSWAPCD
1)	
1)	STSFLG==TCP%IX!TCP%NI!TCP%NT!TCP%SD!TCP%ST!TCP%SY!TCP%TV ; Frequent constant
1)	
1)	^L	Subttl	Table of Contents
1)	
1)	;		     Table of Contents for TCPBBN
1)	;
1)	;				  Section		      Page
1)	;
1)	;
1)	;    1. Send JSYS - Send a Buffer  . . . . . . . . . . . . . .   4
1)	;    2. Send JSYS - Send a Buffer - Second Phase . . . . . . .   5
1)	;    3. SETURP - Setup Urgent Pointer  . . . . . . . . . . . .   7
1)	;    4. RECV JSYS - Receive a Buffer . . . . . . . . . . . . .   8
1)	;    5. RECV JSYS - Receive a Buffer - Second Phase  . . . . .   9
1)	;    6. OPEN JSYS - Open a Connection  . . . . . . . . . . . .  10
1)	;    7. OPEN JSYS - Open a Connection - Second Phase . . . . .  11
1)	;    8. CLOSE JSYS - Close a Connection  . . . . . . . . . . .  13
1)	;    9. ABORT JSYS - Abandon this end of a connection  . . . .  14
1)	;   10. ABTJCS - Abort JCNs for Forks  . . . . . . . . . . . .  15
1)	;   11. ABTBUF - Abort Buffers Associated with Forks . . . . .  16
1)	;   12. ABTJCN - Abort a JCN . . . . . . . . . . . . . . . . .  17
1)	;   13. ABTTCB - Abort a TCB . . . . . . . . . . . . . . . . .  18
1)	;   14. STAT JSYS - Get status of a connection or a TCB  . . .  20
1)	;   15. STAT JSYS - Get status of a connection - Second Phase   22
1)	;   16. STATNM - Symbolic Routines . . . . . . . . . . . . . .  23
1)	;   17. SRCH - Exact Match Binary Search Routine . . . . . . .  24

; TCPBBN.MAC.1 & <MONITOR>TCPBBN.MAC.1 24-Feb-89 1913	PAGE 3


1)	;   18. Symbolic STAT Tables . . . . . . . . . . . . . . . . .  25
1)	;   19. CHANL - Set TCP Event Interrupt Channels . . . . . . .  26
1)	;   20. SCSLV JSYS - Set Connection Security Level . . . . . .  27
1)	;   21. TCP Portion of ATNVT JSYS  . . . . . . . . . . . . . .  28
1)	;   22. ACTTCB - Activate a Connection . . . . . . . . . . . .  31
1)	;   23. CHKARG - Check BBN TCP JSYS Arguments  . . . . . . . .  33
1)	;   24. CHKJCN - See if caller has access to JCN . . . . . . .  37
1)	;   25. GETJCN - Assign a Job Connection Number  . . . . . . .  38
1)	;   26. RETJCN - Free a Job Connection Number  . . . . . . . .  39
1)	;   27. MAKBFR - Make a Buffer Descriptor  . . . . . . . . . .  40
1)	;   28. FREBFR - Release Resources Used By a Buffer  . . . . .  43
1)	;   29. End of TCPBBN  . . . . . . . . . . . . . . . . . . . .  45
1)	^L	SUBTTL Send JSYS - Send a Buffer
LINE 22, PAGE 2
2)	IFE REL6,<SWAPCD>
2)	IFN REL6,<XSWAPCD>
2)	
2)	STSFLG==TCP%IX!TCP%NI!TCP%NT!TCP%SD!TCP%ST!TCP%SY!TCP%TV ; Frequent constant
2)	
2)	^L	SUBTTL Send JSYS - Send a Buffer


LINE 11, PAGE 4
1)		XNENT (.SEND,G)
1)		MCENT			; Enter monitor context
LINE 11, PAGE 3
2)	IFE REL6,<.SEND::>
2)	IFN REL6,<XNENT .SEND,G>
2)		MCENT			; Enter monitor context


LINE 9, PAGE 8
1)		XNENT (.RECV,G)
1)		MCENT			; Enter monitor context
LINE 9, PAGE 7
2)	IFE REL6,<.RECV::>
2)	IFN REL6,<XNENT .RECV,G>
2)		MCENT			; Enter monitor context


LINE 10, PAGE 10
1)		XNENT (.OPEN,G)
1)		MCENT			; Enter the monitor context
LINE 10, PAGE 9
2)	IFE REL6,<.OPEN::>
2)	IFN REL6,<XNENT .OPEN,G>
2)		MCENT			; Enter the monitor context


; TCPBBN.MAC.1 & <MONITOR>TCPBBN.MAC.1 24-Feb-89 1913	PAGE 4



LINE 40, PAGE 10
1)		  S1XCT <GTOKM (.GOANA,<T1,T2>,[RETERR ()])> ; ask ACJ for its blessing
1)		ENDIF.
LINE 41, PAGE 9
2)		  IFN REL6,<S1XCT <GTOKM (.GOANA,<T1,T2>,[RETERR ()])>> ; ask ACJ for its blessing
2)		  IFE REL6,<GTOKM (.GOANA,<T1,T2>,[RETERR ()])> ; ask ACJ for its blessing
2)		ENDIF.


LINE 10, PAGE 13
1)		XNENT (.CLOSE,G)
1)		MCENT			; Enter the monitor context
LINE 10, PAGE 12
2)	IFE REL6,<.CLOSE::>
2)	IFN REL6,<XNENT .CLOSE,G>
2)		MCENT			; Enter the monitor context


LINE 8, PAGE 14
1)		XNENT (.ABORT,G)
1)		MCENT			; Enter monitor context
LINE 8, PAGE 13
2)	IFE REL6,<.ABORT::>
2)	IFN REL6,<XNENT .ABORT,G>
2)		MCENT			; Enter monitor context


LINE 7, PAGE 15
1)		XNENT (ABTJCS,G)
1)		SKIPE TCPON		; TCP enabled?
LINE 7, PAGE 14
2)	IFE REL6,<ABTJCS::>
2)	IFN REL6,<XNENT ABTJCS,G>
2)		SKIPE TCPON		; TCP enabled?


LINE 6, PAGE 16
1)		XNENT (ABTBUF,G)
1)		SAVET			; KSELF code requires this
LINE 6, PAGE 15
2)	IFE REL6,<ABTBUF::>
2)	IFN REL6,<XNENT ABTBUF,G>
2)		SAVET			; KSELF code requires this


; TCPBBN.MAC.1 & <MONITOR>TCPBBN.MAC.1 24-Feb-89 1913	PAGE 5



LINE 32, PAGE 17
1)		CALLX (MSEC1,ABTJC6)	; Check owner inferior to object fork
1)		 EXIT ABTJCX		; Should not kill it
LINE 32, PAGE 16
2)		 IFE REL6,<CALL SKIIFA>	; Check owner inferior to object fork
2)		 IFN REL6,<CALLX (MSEC1,ABTJC6)> ; Check owner inferior to object fork
2)		  EXIT ABTJCX		; Should not kill it


LINE 40, PAGE 17
1)		SWAPCD 		   	; why look at SKIIFA
LINE 41, PAGE 16
2)	IFN REL6,<			; this is in section one.  if you want to know
2)		SWAPCD 		   	; why look at SKIIFA


LINE 46, PAGE 17
1)		XSWAPCD
1)	
1)	^L	SUBTTL ABTTCB - Abort a TCB
LINE 47, PAGE 16
2)		XSWAPCD>		; end of IFN REL6
2)	
2)	^L	SUBTTL ABTTCB - Abort a TCB


LINE 18, PAGE 19
1)		XSWAPCD
1)	
1)	^L	SUBTTL STAT JSYS - Get status of a connection or a TCB
LINE 18, PAGE 18
2)	IFE REL6,<SWAPCD>
2)	IFN REL6,<XSWAPCD>
2)	
2)	^L	SUBTTL STAT JSYS - Get status of a connection or a TCB


LINE 13, PAGE 20
1)		XNENT (.STAT,G)
1)		MCENT			; Enter monitor context
LINE 13, PAGE 19
2)	IFE REL6,<.STAT::>
2)	IFN REL6,<XNENT .STAT,G>
2)		MCENT			; Enter monitor context


; TCPBBN.MAC.1 & <MONITOR>TCPBBN.MAC.1 24-Feb-89 1913	PAGE 6



LINE 12, PAGE 26
1)		XNENT (.CHANL,G)
1)		MCENT			; Enter monitor context
LINE 12, PAGE 25
2)	IFE REL6,<.CHANL::>
2)	IFN REL6,<XNENT .CHANL,G>
2)		MCENT			; Enter monitor context


LINE 11, PAGE 27
1)		XNENT (.SCSLV,G)
1)		MCENT
LINE 11, PAGE 26
2)	IFE REL6,<.SCSLV::>
2)	IFN REL6,<XNENT .SCSLV,G>
2)		MCENT


LINE 35, PAGE 29
1)		CALLX (MSEC1,ASNTVT)	; Assign a virtual terminal
1)	         JRST TATNV8		; Failed (no TVT available, etc)
LINE 35, PAGE 28
2)		IFE REL6,<CALL ASNTVT>	; Assign a virtual terminal
2)		IFN REL6,<CALLX (MSEC1,ASNTVT)> ; Assign a virtual terminal
2)	         JRST TATNV8		; Failed (no TVT available, etc)


LINE 4, PAGE 35
1)		CALLX (MSEC1,CHKTVT)	; Check if valid TVT
1)		  JRST CHKART		; Lose
1)		CALLX (MSEC1,TVTCHK)	; Get (locked) data base
1)		  JRST CHKARU		; Not fully active
LINE 4, PAGE 34
2)		IFE REL6,<CALL CHKTVT> 	; Check if valid TVT
2)		IFN REL6,<CALLX (MSEC1,CHKTVT)>	; Check if valid TVT
2)		  JRST CHKART		; Lose
2)		IFE REL6,<CALL TVTCHK> 	; Get (locked) data base
2)		IFN REL6,<CALLX (MSEC1,TVTCHK)> ; Get (locked) data base
2)		  JRST CHKARU		; Not fully active


; TCPBBN.MAC.1 & <MONITOR>TCPBBN.MAC.1 24-Feb-89 1913	PAGE 7



LINE 15, PAGE 41
1)		LOAD T1,FKUP%,(T1)	; get UPT SPT slot
1)		LOAD T2,SPTSHC,(T1)	; get the share count on the spt slot
LINE 15, PAGE 40
2)	IFN REL6,<LOAD T1,FKUP%,(T1)>	; get UPT SPT slot
2)	IFE REL6,<HLRZ T1,FKPGS(T1)>	; get UPT SPT slot
2)		LOAD T2,SPTSHC,(T1)	; get the share count on the spt slot


LINE 1, PAGE 45
1)	^L	SUBTTL End of TCPBBN
1)		TNXEND
LINE 22, PAGE 43
2)		TNXEND
