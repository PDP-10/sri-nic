% This file defines characters common to roman and italic text fonts
% that do not appear in non-ligature fonts.
% Character codes \040, \042, \055, \100, \134, \136, \137 are used.
if ligs<2: "The atsign that replaced the Scandinavian letter o-slash";
call charbegin('040,9,0,0,ph,0,.5ph.slant+.5pw-.5pu);
if fudge1: new w0,w1;	% lines will be thinner in fudged styles
	w0=round(fudge.fudge.pixels.pw+blacker);
	w1=round(fudge.fudge.pixels.pwi+blacker);
fi;
hpen; x1=x8=x10=.5r; x2=good1 4u; x3=x4=x5=r-x2;
lft0x9=round u; x7=x11=x12=r-x9; x6=5/12[x5,x7];
top0y8=h+oo; bot0y10=-oo; y9=y10;
y1=good6 .8[y10,y8]; y2=y3=y6=good6 .2[y10,y8];
y7=.5[y10,y8]; y11=good6 .1[y10,y8]; y12=.9[y10,y8];
y4=.8[y2,y1]; y5=2/3[y7,y6];
call `a darc(1,2,w1);	% left part of inner bowl
call `b darc(1,3,w0);	% right part of inner bowl
draw |w1|4..|w1#|5{0,-1}..|w0#|6{1,0}..7{0,1};	% stem and link
call `c arc(8,7,w0);	% right part of outer bowl
call `d darc(8,9,w0);	% left part of outer bowl
w0 draw 10{1,0}..11(..12);	% point
if fudge1: new w0,w1;	% restore normal sizes in fudged styles
	w0=round(pixels.pw+blacker); w1=round(pixels.pwi+blacker);
fi;
fi.
"Closing quotes";
call charbegin('042,9,0,0,ph,0,ph.slant+.5pwiii-2.5pu);
new w99;
if w3<w0 sqrt 2: w99=round w0 sqrt 2;
else: w99=w3;
fi;
x1=x2=good99 3u; x3=x4=r-x1;
cpen; top99y1=h; y2=.5[e,m]; y3=y1; y4=y2;
call `a cdraw(1,2,99,0);	% left stem
call `b cdraw(3,4,99,0);	% right stem
fi.
"Hyphen";
call charbegin('055,fixwidth[6,9],0,0,px,0,.5px.slant-.5pu);
vpen; y1=y2=.5m;
if fixwidth=0: lft7x1=0; rt7x2=r-u;
else: lft7x1=1.5u; x2=r-x1;
fi;
w7 draw 1..2.	% bar
if ligs<3: "The atsign that replaced the Scandinavian letter O-slash";
call charbegin('100,14,0,0,ph,0,.5ph.slant+.5pw-.5pu);
if fudge1: new w0,w1;	% lines will be thinner in fudged styles
	w0=round(fudge.fudge.pixels.pw+blacker);
	w1=round(fudge.fudge.pixels.pwi+blacker);
fi;
hpen; x1=x8=x10=.5r; x2=good1 4u; x3=x4=x5=r-x2;
lft0x9=round u; x7=x11=x12=r-x9; x6=5/12[x5,x7];
top0y8=h+oo; bot0y10=-oo; y9=y10;
y1=good6 .8[y10,y8]; y2=y3=y6=good6 .2[y10,y8];
y7=.5[y10,y8]; y11=good6 .1[y10,y8]; y12=.9[y10,y8];
y4=.8[y2,y1]; y5=2/3[y7,y6];
call `a darc(1,2,w1);	% left part of inner bowl
call `b darc(1,3,w0);	% right part of inner bowl
draw |w1|4..|w1#|5{0,-1}..|w0#|6{1,0}..7{0,1};	% stem and link
call `c arc(8,7,w0);	% right part of outer bowl
call `d darc(8,9,w0);	% left part of outer bowl
w0 draw 10{1,0}..11(..12);	% point
if fudge1: new w0,w1;	% restore normal sizes in fudged styles
	w0=round(pixels.pw+blacker); w1=round(pixels.pwi+blacker);
fi;
fi.
"Opening quotes";
call charbegin('134,9,0,0,ph,0,ph.slant+.5pwiii-2.5pu);
new w99;
if w3<w0 sqrt 2: w99=round w0 sqrt 2;
else: w99=w3;
fi;
x1=x2=good99 3u; x3=x4=r-x1;
cpen; top99y1=h; y2=.5[e,m]; y3=y1; y4=y2;
call `a cdraw(1,2,99,0);	% left stem
call `b cdraw(3,4,99,0);	% right stem
fi.
"En dash";
call charbegin('136,9,0,0,px,0,.5px.slant+.5pu);
hpen; lft0x1=0; rt0x2=r; y1=y2=.5m;
w0 draw 1..2.	% bar
lig `-: `- = '136;
"Em dash";
call charbegin('137,18,0,0,px,0,.5px.slant+.5pu);
hpen; lft0x1=0; rt0x2=r; y1=y2=.5m;
w0 draw 1..2.	% bar
lig '136: `- = '137;
