O V E R V I E W

METAFONT is a font design program that was created by Don Knuth in 
conjunction with TEX, his mathematical typesetting system. 


"Computer Modern Sans Serif 10 point";
fontidentifier "CMSS"; ptsize=10;
ph=250/36; px=160/36; pe=90/36; pd=70/36;
pb=20/36; po=4/36; ps=20/36; pas=0; pa=.5(ph-pd);
pw=pwi=pwii=pwiii=1/2;
pwiv=pwv=1/2; aspect=7/8; pdel=4/36; fudge=.93;
pu=20/36; lcs=0; ucs=0; sc=1/2; ls=0;
slant=0; sqrttwo=sqrt 2; fixwidth=1; crisp=0;
phh=ph-.5po; phhh=.95ph; pssd=0; pdd=pd; varg=0; lowast=0; ligs=1.
input cmbase; call fontbegin;
input roman;
end

By convention, all of the parameters whose name begin with "p" are in 
units of printers' points. (A point is 1/72 of an inch.) First come 
eight parameters covering important vertical dimensions:

	ph is the h-height, the distance from the baseline to the top
		of an "h".
	px is the x-height, the distance from the baseline to the top
		of an "x".
	pe is the e-height, the distance from the baseline to the bar
		of an "e".
	pd is the descender depth, the distance from the baseline to 
		the bottom of a "p".
	pb is the border height; characters extend as much as ph + pb 
		above the baseline and pd + pb below it.
	po is the amount of overshoot for optical adjustmments at sharp
		corners; e.g., "A" is this much taller than "B".
	ps is the vertical distance at which serif bracketing is tangent
		to the stems.
	pa is the axis height, the distance from the baseline to the point
		where mathematical symbols like "+" and "=" have vertical
		symmetry.

Then there are seven parameters affecting the pen sizes:

	pw is the hairline width, used in the thinnest parts of letters.
	pwi is the stem width, used for the vertical strokes in an "h".
	pwii is the curve width, used in an "o" at its widest point.
	pwiii is the dot width, the diameter of the dot on an "i".
	pwiv is the upper-case stem width, used for hte vertical strokes 
		in an "H".
	pwv is the upper-case curve width, used in an "O" at its widest
		point.
	aspect is the ratio of a hairline pen's width to its height.

Next come four parameters concerning horizontal dimensions:

	pu is the unit width, 1/18 of an em.
	lcs is the amount by which serifs of lower-case letters project 
		from the stems, in units of pu.
	ucs is the amount by which serifs of upper-case letters project
		from the stems, in units of pu.
	sc is the serif correction in units of pu; each letter specifies
		multiples of sc by which its width is to be decreased at 
		the left and the right.

Finally, we have muscellaneous parameters that control special effects.
	slant is the amount of additional increase in x per unit increase 
		in y, used to slant letters either forwards or backwards.
	sqrttwo is used to control the ellipticity of the bowls of letters.
	fixwidth is a boolean that determines whether METAFONT should 
		create a fixed width or variable width font.
	halfd is nonzero if certain characters like"," are to descend only
		half as far as lower-case letters do.
	varg controls the shape of the letter "g". If it is nonzero, the 
		simple form replaces the classical form.
	ligs seems to be used to select between producing TEX standard
		Roman and TEX typewritter fonts.

I don't know what crisp, phh, phhh, pssd, pdd, and lowast do.

Once the parameters are set, METAFONT initializes itself with the 
fontbegin procedure kept in cmbase.mf. Then, METAFONT calls Roman, a 
file that tells it where to find instructions on how to draw the various
characters in the alphabet: upper and lower case Roman characters,
punctuation, numerals, assorted ligatures, and the like.

S E V E R A L   W O R D S   A B O U T   F O N T S

The routine MF.MIC is a convenient way to generate fonts.  Just type 

DO MF <font-name>,<magnification>

where the <font-name> need not have an extension and <magnification> is a
real number between .5 and 99.0.  For example, DO MF CMR10,1.2 would give
the computer modern roman 10pt font expanded to 12pt.


H O W  T O  I N S T A L L  M E T A F O N T

The conditional compilation switches for METAFONT are in MFHDR.SAI.  After
setting these switches for your installation, it is necessary to compile
the modules MFNTRP, MFOUT, and MFRAST.  Then execute MFPRE to initialize
the system tables, and MFSYS to get an executable module.  Afterwards the
table and all the symbol and relocatable files may be deleted.

An example of program installation is provided below.

[PHOTO:  Recording initiated  Wed 25-Nov-81 2:44PM]

@dirECTORY (OF FILES) mf*

   PS:<TEX.SOURCES>
 MFBASE.SAI.1
 MFF20.SAI.1
 MFHDR.SAI.1
 MFNTRP.SAI.1
 MFOUT.SAI.1
 MFPRE.SAI.1
 MFRAST.SAI.1
 MFSYS.SAI.1

 Total of 123 pages in 8 files
@compile (FROM) mfntrp.sai
SAIL:   MFNTRP.SAI.1 1
      MFHDR.SAI.1 1 2 3 4 5 6
 2
      MFBASE.SAI.1 1 2 3 4 5
 3 4
      MFF20.SAI.1 1
 5 6 7 8 9 10
@compILE (FROM) mfout.sai
SAIL:   MFOUT.SAI.1 1
      MFHDR.SAI.1 1 2 3 4 5 6
 2 3 4 5 6 7 8 9 10 11 12 13
@compile (FROM) mfrast.sai
SAIL:   MFRAST.SAI.1 1
      MFHDR.SAI.1 1 2 3 4 5 6
 2 3
The raster contains 17319 words
 4 5 6 7 8 9 10
@exECUTE (FROM) mfpre.sai
SAIL:   MFPRE.SAI.1 1
      MFHDR.SAI.1 1 2 3 4 5 6
 2 3 4
LINK:   Loading
[LNKXCT MFPRE execution]

METAFONT's tables written on MFINI.TBL.
End of SAIL execution
@exECUTE (FROM) mfsys.sai
SAIL:   MFSYS.SAI.1 1
      MFHDR.SAI.1 1 2 3 4 5 6
 2 3 4 5 6 7
LINK:   Loading
[LNKXCT MF execution]
OK, METAFONT's tables have been initialized. Please SAVE the core image.
End of SAIL execution
@save (ON FILE) <tex>mf.exe
 <TEX>MF.EXE.1 Saved
@delETE (FILES) *.rel,*.sm1,*.tbl
 MFNTRP.REL.1 [OK]
 MFOUT.REL.1 [OK]
 MFPRE.REL.1 [OK]
 MFRAST.REL.1 [OK]
 MFSYS.REL.1 [OK]
 MFNTRP.SM1.1 [OK]
 MFOUT.SM1.1 [OK]
 MFPRE.SM1.1 [OK]
 MFRAST.SM1.1 [OK]
 MFSYS.SM1.1 [OK]
 MFINI.TBL.1 [OK]
@pop

[PHOTO:  Recording terminated Wed 25-Nov-81 2:54PM]
