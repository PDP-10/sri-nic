@DEFINE SYS: SYSTS:,SYS:
@define R: dsk:

! Identify the location of our source files
! 
@SET TRAP FILE-OPENING

!
! First build standard KL BOOT
!
BOOT::
@COMPILE /CREF /COMP R:SYSFLG.MAC+R:BOOT.MAC BOOT
@LINK
*/NOSYM
*/SET:.LOW.:40000
*BOOT,DXMCA.RMC/G
@CSAVE BOOT 40000
@R RSXFMT
*CONVERT BOOT.EXE BOOT.EXB
@CREF
!
! Make standard KL MTBOOT next.
!
MTBOOT::
@COMPILE /COMP R:SYSFLG.MAC+R:PMT.MAC+R:BOOT MTBOOT
@LINK
*/NOSYM
*/SET:.LOW.:40000
*MTBOOT,DXMCA.RMC/G
@CSA MTBOOT 40000
@R RSXFMT
*CONVERT MTBOOT.EXE MTBOOT.EXB
!
! Now build KL BOOT with RP20 microcode
!
RP2DBT::
@COMPILE /COMP R:SYSFLG.MAC+R:RP2.MAC+R:BOOT.MAC RP2DBT
@LINK
*/NOSYM
*/SET:.LOW.:40000
*RP2DBT,DXMCA.RMC,DXMCE.RMC/G
@CSAVE RP2DBT 40000
@R RSXFMT
*CONVERT RP2DBT.EXE RP2DBT.EXB
!
! Make MTBOOT with RP20 Microcode
!
RP2MBT::
@COMPILE /COMP R:SYSFLG.MAC+R:PMT.MAC+R:RP2.MAC+R:BOOT RP2MBT
@LINK
*/NOSYM
*/SET:.LOW.:40000
*RP2MBT,DXMCA.RMC,DXMCE.RMC/G
@CSA RP2MBT 40000 
@R RSXFMT
*CONVERT RP2MBT.EXE RP2MBT.EXB


FIN::
!
! Take checksummed directory of files
!
@VDIRECT BOOT.EXB,MTBOOT.EXB,RP2DBT.EXB,RP2MBT.EXB,
@CHECK SEQ
@
!
! Identify the BOOT version #
!
@GET BOOT.EXE
@SET ENTRY-VECTOR 40000 3
@I VER
@

! End of BOOT.CTL
