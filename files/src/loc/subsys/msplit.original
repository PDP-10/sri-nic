	title	MSPLIT Split a large mail file into manageble pieces
	search	monsym,macsym

P==17
OFI== 10			;Output file index	

opdef halt [ercal FILERR]

INFILE:	asciz/MAIL.TXT.1/
	block 5			;space for patching for testing
TMPFIL:	asciz/MAIL.TMP.-1/
OUTFIL:	[asciz/MAIL1.TXT.1/]	;table of file names for the new short 
	[asciz/MAIL2.TXT.1/]	; mail files.  Each file is output until
	[asciz/MAIL3.TXT.1/]	; its size exceeds 250 pages, at which
	[asciz/MAIL4.TXT.1/]	; point, we step to the next file.  When
	[asciz/MAIL5.TXT.1/]	; we reach the end of the original mail
	[asciz/MAIL6.TXT.1/]	; file, the current output file is renamed
	[asciz/MAIL7.TXT.1/]	; to MAIL.TXT (since it contains the most
	[asciz/MAIL8.TXT.1/]	; recent messages).
	[asciz/MAIL9.TXT.1/]
	[asciz/MAIL10.TXT.1/]


start:	move	p,[iowd 20,[repeat 20,<"STACK">]]
getin:
;
;	First we open up the old mail file (MAIL.TXT.1) in exclusive
;	access mode, so that no new mail will arive while we are munging
;	the file. (though I dont think that would cause problems anyway.
;
	movsi	1,(GJ%SHT!GJ%OLD)
	hrroi	2,INFILE
	gtjfn
	 halt
	movem	1,INJFN
	move	2,[7b5+OF%RD+OF%AWT+OF%RTD] ;wait for exclusive access
	openf
	 halt
	sizef			; get the file size
	 setz	3,
	cail	3,^d250		; see if it is already small enough (???)
	 jrst	SPLIT		; Nope, we will have to split it.
	hrroi	1,[asciz/
Your mail file is already small enough to be read by MM.
/]
	psout
	move	1,INJFN
	closf
	 move	1,INJFN
	rljfn
	 trn
	haltf
	jrst	.-1


SPLIT:	setz	OFI,		;start with first output file.
NEXT:	setzm	LENGTH		; message file has 0 chars so far
	hrro	2,OUTFIL(OFI)	;get pointer to this file name.
	movsi	1,(GJ%SHT!GJ%NEW)
	gtjfn			;get jfn for output file
	 halt
	move	2,[7b5+of%wr+OF%RTD]	;also exclusive access
	openf
	 halt
	movem	1,OUTJFN#

MSGBEG:	move	1,INJFN
	hrroi	2,buffer
SKPLIN:	push	P,2		;save byte pointer at beginning of line
	movei	3,^d100		;maximum of 100 chars
	movei	4,12		; up until a line feed
	sin
	 ercal	DONE
	movni	3,(3)		;computer how many characters we read
	addi	3,^d100		; by subtracting space left from 100.
	addm	3,LENGTH	; add to total size of new file.
	exch	2,(P)		;save new pointer, get old one
	move	1,2
	setz	2,
	idtim
	 call	prserr		;not a date = error
	ldb	2,1		;get next character
	caie	2,","		;should be a comma
	 call	prserr
	movei	3,12		;get the message length
	nin
	 ercal	PRSERR
	push	P,2		;save the length
	ldb	2,1		;get next character
	caie	2,";"		;should be a semicolon
	 call	prserr
	movei	3,10		;now get the message flags,
	nin			;which are a long octal number
	 ercal	PRSERR
;	ldb	2,1		;get next character
;	caie	2,12		;better be a carriage return/line feed
;	 call	prserr
	pop	P,3		;get back character count of message
	addm	3,LENGTH
	movn	3,3		;input exactly that many characters
	pop	P,2		;to location of old byte ptr
	move	1,INJFN
	sin
	 ercal	PRSERR
	move	3,LENGTH	;get message
	camg	3,[^d240 * 5 * 1000]	;240 pages of text yet ?
	jrst	SKPLIN		;no, get next message.

SAVFIL:
;
;	Save the currently collected text as the current mail file
;
	hrroi	1,[asciz/
Outputting file: /]
	psout			;notify the user
	hrro	1,OUTFIL(OFI)
	psout
	move	1,OUTJFN	;get current output file
	hrroi	2,BUFFER	;get beginning of collected text
	movn	3,LENGTH	;and its total length
	sout			;output the new mail file.
	 ercal	OUTERR		;could be over quota or something
	closf			;close file
	 trn
	aoja	OFI,NEXT	;goto next file, and continue.

FILERR:	push	P,1
	hrroi	1,[asciz/File open error - /]
	esout
	jrst	JSYSER

OUTERR:	push	P,1		;save register for debugging
	hrroi	1,[asciz/Error writing file - /]
	esout
	jrst	jsyser

PRSERR:	push	P,1		;save register for debugging
	hrroi	1,[asciz/Error parsing input mail file - /]
	esout
JSYSER:	push	P,2
	push	P,3
TJERR:	movei	1,.priou
	hrloi	2,.fhslf	;get this forks last error code
	setz	3,		; (could be infinite length)
	erstr
	 trn
	  trn
	haltf
	pop	P,3		;restore registers for debugging
	pop	P,2
	pop	P,1
	haltf
	jrst	.-1

DONE:	push	P,1
	push	P,2
	push	P,3	
	caie	3,^d100		;should have read 0 characters
	 call	prserr
	gtsts			;get file status
	txnn	2,GS%EOF	;end of file ?
	 call	PRSERR		; no: error has occured!
	hrroi	1,[asciz/
Finished.  Writing out new MAIL.TXT file./]
	psout
	move	1,INJFN
	tlo	1,(CO%NRJ)	;close file for input
	closf
	 trn
	move	1,INJFN
	move	2,[OF%WR!OF%AWT!OF%RTD + 7b5]
	openf			;open it for writing.
	 halt
	hrroi	2,buffer	;push to beginning of buffer.
	movn	3,LENGTH	;accumulated size of last file
	sout
	 ercal	OUTERR
	closf
	 seto	1,
	rljfn	
	 trn
	reset
	haltf
	jrst	.-1

length:	0			;length of accumulated mail file.
INJFN:	0
OUTJFN:	0

lit
var

BUFFER:	block 1000		;BUFFER will expand to cover about 250 pages

	end start
